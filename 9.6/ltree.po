# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-06-27 17:40+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: ltree.xml:5(title)
msgctxt "title"
msgid "ltree"
msgstr "ltree"

#: ltree.xml:7(indexterm)
msgid "<primary>ltree</primary>"
msgstr "<primary>ltree</primary>"

#: ltree.xml:11(para)
msgid ""
"This module implements a data type <type>ltree</type> for representing "
"labels of data stored in a hierarchical tree-like structure. Extensive "
"facilities for searching through label trees are provided."
msgstr ""
"Этот модуль реализует тип данных <type>ltree</type> для представления меток "
"данных в иерархической древовидной структуре. Он также предоставляет "
"расширенные средства для поиска в таких деревьях."

#: ltree.xml:18(title)
msgid "Definitions"
msgstr "Определения"

#: ltree.xml:20(para)
msgid ""
"A <firstterm>label</firstterm> is a sequence of alphanumeric characters and "
"underscores (for example, in C locale the characters <literal>A-Za-z0-9_</"
"literal> are allowed). Labels must be less than 256 bytes long."
msgstr ""
"<firstterm>Метка</firstterm> — это последовательность алфавитно-цифровых "
"символов и знаков подчёркивания (например, в локали C допускаются символы "
"<literal>A-Za-z0-9_</literal>). Метки должны занимать меньше 256 байт."

#: ltree.xml:27(para)
msgid "Examples: <literal>42</literal>, <literal>Personal_Services</literal>"
msgstr "Примеры: <literal>42</literal>, <literal>Personal_Services</literal>"

#: ltree.xml:31(para)
msgid ""
"A <firstterm>label path</firstterm> is a sequence of zero or more labels "
"separated by dots, for example <literal>L1.L2.L3</literal>, representing a "
"path from the root of a hierarchical tree to a particular node. The length "
"of a label path must be less than 65Kb, but keeping it under 2Kb is "
"preferable. In practice this is not a major limitation; for example, the "
"longest label path in the DMOZ catalog (<ulink url=\"http://www.dmoz.org\"/"
">) is about 240 bytes."
msgstr ""
"<firstterm>Путь метки</firstterm> — это последовательность из нуля или более "
"меток, разделённых точками, (например, <literal>L1.L2.L3</literal>), "
"представляющая путь от корня иерархического дерева к конкретному узлу. Длина "
"пути метки должна быть меньше 65 КБ, но лучше, если она будет в пределах 2 "
"КБ. На практике это ограничение не является критичным; например, самый "
"длинный путь в каталоге DMOZ (<ulink url=\"http://www.dmoz.org\"/>) имеет "
"длину около 240 байт."

#: ltree.xml:41(para)
msgid "Example: <literal>Top.Countries.Europe.Russia</literal>"
msgstr "Пример: <literal>Top.Countries.Europe.Russia</literal>"

#: ltree.xml:45(para)
msgid "The <filename>ltree</filename> module provides several data types:"
msgstr ""
"Модуль <filename>ltree</filename> предоставляет несколько типов данных:"

#: ltree.xml:51(para)
msgid "<type>ltree</type> stores a label path."
msgstr "<type>ltree</type> хранит путь метки."

#: ltree.xml:57(para)
msgid ""
"<type>lquery</type> represents a regular-expression-like pattern for "
"matching <type>ltree</type> values. A simple word matches that label within "
"a path. A star symbol (<literal>*</literal>) matches zero or more labels. "
"For example: <synopsis>foo         <lineannotation>Match the exact label "
"path <literal>foo</literal></lineannotation>\n"
"*.foo.*     <lineannotation>Match any label path containing the label "
"<literal>foo</literal></lineannotation>\n"
"*.foo       <lineannotation>Match any label path whose last label is "
"<literal>foo</literal></lineannotation></synopsis>"
msgstr ""
"<type>lquery</type> представляет напоминающий регулярные выражения запрос "
"для поиска нужных значений <type>ltree</type>. Простое слово выбирает путь с "
"этой меткой. Звёздочка (<literal>*</literal>) выбирает ноль или более меток. "
"Например: <synopsis>foo         <lineannotation>Выбирает в точности путь "
"метки <literal>foo</literal></lineannotation>\n"
"*.foo.*     <lineannotation>Выбирает путь, содержащий метку <literal>foo</"
"literal></lineannotation>\n"
"*.foo       <lineannotation>Выбирает путь, в котором последняя метка "
"<literal>foo</literal></lineannotation></synopsis>"

#: ltree.xml:67(para)
msgid ""
"Star symbols can also be quantified to restrict how many labels they can "
"match: <synopsis>*{<replaceable>n</replaceable>}        "
"<lineannotation>Match exactly <replaceable>n</replaceable> labels</"
"lineannotation>\n"
"*{<replaceable>n</replaceable>,}       <lineannotation>Match at least "
"<replaceable>n</replaceable> labels</lineannotation>\n"
"*{<replaceable>n</replaceable>,<replaceable>m</replaceable>}      "
"<lineannotation>Match at least <replaceable>n</replaceable> but not more "
"than <replaceable>m</replaceable> labels</lineannotation>\n"
"*{,<replaceable>m</replaceable>}       <lineannotation>Match at most "
"<replaceable>m</replaceable> labels &mdash; same as </lineannotation> *{0,"
"<replaceable>m</replaceable>}</synopsis>"
msgstr ""
"Звёздочке можно также добавить числовую характеристику, ограничивающую число "
"потенциально совпадающих меток: <synopsis>*{<replaceable>n</"
"replaceable>}        <lineannotation>Выбирает ровно <replaceable>n</"
"replaceable> меток</lineannotation>\n"
"*{<replaceable>n</replaceable>,}       <lineannotation>Выбирает не меньше "
"<replaceable>n</replaceable> меток</lineannotation>\n"
"*{<replaceable>n</replaceable>,<replaceable>m</replaceable>}      "
"<lineannotation>Выбирает не меньше <replaceable>n</replaceable> и не больше "
"<replaceable>m</replaceable> меток</lineannotation>\n"
"*{,<replaceable>m</replaceable>}       <lineannotation>Выбирает не больше "
"<replaceable>m</replaceable> меток &mdash; то же самое, что и </"
"lineannotation> *{0,<replaceable>m</replaceable>}</synopsis>"

#: ltree.xml:76(para)
msgid ""
"There are several modifiers that can be put at the end of a non-star label "
"in <type>lquery</type> to make it match more than just the exact match: "
"<synopsis>@           <lineannotation>Match case-insensitively, for example "
"<literal>a@</literal> matches <literal>A</literal></lineannotation>\n"
"*           <lineannotation>Match any label with this prefix, for example "
"<literal>foo*</literal> matches <literal>foobar</literal></lineannotation>\n"
"%           <lineannotation>Match initial underscore-separated words</"
"lineannotation></synopsis> The behavior of <literal>%</literal> is a bit "
"complicated. It tries to match words rather than the entire label. For "
"example <literal>foo_bar%</literal> matches <literal>foo_bar_baz</literal> "
"but not <literal>foo_barbaz</literal>. If combined with <literal>*</"
"literal>, prefix matching applies to each word separately, for example "
"<literal>foo_bar%*</literal> matches <literal>foo1_bar2_baz</literal> but "
"not <literal>foo1_br2_baz</literal>."
msgstr ""
"В конце метки, отличной от звёздочки, в <type>lquery</type> можно добавить "
"модификаторы, чтобы найти что-то сложнее, чем точное соответствие: "
"<synopsis>@           <lineannotation>Выбирать метки без учёта регистра, "
"например, запросу <literal>a@</literal> соответствует <literal>A</literal></"
"lineannotation>\n"
"*           <lineannotation>Выбирать любую метку с данным префиксом, "
"например запросу <literal>foo*</literal> соответствует <literal>foobar</"
"literal></lineannotation>\n"
"%           <lineannotation>Выбирать начальные слова, разделённые "
"подчёркиваниями</lineannotation></synopsis> Поведение модификатора <literal>"
"%</literal> несколько нетривиальное. Он пытается найти соответствие по "
"словам, а не по всей метке. Например, запросу <literal>foo_bar%</literal> "
"соответствует <literal>foo_bar_baz</literal> но не <literal>foo_barbaz</"
"literal>. В сочетании с <literal>*</literal>, сопоставление префикса "
"применяется отдельно к каждому слову, например запросу <literal>foo_bar%*</"
"literal> соответствует <literal>foo1_bar2_baz</literal>, но не "
"<literal>foo1_br2_baz</literal>."

#: ltree.xml:91(para)
msgid ""
"Also, you can write several possibly-modified labels separated with "
"<literal>|</literal> (OR) to match any of those labels, and you can put "
"<literal>!</literal> (NOT) at the start to match any label that doesn't "
"match any of the alternatives."
msgstr ""
"Также вы можете записать несколько различных меток через знак <literal>|</"
"literal> (обозначающий ИЛИ) для выборки любой из этих меток, либо добавить "
"знак <literal>!</literal> (НЕ) в начале, чтобы выбрать все метки, не "
"соответствующие указанным альтернативам."

#: ltree.xml:100(programlisting)
#, no-wrap
msgid ""
"Top.*{0,2}.sport*@.!football|tennis.Russ*|Spain\n"
"a.  b.     c.      d.               e."
msgstr ""
"Top.*{0,2}.sport*@.!football|tennis.Russ*|Spain\n"
"a.  b.     c.      d.               e."

#: ltree.xml:98(para)
msgid ""
"Here's an annotated example of <type>lquery</type>: <placeholder-1/> This "
"query will match any label path that:"
msgstr ""
"Расширенный пример <type>lquery</type>: <placeholder-1/> Этот запрос выберет "
"путь, который:"

#: ltree.xml:106(para)
msgid "begins with the label <literal>Top</literal>"
msgstr "начинается с метки <literal>Top</literal>"

#: ltree.xml:111(para)
msgid "and next has zero to two labels before"
msgstr "и затем включает от нуля до двух меток до"

#: ltree.xml:116(para)
msgid ""
"a label beginning with the case-insensitive prefix <literal>sport</literal>"
msgstr ""
"метки, начинающейся с префикса <literal>sport</literal> (без учёта регистра)"

#: ltree.xml:121(para)
msgid ""
"then a label not matching <literal>football</literal> nor <literal>tennis</"
"literal>"
msgstr ""
"затем метку, отличную от <literal>football</literal> и <literal>tennis</"
"literal>"

#: ltree.xml:127(para)
msgid ""
"and then ends with a label beginning with <literal>Russ</literal> or exactly "
"matching <literal>Spain</literal>."
msgstr ""
"и заканчивается меткой, которая начинается подстрокой <literal>Russ</"
"literal> или в точности равна <literal>Spain</literal>."

#: ltree.xml:136(para)
msgid ""
"<type>ltxtquery</type> represents a full-text-search-like pattern for "
"matching <type>ltree</type> values. An <type>ltxtquery</type> value contains "
"words, possibly with the modifiers <literal>@</literal>, <literal>*</"
"literal>, <literal>%</literal> at the end; the modifiers have the same "
"meanings as in <type>lquery</type>. Words can be combined with <literal>&amp;"
"</literal> (AND), <literal>|</literal> (OR), <literal>!</literal> (NOT), and "
"parentheses. The key difference from <type>lquery</type> is that "
"<type>ltxtquery</type> matches words without regard to their position in the "
"label path."
msgstr ""
"<type>ltxtquery</type> представляет подобный полнотекстовому запрос поиска "
"подходящих значений <type>ltree</type>. Значение <type>ltxtquery</type> "
"содержит слова, возможно с модификаторами <literal>@</literal>, <literal>*</"
"literal>, <literal>%</literal> в конце; эти модификаторы имеют то же "
"значение, что и в <type>lquery</type>. Слова можно объединять символами "
"<literal>&amp;</literal> (И), <literal>|</literal> (ИЛИ), <literal>!</"
"literal> (НЕ) и скобками. Ключевое отличие от <type>lquery</type> состоит в "
"том, что <type>ltxtquery</type> выбирает слова независимо от их положения в "
"пути метки."

#: ltree.xml:150(programlisting)
#, no-wrap
msgid "Europe &amp; Russia*@ &amp; !Transportation"
msgstr "Europe &amp; Russia*@ &amp; !Transportation"

#: ltree.xml:148(para)
msgid ""
"Here's an example <type>ltxtquery</type>: <placeholder-1/> This will match "
"paths that contain the label <literal>Europe</literal> and any label "
"beginning with <literal>Russia</literal> (case-insensitive), but not paths "
"containing the label <literal>Transportation</literal>. The location of "
"these words within the path is not important. Also, when <literal>%</"
"literal> is used, the word can be matched to any underscore-separated word "
"within a label, regardless of position."
msgstr ""
"Пример <type>ltxtquery</type>: <placeholder-1/> Этот запрос выберет пути, "
"содержащие метку <literal>Europe</literal> или любую метку с начальной "
"подстрокой <literal>Russia</literal> (без учёта регистра), но не пути, "
"содержащие метку <literal>Transportation</literal>. Положение этих слов в "
"пути не имеет значения. Кроме того, когда применяется <literal>%</literal>, "
"слово может быть сопоставлено с любым другим отделённым подчёркиваниями "
"словом в метке, вне зависимости от его положения."

#: ltree.xml:162(para)
msgid ""
"Note: <type>ltxtquery</type> allows whitespace between symbols, but "
"<type>ltree</type> and <type>lquery</type> do not."
msgstr ""
"Замечание: <type>ltxtquery</type> допускает пробелы между символами, а "
"<type>ltree</type> и <type>lquery</type> — нет."

#: ltree.xml:169(title)
msgid "Operators and Functions"
msgstr "Операторы и функции"

#: ltree.xml:171(para)
msgid ""
"Type <type>ltree</type> has the usual comparison operators <literal>=</"
"literal>, <literal>&lt;&gt;</literal>, <literal>&lt;</literal>, <literal>&gt;"
"</literal>, <literal>&lt;=</literal>, <literal>&gt;=</literal>. Comparison "
"sorts in the order of a tree traversal, with the children of a node sorted "
"by label text. In addition, the specialized operators shown in <xref linkend="
"\"ltree-op-table\"/> are available."
msgstr ""
"Для типа <type>ltree</type> определены обычные операторы сравнения "
"<literal>=</literal>, <literal>&lt;&gt;</literal>, <literal>&lt;</literal>, "
"<literal>&gt;</literal>, <literal>&lt;=</literal>, <literal>&gt;=</literal>. "
"Сравнение сортирует пути в порядке движения по дереву, а потомки узла "
"сортируются по тексту метки. В дополнение к ним есть и специализированные "
"операторы, перечисленные в <xref remap=\"6\" linkend=\"ltree-op-table\"/>."

#: ltree.xml:181(title)
msgid "<type>ltree</type> Operators"
msgstr "Операторы <type>ltree</type>"

#: ltree.xml:186(entry)
msgid "Operator"
msgstr "Оператор"

#: ltree.xml:187(entry)
msgid "Returns"
msgstr "Возвращает"

#: ltree.xml:188(entry) ltree.xml:367(entry)
msgid "Description"
msgstr "Описание"

#: ltree.xml:194(type) ltree.xml:200(type) ltree.xml:206(type)
#: ltree.xml:212(type) ltree.xml:218(type) ltree.xml:224(type)
#: ltree.xml:230(type) ltree.xml:236(type) ltree.xml:242(type)
#: ltree.xml:243(type) ltree.xml:248(type) ltree.xml:249(type)
#: ltree.xml:254(type) ltree.xml:255(type) ltree.xml:260(type)
#: ltree.xml:266(type) ltree.xml:272(type) ltree.xml:278(type)
#: ltree.xml:320(type) ltree.xml:321(type) ltree.xml:326(type)
#: ltree.xml:327(type) ltree.xml:333(type) ltree.xml:339(type)
#: ltree.xml:376(type) ltree.xml:385(type) ltree.xml:397(type)
#: ltree.xml:436(type) ltree.xml:452(type) ltree.xml:461(type)
msgctxt "type"
msgid "ltree"
msgstr "ltree"

#: ltree.xml:194(literal) ltree.xml:260(literal) ltree.xml:278(literal)
msgid "@&gt;"
msgstr "@&gt;"

#: ltree.xml:195(type) ltree.xml:201(type) ltree.xml:207(type)
#: ltree.xml:213(type) ltree.xml:219(type) ltree.xml:225(type)
#: ltree.xml:231(type) ltree.xml:237(type) ltree.xml:261(type)
#: ltree.xml:267(type) ltree.xml:273(type) ltree.xml:279(type)
#: ltree.xml:285(type) ltree.xml:291(type) ltree.xml:297(type)
#: ltree.xml:303(type) ltree.xml:309(type) ltree.xml:315(type)
msgid "boolean"
msgstr "boolean"

#: ltree.xml:196(entry)
msgid "is left argument an ancestor of right (or equal)?"
msgstr "левый аргумент является предком правого (или равен ему)?"

#: ltree.xml:200(literal) ltree.xml:266(literal) ltree.xml:272(literal)
msgid "&lt;@"
msgstr "&lt;@"

#: ltree.xml:202(entry)
msgid "is left argument a descendant of right (or equal)?"
msgstr "левый аргумент является потомком правого (или равен ему)?"

#: ltree.xml:206(literal) ltree.xml:212(literal) ltree.xml:284(literal)
#: ltree.xml:290(literal)
msgid "~"
msgstr "~"

#: ltree.xml:206(type) ltree.xml:212(type) ltree.xml:284(type)
#: ltree.xml:290(type) ltree.xml:332(type)
msgid "lquery"
msgstr "lquery"

#: ltree.xml:208(entry) ltree.xml:214(entry)
msgid "does <type>ltree</type> match <type>lquery</type>?"
msgstr "значение <type>ltree</type> соответствует <type>lquery</type>?"

#: ltree.xml:218(literal) ltree.xml:224(literal) ltree.xml:296(literal)
#: ltree.xml:302(literal)
msgid "?"
msgstr "?"

#: ltree.xml:218(type) ltree.xml:224(type) ltree.xml:296(type)
#: ltree.xml:302(type)
msgid "lquery[]"
msgstr "lquery[]"

#: ltree.xml:220(entry) ltree.xml:226(entry)
msgid "does <type>ltree</type> match any <type>lquery</type> in array?"
msgstr ""
"значение <type>ltree</type> соответствует одному из <type>lquery</type> в "
"массиве?"

#: ltree.xml:230(literal) ltree.xml:236(literal) ltree.xml:308(literal)
#: ltree.xml:314(literal)
msgid "@"
msgstr "@"

#: ltree.xml:230(type) ltree.xml:236(type) ltree.xml:308(type)
#: ltree.xml:314(type) ltree.xml:338(type)
msgid "ltxtquery"
msgstr "ltxtquery"

#: ltree.xml:232(entry) ltree.xml:238(entry)
msgid "does <type>ltree</type> match <type>ltxtquery</type>?"
msgstr "значение <type>ltree</type> соответствует <type>ltxtquery</type>?"

#: ltree.xml:242(literal) ltree.xml:248(literal) ltree.xml:254(literal)
msgid "||"
msgstr "||"

#: ltree.xml:244(entry)
msgid "concatenate <type>ltree</type> paths"
msgstr "объединяет два пути <type>ltree</type>"

#: ltree.xml:248(type) ltree.xml:254(type) ltree.xml:444(type)
msgid "text"
msgstr "text"

#: ltree.xml:250(entry) ltree.xml:256(entry)
msgid "convert text to <type>ltree</type> and concatenate"
msgstr "преобразует текст в <type>ltree</type> и объединяет с путём"

#: ltree.xml:260(type) ltree.xml:266(type) ltree.xml:272(type)
#: ltree.xml:278(type) ltree.xml:284(type) ltree.xml:290(type)
#: ltree.xml:296(type) ltree.xml:302(type) ltree.xml:308(type)
#: ltree.xml:314(type) ltree.xml:320(type) ltree.xml:326(type)
#: ltree.xml:332(type) ltree.xml:338(type)
msgid "ltree[]"
msgstr "ltree[]"

#: ltree.xml:262(entry) ltree.xml:268(entry)
msgid "does array contain an ancestor of <type>ltree</type>?"
msgstr "массив содержит предка <type>ltree</type>?"

#: ltree.xml:274(entry) ltree.xml:280(entry)
msgid "does array contain a descendant of <type>ltree</type>?"
msgstr "массив содержит потомка <type>ltree</type>?"

#: ltree.xml:286(entry) ltree.xml:292(entry)
msgid "does array contain any path matching <type>lquery</type>?"
msgstr "массив содержит путь, соответствующий <type>lquery</type>?"

#: ltree.xml:298(entry) ltree.xml:304(entry)
msgid ""
"does <type>ltree</type> array contain any path matching any <type>lquery</"
"type>?"
msgstr ""
"массив <type>ltree</type> содержит путь, соответствующий любому из "
"<type>lquery</type>?"

#: ltree.xml:310(entry) ltree.xml:316(entry)
msgid "does array contain any path matching <type>ltxtquery</type>?"
msgstr "массив содержит путь, соответствующий <type>ltxtquery</type>?"

#: ltree.xml:320(literal)
msgid "?@&gt;"
msgstr "?@&gt;"

#: ltree.xml:322(entry)
msgid ""
"first array entry that is an ancestor of <type>ltree</type>; NULL if none"
msgstr ""
"первый элемент массива, являющийся предком <type>ltree</type>; NULL, если "
"такого нет"

#: ltree.xml:326(literal)
msgid "?&lt;@"
msgstr "?&lt;@"

#: ltree.xml:328(entry)
msgid ""
"first array entry that is a descendant of <type>ltree</type>; NULL if none"
msgstr ""
"первый элемент массива, являющийся потомком <type>ltree</type>; NULL, если "
"такого нет"

#: ltree.xml:332(literal)
msgid "?~"
msgstr "?~"

#: ltree.xml:334(entry)
msgid "first array entry that matches <type>lquery</type>; NULL if none"
msgstr ""
"первый элемент массива, соответствующий <type>lquery</type>; NULL, если "
"такого нет"

#: ltree.xml:338(literal)
msgid "?@"
msgstr "?@"

#: ltree.xml:340(entry)
msgid "first array entry that matches <type>ltxtquery</type>; NULL if none"
msgstr ""
"первый элемент массива, соответствующий <type>ltxtquery</type>; NULL, если "
"такого нет"

#: ltree.xml:347(para)
msgid ""
"The operators <literal>&lt;@</literal>, <literal>@&gt;</literal>, "
"<literal>@</literal> and <literal>~</literal> have analogues <literal>^&lt;"
"@</literal>, <literal>^@&gt;</literal>, <literal>^@</literal>, <literal>^~</"
"literal>, which are the same except they do not use indexes. These are "
"useful only for testing purposes."
msgstr ""
"Операторы <literal>&lt;@</literal>, <literal>@&gt;</literal>, <literal>@</"
"literal> и <literal>~</literal> имеют аналоги в виде <literal>^&lt;@</"
"literal>, <literal>^@&gt;</literal>, <literal>^@</literal>, <literal>^~</"
"literal>, которые отличатся только тем, что не используют индексы. Они "
"полезны только для тестирования."

#: ltree.xml:355(para)
msgid ""
"The available functions are shown in <xref linkend=\"ltree-func-table\"/>."
msgstr ""
"Доступные функции перечислены в <xref remap=\"6\" linkend=\"ltree-func-table"
"\"/>."

#: ltree.xml:360(title)
msgid "<type>ltree</type> Functions"
msgstr "Функции <type>ltree</type>"

#: ltree.xml:365(entry)
msgid "Function"
msgstr "Функция"

#: ltree.xml:366(entry)
msgid "Return Type"
msgstr "Тип результата"

#: ltree.xml:368(entry)
msgctxt "entry"
msgid "Example"
msgstr "Пример"

#: ltree.xml:369(entry)
msgid "Result"
msgstr "Результат"

#: ltree.xml:375(function)
msgid "subltree(ltree, int start, int end)"
msgstr "subltree(ltree, int start, int end)"

#: ltree.xml:375(indexterm)
msgid "<primary>subltree</primary>"
msgstr "<primary>subltree</primary>"

#: ltree.xml:377(entry)
msgid ""
"subpath of <type>ltree</type> from position <parameter>start</parameter> to "
"position <parameter>end</parameter>-1 (counting from 0)"
msgstr ""
"подпуть <type>ltree</type> от позиции <parameter>start</parameter> до "
"позиции <parameter>end</parameter>-1 (начиная с 0)"

#: ltree.xml:379(literal)
msgid "subltree('Top.Child1.Child2',1,2)"
msgstr "subltree('Top.Child1.&zwsp;Child2',1,2)"

#: ltree.xml:380(literal)
msgid "Child1"
msgstr "Child1"

#: ltree.xml:384(function)
msgid "subpath(ltree, int offset, int len)"
msgstr "subpath(ltree, int offset, int len)"

#: ltree.xml:384(indexterm)
msgid "<primary>subpath</primary>"
msgstr "<primary>subpath</primary>"

#: ltree.xml:386(entry)
msgid ""
"subpath of <type>ltree</type> starting at position <parameter>offset</"
"parameter>, length <parameter>len</parameter>. If <parameter>offset</"
"parameter> is negative, subpath starts that far from the end of the path. If "
"<parameter>len</parameter> is negative, leaves that many labels off the end "
"of the path."
msgstr ""
"подпуть <type>ltree</type>, начиная с позиции <parameter>offset</parameter>, "
"длиной <parameter>len</parameter>. Если <parameter>offset</parameter> меньше "
"нуля, подпуть начинается с этого смещения от конца пути. Если "
"<parameter>len</parameter> меньше нуля, будет отброшено заданное число меток "
"с конца строки."

#: ltree.xml:391(literal)
msgid "subpath('Top.Child1.Child2',0,2)"
msgstr "subpath('Top.Child1.&zwsp;Child2',0,2)"

#: ltree.xml:392(literal)
msgid "Top.Child1"
msgstr "Top.Child1"

#: ltree.xml:396(function)
msgid "subpath(ltree, int offset)"
msgstr "subpath(ltree, int offset)"

#: ltree.xml:398(entry)
msgid ""
"subpath of <type>ltree</type> starting at position <parameter>offset</"
"parameter>, extending to end of path. If <parameter>offset</parameter> is "
"negative, subpath starts that far from the end of the path."
msgstr ""
"подпуть <type>ltree</type>, начиная с позиции <parameter>offset</parameter> "
"и до конца пути. Если <parameter>offset</parameter> меньше нуля, подпуть "
"начинается с этого смещения от конца пути."

#: ltree.xml:402(literal)
msgid "subpath('Top.Child1.Child2',1)"
msgstr "subpath('Top.Child1.&zwsp;Child2',1)"

#: ltree.xml:403(literal)
msgid "Child1.Child2"
msgstr "Child1.Child2"

#: ltree.xml:407(function)
msgid "nlevel(ltree)"
msgstr "nlevel(ltree)"

#: ltree.xml:407(indexterm)
msgid "<primary>nlevel</primary>"
msgstr "<primary>nlevel</primary>"

#: ltree.xml:408(type) ltree.xml:416(type) ltree.xml:425(type)
msgid "integer"
msgstr "integer"

#: ltree.xml:409(entry)
msgid "number of labels in path"
msgstr "число меток в пути"

#: ltree.xml:410(literal)
msgid "nlevel('Top.Child1.Child2')"
msgstr "nlevel('Top.Child1.&zwsp;Child2')"

#: ltree.xml:411(literal)
msgid "3"
msgstr "3"

#: ltree.xml:415(function)
msgid "index(ltree a, ltree b)"
msgstr "index(ltree a, ltree b)"

#: ltree.xml:415(indexterm)
msgid "<primary>index</primary>"
msgstr "<primary>индекс</primary>"

#: ltree.xml:417(entry)
msgid ""
"position of first occurrence of <parameter>b</parameter> in <parameter>a</"
"parameter>; -1 if not found"
msgstr ""
"позиция первого вхождения <parameter>b</parameter> в <parameter>a</"
"parameter>; -1, если вхождения нет"

#: ltree.xml:419(literal)
msgid "index('0.1.2.3.5.4.5.6.8.5.6.8','5.6')"
msgstr "index('0.1.2.3.5.4.5.6.&zwsp;8.5.6.8','5.6')"

#: ltree.xml:420(literal)
msgid "6"
msgstr "6"

#: ltree.xml:424(function)
msgid "index(ltree a, ltree b, int offset)"
msgstr "index(ltree a, ltree b, int offset)"

#: ltree.xml:426(entry)
msgid ""
"position of first occurrence of <parameter>b</parameter> in <parameter>a</"
"parameter>, searching starting at <parameter>offset</parameter>; negative "
"<parameter>offset</parameter> means start <parameter>-offset</parameter> "
"labels from the end of the path"
msgstr ""
"позиция первого вхождения <parameter>b</parameter> в <parameter>a</"
"parameter>, найденного от позиции <parameter>offset</parameter>; если "
"<parameter>offset</parameter> меньше 0, поиск начинается с <parameter>-"
"offset</parameter> меток от конца пути"

#: ltree.xml:430(literal)
msgid "index('0.1.2.3.5.4.5.6.8.5.6.8','5.6',-4)"
msgstr "index('0.1.2.3.5.4.5.6.&zwsp;8.5.6.8','5.6',-4)"

#: ltree.xml:431(literal)
msgid "9"
msgstr "9"

#: ltree.xml:435(function)
msgid "text2ltree(text)"
msgstr "text2ltree(text)"

#: ltree.xml:435(indexterm)
msgid "<primary>text2ltree</primary>"
msgstr "<primary>text2ltree</primary>"

#: ltree.xml:437(entry)
msgid "cast <type>text</type> to <type>ltree</type>"
msgstr "приводит <type>text</type> к типу <type>ltree</type>"

#: ltree.xml:443(function)
msgid "ltree2text(ltree)"
msgstr "ltree2text(ltree)"

#: ltree.xml:443(indexterm)
msgid "<primary>ltree2text</primary>"
msgstr "<primary>ltree2text</primary>"

#: ltree.xml:445(entry)
msgid "cast <type>ltree</type> to <type>text</type>"
msgstr "приводит <type>ltree</type> к типу <type>text</type>"

#: ltree.xml:451(function)
msgid "lca(ltree, ltree, ...)"
msgstr "lca(ltree, ltree, ...)"

#: ltree.xml:451(indexterm)
msgid "<primary>lca</primary>"
msgstr "<primary>lca</primary>"

#: ltree.xml:453(entry)
msgid ""
"lowest common ancestor, i.e., longest common prefix of paths (up to 8 "
"arguments supported)"
msgstr ""
"самый нижний общий предок, то есть наибольший общий префикс путей "
"(принимается до 8 аргументов)"

#: ltree.xml:455(literal)
msgid "lca('1.2.2.3','1.2.3.4.5.6')"
msgstr "lca('1.2.2.3','1.2.3.4.5.6')"

#: ltree.xml:456(literal) ltree.xml:464(literal)
msgid "1.2"
msgstr "1.2"

#: ltree.xml:460(function)
msgid "lca(ltree[])"
msgstr "lca(ltree[])"

#: ltree.xml:462(entry)
msgid "lowest common ancestor, i.e., longest common prefix of paths"
msgstr "самый нижний предок, то есть наибольший общий префикс путей"

#: ltree.xml:463(literal)
msgid "lca(array['1.2.2.3'::ltree,'1.2.3'])"
msgstr "lca(array['1.2.2.3'::ltree,'1.2.3'])"

#: ltree.xml:473(title)
msgid "Indexes"
msgstr "Индексы"

#: ltree.xml:474(para)
msgid ""
"<filename>ltree</filename> supports several types of indexes that can speed "
"up the indicated operators:"
msgstr ""
"<filename>ltree</filename> поддерживает несколько типов индексов, которые "
"могут ускорить означенные операции:"

#: ltree.xml:481(para)
msgid ""
"B-tree index over <type>ltree</type>: <literal>&lt;</literal>, <literal>&lt;"
"=</literal>, <literal>=</literal>, <literal>&gt;=</literal>, <literal>&gt;</"
"literal>"
msgstr ""
"B-дерево по значениям <type>ltree</type>: <literal>&lt;</literal>, "
"<literal>&lt;=</literal>, <literal>=</literal>, <literal>&gt;=</literal>, "
"<literal>&gt;</literal>"

#: ltree.xml:488(para)
msgid ""
"GiST index over <type>ltree</type>: <literal>&lt;</literal>, <literal>&lt;=</"
"literal>, <literal>=</literal>, <literal>&gt;=</literal>, <literal>&gt;</"
"literal>, <literal>@&gt;</literal>, <literal>&lt;@</literal>, <literal>@</"
"literal>, <literal>~</literal>, <literal>?</literal>"
msgstr ""
"GiST по значениям <type>ltree</type>: <literal>&lt;</literal>, <literal>&lt;"
"=</literal>, <literal>=</literal>, <literal>&gt;=</literal>, <literal>&gt;</"
"literal>, <literal>@&gt;</literal>, <literal>&lt;@</literal>, <literal>@</"
"literal>, <literal>~</literal>, <literal>?</literal>"

#: ltree.xml:495(para) ltree.xml:506(para)
msgid "Example of creating such an index:"
msgstr "Пример создания такого индекса:"

#: ltree.xml:498(programlisting)
#, no-wrap
msgid "CREATE INDEX path_gist_idx ON test USING GIST (path);"
msgstr "CREATE INDEX path_gist_idx ON test USING GIST (path);"

#: ltree.xml:501(para)
msgid ""
"GiST index over <type>ltree[]</type>: <literal>ltree[] &lt;@ ltree</"
"literal>, <literal>ltree @&gt; ltree[]</literal>, <literal>@</literal>, "
"<literal>~</literal>, <literal>?</literal>"
msgstr ""
"GiST по столбцу <type>ltree[]</type>: <literal>ltree[] &lt;@ ltree</"
"literal>, <literal>ltree @&gt; ltree[]</literal>, <literal>@</literal>, "
"<literal>~</literal>, <literal>?</literal>"

#: ltree.xml:509(programlisting)
#, no-wrap
msgid "CREATE INDEX path_gist_idx ON test USING GIST (array_path);"
msgstr "CREATE INDEX path_gist_idx ON test USING GIST (array_path);"

#: ltree.xml:510(para)
msgid "Note: This index type is lossy."
msgstr "Примечание: Индекс этого типа является неточным."

#: ltree.xml:518(title)
msgctxt "title"
msgid "Example"
msgstr "Пример"

#: ltree.xml:520(para)
msgid ""
"This example uses the following data (also available in file "
"<filename>contrib/ltree/ltreetest.sql</filename> in the source distribution):"
msgstr ""
"Для этого примера используются следующие данные (это же описание данных "
"находится в файле <filename>contrib/ltree/ltreetest.sql</filename> в "
"дистрибутиве исходного кода):"

#: ltree.xml:525(programlisting)
#, no-wrap
msgid ""
"CREATE TABLE test (path ltree);\n"
"INSERT INTO test VALUES ('Top');\n"
"INSERT INTO test VALUES ('Top.Science');\n"
"INSERT INTO test VALUES ('Top.Science.Astronomy');\n"
"INSERT INTO test VALUES ('Top.Science.Astronomy.Astrophysics');\n"
"INSERT INTO test VALUES ('Top.Science.Astronomy.Cosmology');\n"
"INSERT INTO test VALUES ('Top.Hobbies');\n"
"INSERT INTO test VALUES ('Top.Hobbies.Amateurs_Astronomy');\n"
"INSERT INTO test VALUES ('Top.Collections');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy.Stars');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy.Galaxies');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy.Astronauts');\n"
"CREATE INDEX path_gist_idx ON test USING GIST (path);\n"
"CREATE INDEX path_idx ON test USING BTREE (path);"
msgstr ""
"CREATE TABLE test (path ltree);\n"
"INSERT INTO test VALUES ('Top');\n"
"INSERT INTO test VALUES ('Top.Science');\n"
"INSERT INTO test VALUES ('Top.Science.Astronomy');\n"
"INSERT INTO test VALUES ('Top.Science.Astronomy.Astrophysics');\n"
"INSERT INTO test VALUES ('Top.Science.Astronomy.Cosmology');\n"
"INSERT INTO test VALUES ('Top.Hobbies');\n"
"INSERT INTO test VALUES ('Top.Hobbies.Amateurs_Astronomy');\n"
"INSERT INTO test VALUES ('Top.Collections');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy.Stars');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy.Galaxies');\n"
"INSERT INTO test VALUES ('Top.Collections.Pictures.Astronomy.Astronauts');\n"
"CREATE INDEX path_gist_idx ON test USING GIST (path);\n"
"CREATE INDEX path_idx ON test USING BTREE (path);"

#: ltree.xml:542(para)
msgid ""
"Now, we have a table <structname>test</structname> populated with data "
"describing the hierarchy shown below:"
msgstr ""
"В итоге мы получаем таблицу <structname>test</structname>, наполненную "
"данными, представляющими следующую иерархию:"

#: ltree.xml:547(literallayout)
#, no-wrap
msgid ""
"\n"
"                        Top\n"
"                     /   |  \\\n"
"             Science Hobbies Collections\n"
"                 /       |              \\\n"
"        Astronomy   Amateurs_Astronomy Pictures\n"
"           /  \\                            |\n"
"Astrophysics  Cosmology                Astronomy\n"
"                                        /  |    \\\n"
"                                 Galaxies Stars Astronauts\n"
msgstr ""
"\n"
"                        Top\n"
"                     /   |  \\\n"
"             Science Hobbies Collections\n"
"                 /       |              \\\n"
"        Astronomy   Amateurs_Astronomy Pictures\n"
"           /  \\                            |\n"
"Astrophysics  Cosmology                Astronomy\n"
"                                        /  |    \\\n"
"                                 Galaxies Stars Astronauts\n"

#: ltree.xml:559(para)
msgid ""
"We can do inheritance: <screen>ltreetest=&gt; SELECT path FROM test WHERE "
"path &lt;@ 'Top.Science';\n"
"                path\n"
"------------------------------------\n"
" Top.Science\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
"(4 rows)</screen>"
msgstr ""
"Мы можем выбрать потомки в иерархии наследования: <screen>ltreetest=&gt; "
"SELECT path FROM test WHERE path &lt;@ 'Top.Science';\n"
"                path\n"
"------------------------------------\n"
" Top.Science\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
"(4 rows)</screen>"

#: ltree.xml:571(para)
msgid ""
"Here are some examples of path matching: <screen>ltreetest=&gt; SELECT path "
"FROM test WHERE path ~ '*.Astronomy.*';\n"
"                     path\n"
"-----------------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
" Top.Collections.Pictures.Astronomy\n"
" Top.Collections.Pictures.Astronomy.Stars\n"
" Top.Collections.Pictures.Astronomy.Galaxies\n"
" Top.Collections.Pictures.Astronomy.Astronauts\n"
"(7 rows)\n"
"\n"
"ltreetest=&gt; SELECT path FROM test WHERE path ~ '*.!pictures@.*.Astronomy."
"*';\n"
"                path\n"
"------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
"(3 rows)</screen>"
msgstr ""
"Несколько примеров выборки по путям: <screen>ltreetest=&gt; SELECT path FROM "
"test WHERE path ~ '*.Astronomy.*';\n"
"                     path\n"
"-----------------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
" Top.Collections.Pictures.Astronomy\n"
" Top.Collections.Pictures.Astronomy.Stars\n"
" Top.Collections.Pictures.Astronomy.Galaxies\n"
" Top.Collections.Pictures.Astronomy.Astronauts\n"
"(7 rows)\n"
"\n"
"ltreetest=&gt; SELECT path FROM test WHERE path ~ '*.!pictures@.*.Astronomy."
"*';\n"
"                path\n"
"------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
"(3 rows)</screen>"

#: ltree.xml:594(para)
msgid ""
"Here are some examples of full text search: <screen>ltreetest=&gt; SELECT "
"path FROM test WHERE path @ 'Astro*% &amp; !pictures@';\n"
"                path\n"
"------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
" Top.Hobbies.Amateurs_Astronomy\n"
"(4 rows)\n"
"\n"
"ltreetest=&gt; SELECT path FROM test WHERE path @ 'Astro* &amp; !"
"pictures@';\n"
"                path\n"
"------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
"(3 rows)</screen>"
msgstr ""
"Ещё несколько примеров полнотекстового поиска: <screen>ltreetest=&gt; SELECT "
"path FROM test WHERE path @ 'Astro*% &amp; !pictures@';\n"
"                path\n"
"------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
" Top.Hobbies.Amateurs_Astronomy\n"
"(4 rows)\n"
"\n"
"ltreetest=&gt; SELECT path FROM test WHERE path @ 'Astro* &amp; !"
"pictures@';\n"
"                path\n"
"------------------------------------\n"
" Top.Science.Astronomy\n"
" Top.Science.Astronomy.Astrophysics\n"
" Top.Science.Astronomy.Cosmology\n"
"(3 rows)</screen>"

#: ltree.xml:614(para)
msgid ""
"Path construction using functions: <screen>ltreetest=&gt; SELECT "
"subpath(path,0,2)||'Space'||subpath(path,2) FROM test WHERE path &lt;@ 'Top."
"Science.Astronomy';\n"
"                 ?column?\n"
"------------------------------------------\n"
" Top.Science.Space.Astronomy\n"
" Top.Science.Space.Astronomy.Astrophysics\n"
" Top.Science.Space.Astronomy.Cosmology\n"
"(3 rows)</screen>"
msgstr ""
"Образование пути с помощью функций: <screen>ltreetest=&gt; SELECT "
"subpath(path,0,2)||'Space'||subpath(path,2) FROM test WHERE path &lt;@ 'Top."
"Science.Astronomy';\n"
"                 ?column?\n"
"------------------------------------------\n"
" Top.Science.Space.Astronomy\n"
" Top.Science.Space.Astronomy.Astrophysics\n"
" Top.Science.Space.Astronomy.Cosmology\n"
"(3 rows)</screen>"

#: ltree.xml:625(para)
msgid ""
"We could simplify this by creating a SQL function that inserts a label at a "
"specified position in a path: <screen>CREATE FUNCTION ins_label(ltree, int, "
"text) RETURNS ltree\n"
"    AS 'select subpath($1,0,$2) || $3 || subpath($1,$2);'\n"
"    LANGUAGE SQL IMMUTABLE;\n"
"\n"
"ltreetest=&gt; SELECT ins_label(path,2,'Space') FROM test WHERE path &lt;@ "
"'Top.Science.Astronomy';\n"
"                ins_label\n"
"------------------------------------------\n"
" Top.Science.Space.Astronomy\n"
" Top.Science.Space.Astronomy.Astrophysics\n"
" Top.Science.Space.Astronomy.Cosmology\n"
"(3 rows)</screen>"
msgstr ""
"Эту процедуру можно упростить, создав функцию SQL, вставляющую метку в "
"определённую позицию в пути: <screen>CREATE FUNCTION ins_label(ltree, int, "
"text) RETURNS ltree\n"
"    AS 'select subpath($1,0,$2) || $3 || subpath($1,$2);'\n"
"    LANGUAGE SQL IMMUTABLE;\n"
"\n"
"ltreetest=&gt; SELECT ins_label(path,2,'Space') FROM test WHERE path &lt;@ "
"'Top.Science.Astronomy';\n"
"                ins_label\n"
"------------------------------------------\n"
" Top.Science.Space.Astronomy\n"
" Top.Science.Space.Astronomy.Astrophysics\n"
" Top.Science.Space.Astronomy.Cosmology\n"
"(3 rows)</screen>"

#: ltree.xml:643(title)
msgid "Transforms"
msgstr "Трансформации"

#: ltree.xml:645(para)
msgid ""
"Additional extensions are available that implement transforms for the "
"<type>ltree</type> type for PL/Python. The extensions are called "
"<literal>ltree_plpythonu</literal>, <literal>ltree_plpython2u</literal>, and "
"<literal>ltree_plpython3u</literal> (see <xref linkend=\"plpython-python23\"/"
"> for the PL/Python naming convention). If you install these transforms and "
"specify them when creating a function, <type>ltree</type> values are mapped "
"to Python lists. (The reverse is currently not supported, however.)"
msgstr ""
"Также имеются дополнительные расширения, реализующие трансформации типа "
"<type>ltree</type> для языка PL/Python. Эти расширения называются "
"<literal>ltree_plpythonu</literal>, <literal>ltree_plpython2u</literal> и "
"<literal>ltree_plpython3u</literal> (соглашения об именовании, принятые для "
"интерфейса PL/Python, описаны в <xref remap=\"6\" linkend=\"plpython-"
"python23\"/>). Если вы установите эти трансформации и укажете их при "
"создании функции, значения <type>ltree</type> будут отображаться в списки "
"Python. (Однако обратное преобразование не поддерживается.)"

#: ltree.xml:658(title)
msgid "Authors"
msgstr "Авторы"

#: ltree.xml:660(para)
msgid ""
"All work was done by Teodor Sigaev (<email>teodor@stack.net</email>) and "
"Oleg Bartunov (<email>oleg@sai.msu.su</email>). See <ulink url=\"http://www."
"sai.msu.su/~megera/postgres/gist/\"/> for additional information. Authors "
"would like to thank Eugeny Rodichev for helpful discussions. Comments and "
"bug reports are welcome."
msgstr ""
"Разработку осуществили Фёдор Сигаев (<email>teodor@stack.net</email>) и Олег "
"Бартунов (<email>oleg@sai.msu.su</email>). Дополнительные сведения можно "
"найти на странице <ulink url=\"http://www.sai.msu.su/~megera/postgres/gist/"
"\"/>. Авторы выражают благодарность Евгению Родичеву за полезную дискуссии. "
"Замечания и сообщения об ошибках приветствуются."

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: ltree.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
