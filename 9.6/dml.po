# Alexander Lakhin <a.lakhin@postgrespro.ru>, 2012, 2013, 2015, 2016.
# Pavel Luzanov <p.luzanov@postgrespro.ru>, 2015, 2016.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2016-06-27 17:39+0300\n"
"PO-Revision-Date: 2016-04-13 09:36+0300\n"
"Language-Team: Russian <pgsql-docs@lists.postgrespro.ru>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Lokalize 2.0\n"

#: dml.xml:5(title)
msgid "Data Manipulation"
msgstr "Модификация данных"

#: dml.xml:7(remark)
msgid "This chapter is still quite incomplete."
msgstr "Эта глава всё ещё недостаточно полная."

#: dml.xml:11(para)
msgid ""
"The previous chapter discussed how to create tables and other structures to "
"hold your data. Now it is time to fill the tables with data. This chapter "
"covers how to insert, update, and delete table data. The chapter after this "
"will finally explain how to extract your long-lost data from the database."
msgstr ""
"В предыдущей главе мы обсуждали, как создавать таблицы и другие структуры "
"для хранения данных. Теперь пришло время заполнить таблицы данными. В этой "
"главе мы расскажем, как добавлять, изменять и удалять данные из таблиц. А из "
"следующей главы вы наконец узнаете, как извлекать нужные вам данные из базы "
"данных."

#: dml.xml:21(title)
msgid "Inserting Data"
msgstr "Добавление данных"

#: dml.xml:23(indexterm)
msgid "<primary>inserting</primary>"
msgstr "<primary>добавление</primary>"

#: dml.xml:27(indexterm)
msgid "<primary>INSERT</primary>"
msgstr "<primary>INSERT</primary>"

#: dml.xml:31(para)
msgid ""
"When a table is created, it contains no data. The first thing to do before a "
"database can be of much use is to insert data. Data is conceptually inserted "
"one row at a time. Of course you can also insert more than one row, but "
"there is no way to insert less than one row. Even if you know only some "
"column values, a complete row must be created."
msgstr ""
"Сразу после создания таблицы она не содержит никаких данных. Поэтому, чтобы "
"она была полезна, в неё прежде всего нужно добавить данные. По сути данные "
"добавляются в таблицу по одной строке. И хотя вы конечно можете добавить в "
"таблицу несколько строк, добавить в неё меньше, чем строку, невозможно. Даже "
"если вы указываете значения только некоторых столбцов, создаётся полная "
"строка."

#: dml.xml:45(programlisting)
#, no-wrap
msgid ""
"CREATE TABLE products (\n"
"    product_no integer,\n"
"    name text,\n"
"    price numeric\n"
");"
msgstr ""
"CREATE TABLE products (\n"
"    product_no integer,\n"
"    name text,\n"
"    price numeric\n"
");"

#: dml.xml:51(programlisting)
#, no-wrap
msgid "INSERT INTO products VALUES (1, 'Cheese', 9.99);"
msgstr "INSERT INTO products VALUES (1, 'Cheese', 9.99);"

#: dml.xml:40(para)
msgid ""
"To create a new row, use the <xref linkend=\"sql-insert\"/> command. The "
"command requires the table name and column values. For example, consider the "
"products table from <xref linkend=\"ddl\"/>: <placeholder-1/> An example "
"command to insert a row would be: <placeholder-2/> The data values are "
"listed in the order in which the columns appear in the table, separated by "
"commas. Usually, the data values will be literals (constants), but scalar "
"expressions are also allowed."
msgstr ""
"Чтобы создать строку, вы будете использовать команду <xref linkend=\"sql-"
"insert\"/>. В этой команде необходимо указать имя таблицы и значения "
"столбцов. Например, рассмотрим таблицу товаров из <xref remap=\"2\" linkend="
"\"ddl\"/>: <placeholder-1/> Добавить в неё строку можно было бы так: "
"<placeholder-2/> Значения данных перечисляются в порядке столбцов в таблице "
"и разделяются запятыми. Обычно в качестве значений указываются константы, но "
"это могут быть и скалярные выражения."

#: dml.xml:62(programlisting)
#, no-wrap
msgid ""
"INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', 9.99);\n"
"INSERT INTO products (name, price, product_no) VALUES ('Cheese', 9.99, 1);"
msgstr ""
"INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', 9.99);\n"
"INSERT INTO products (name, price, product_no) VALUES ('Cheese', 9.99, 1);"

#: dml.xml:57(para)
msgid ""
"The above syntax has the drawback that you need to know the order of the "
"columns in the table. To avoid this you can also list the columns "
"explicitly. For example, both of the following commands have the same effect "
"as the one above: <placeholder-1/> Many users consider it good practice to "
"always list the column names."
msgstr ""
"Показанная выше запись имеет один недостаток &mdash; вам необходимо знать "
"порядок столбцов в таблице. Чтобы избежать этого, можно перечислить столбцы "
"явно. Например, следующие две команды дадут тот же результат, что и "
"показанная выше: <placeholder-1/> Многие считают, что лучше всегда явно "
"указывать имена столбцов."

#: dml.xml:72(programlisting)
#, no-wrap
msgid ""
"INSERT INTO products (product_no, name) VALUES (1, 'Cheese');\n"
"INSERT INTO products VALUES (1, 'Cheese');"
msgstr ""
"INSERT INTO products (product_no, name) VALUES (1, 'Cheese');\n"
"INSERT INTO products VALUES (1, 'Cheese');"

#: dml.xml:68(para)
msgid ""
"If you don't have values for all the columns, you can omit some of them. In "
"that case, the columns will be filled with their default values. For "
"example: <placeholder-1/> The second form is a <productname>PostgreSQL</"
"productname> extension. It fills the columns from the left with as many "
"values as are given, and the rest will be defaulted."
msgstr ""
"Если значения определяются не для всех столбцов, лишние столбцы можно "
"опустить. В таком случае эти столбцы получат значения по умолчанию. "
"Например: <placeholder-1/> Вторая форма является расширением "
"<productname>PostgreSQL</productname>. Она заполняет столбцы слева по числу "
"переданных значений, а все остальные столбцы принимают значения по умолчанию."

#: dml.xml:82(programlisting)
#, no-wrap
msgid ""
"INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', DEFAULT);\n"
"INSERT INTO products DEFAULT VALUES;"
msgstr ""
"INSERT INTO products (product_no, name, price) VALUES (1, 'Cheese', DEFAULT);\n"
"INSERT INTO products DEFAULT VALUES;"

#: dml.xml:79(para)
msgid ""
"For clarity, you can also request default values explicitly, for individual "
"columns or for the entire row: <placeholder-1/>"
msgstr ""
"Для ясности можно также явно указать значения по умолчанию для отдельных "
"столбцов или всей строки: <placeholder-1/>"

#: dml.xml:88(programlisting)
#, no-wrap
msgid ""
"INSERT INTO products (product_no, name, price) VALUES\n"
"    (1, 'Cheese', 9.99),\n"
"    (2, 'Bread', 1.99),\n"
"    (3, 'Milk', 2.99);"
msgstr ""
"INSERT INTO products (product_no, name, price) VALUES\n"
"    (1, 'Cheese', 9.99),\n"
"    (2, 'Bread', 1.99),\n"
"    (3, 'Milk', 2.99);"

#: dml.xml:86(para)
msgid "You can insert multiple rows in a single command: <placeholder-1/>"
msgstr "Одна команда может вставить сразу несколько строк: <placeholder-1/>"

#: dml.xml:95(para)
msgid ""
"When inserting a lot of data at the same time, considering using the <xref "
"linkend=\"sql-copy\"/> command. It is not as flexible as the <xref linkend="
"\"sql-insert\"/> command, but is more efficient. Refer to <xref linkend="
"\"populate\"/> for more information on improving bulk loading performance."
msgstr ""
"Когда нужно добавить сразу множество строк, возможно будет лучше "
"использовать команду <xref linkend=\"sql-copy\"/>. Она не такая гибкая, как "
"<xref linkend=\"sql-insert\"/>, но гораздо эффективнее. Дополнительно об "
"ускорении массовой загрузки данных можно узнать в <xref remap=\"6\" linkend="
"\"populate\"/>."

#: dml.xml:107(title)
msgid "Updating Data"
msgstr "Изменение данных"

#: dml.xml:109(indexterm)
msgid "<primary>updating</primary>"
msgstr "<primary>изменение</primary>"

#: dml.xml:113(indexterm)
msgid "<primary>UPDATE</primary>"
msgstr "<primary>UPDATE</primary>"

#: dml.xml:117(para)
msgid ""
"The modification of data that is already in the database is referred to as "
"updating. You can update individual rows, all the rows in a table, or a "
"subset of all rows. Each column can be updated separately; the other columns "
"are not affected."
msgstr ""
"Модификация данных, уже сохранённых в БД, называется изменением. Изменить "
"можно все строки таблицы, либо подмножество всех строк, либо только "
"избранные строки. Каждый столбец при этом можно изменять независимо от "
"других."

#: dml.xml:130(para)
msgid "The name of the table and column to update"
msgstr "Имя таблицы и изменяемого столбца"

#: dml.xml:134(para)
msgid "The new value of the column"
msgstr "Новое значение столбца"

#: dml.xml:138(para)
msgid "Which row(s) to update"
msgstr "Критерий отбора изменяемых строк"

#: dml.xml:124(para)
msgid ""
"To update existing rows, use the <xref linkend=\"sql-update\"/> command. "
"This requires three pieces of information: <placeholder-1/>"
msgstr ""
"Для изменения данных в существующих строках используется команда <xref "
"linkend=\"sql-update\"/>. Ей требуется следующая информация: <placeholder-1/>"

#: dml.xml:143(para)
msgid ""
"Recall from <xref linkend=\"ddl\"/> that SQL does not, in general, provide a "
"unique identifier for rows. Therefore it is not always possible to directly "
"specify which row to update. Instead, you specify which conditions a row "
"must meet in order to be updated. Only if you have a primary key in the "
"table (independent of whether you declared it or not) can you reliably "
"address individual rows by choosing a condition that matches the primary "
"key. Graphical database access tools rely on this fact to allow you to "
"update rows individually."
msgstr ""
"Если вы помните, в <xref remap=\"6\" linkend=\"ddl\"/> говорилось, что в SQL "
"в принципе нет уникального идентификатора строк. Таким образом, не всегда "
"возможно явно указать на строку, которую требуется изменить. Поэтому "
"необходимо указать условия, каким должны соответствовать требуемая строка. "
"Только если в таблице есть первичный ключ (вне зависимости от того, "
"объявляли вы его или нет), можно однозначно адресовать отдельные строки, "
"определив условие по первичному ключу. Этим пользуются графические "
"инструменты для работы с базой данных, дающие возможность редактировать "
"данные по строкам."

#: dml.xml:158(programlisting)
#, no-wrap
msgid "UPDATE products SET price = 10 WHERE price = 5;"
msgstr "UPDATE products SET price = 10 WHERE price = 5;"

#: dml.xml:155(para)
msgid ""
"For example, this command updates all products that have a price of 5 to "
"have a price of 10: <placeholder-1/> This might cause zero, one, or many "
"rows to be updated. It is not an error to attempt an update that does not "
"match any rows."
msgstr ""
"Например, следующая команда увеличивает цену всех товаров, имевших до этого "
"цену 5, до 10: <placeholder-1/> В результате может измениться ноль, одна или "
"множество строк. И если этому запросу не будет удовлетворять ни одна строка, "
"это не будет ошибкой."

#: dml.xml:172(programlisting)
#, no-wrap
msgid "UPDATE products SET price = price * 1.10;"
msgstr "UPDATE products SET price = price * 1.10;"

#: dml.xml:163(para)
msgid ""
"Let's look at that command in detail. First is the key word <literal>UPDATE</"
"literal> followed by the table name. As usual, the table name can be schema-"
"qualified, otherwise it is looked up in the path. Next is the key word "
"<literal>SET</literal> followed by the column name, an equal sign, and the "
"new column value. The new column value can be any scalar expression, not "
"just a constant. For example, if you want to raise the price of all products "
"by 10% you could use: <placeholder-1/> As you see, the expression for the "
"new value can refer to the existing value(s) in the row. We also left out "
"the <literal>WHERE</literal> clause. If it is omitted, it means that all "
"rows in the table are updated. If it is present, only those rows that match "
"the <literal>WHERE</literal> condition are updated. Note that the equals "
"sign in the <literal>SET</literal> clause is an assignment while the one in "
"the <literal>WHERE</literal> clause is a comparison, but this does not "
"create any ambiguity. Of course, the <literal>WHERE</literal> condition does "
"not have to be an equality test. Many other operators are available (see "
"<xref linkend=\"functions\"/>). But the expression needs to evaluate to a "
"Boolean result."
msgstr ""
"Давайте рассмотрим эту команду подробнее. Она начинается с ключевого слова "
"<literal>UPDATE</literal>, за которым идёт имя таблицы. Как обычно, имя "
"таблицы может быть записано в полной форме, в противном случае она будет "
"найдена по пути. Затем идёт ключевое слово <literal>SET</literal>, за "
"которым следует имя столбца, знак равенства и новое значение столбца. Этим "
"значением может быть любое скалярное выражение, а не только константа. "
"Например, если вы захотите поднять цену всех товаров на 10%, это можно "
"сделать так: <placeholder-1/> Как видно из этого примера, выражение нового "
"значения может ссылаться на существующие значения столбцов в строке. Мы "
"также опустили в нём предложение <literal>WHERE</literal>. Это означает, что "
"будут изменены все строки в таблице. Если же это предложение присутствует, "
"изменяются только строки, которые соответствуют условию <literal>WHERE</"
"literal>. Заметьте, что хотя знак равенства в предложении <literal>SET</"
"literal> обозначает операцию присваивания, а такой же знак в предложении "
"<literal>WHERE</literal> используется для сравнения, это не приводит к "
"неоднозначности. И конечно, в условии <literal>WHERE</literal> не "
"обязательно должна быть проверка равенства, а могут применяться и другие "
"операторы (см. <xref remap=\"4\" linkend=\"functions\"/>). Необходимо "
"только, чтобы это выражение возвращало логический результат."

#: dml.xml:191(programlisting)
#, no-wrap
msgid "UPDATE mytable SET a = 5, b = 3, c = 1 WHERE a &gt; 0;"
msgstr "UPDATE mytable SET a = 5, b = 3, c = 1 WHERE a &gt; 0;"

#: dml.xml:187(para)
msgid ""
"You can update more than one column in an <command>UPDATE</command> command "
"by listing more than one assignment in the <literal>SET</literal> clause. "
"For example: <placeholder-1/>"
msgstr ""
"В команде <command>UPDATE</command> можно изменить значения сразу нескольких "
"столбцов, перечислив их в предложении <literal>SET</literal>. Например: "
"<placeholder-1/>"

#: dml.xml:196(title)
msgid "Deleting Data"
msgstr "Удаление данных"

#: dml.xml:198(indexterm)
msgid "<primary>deleting</primary>"
msgstr "<primary>удаление</primary>"

#: dml.xml:202(indexterm)
msgid "<primary>DELETE</primary>"
msgstr "<primary>DELETE</primary>"

#: dml.xml:206(para)
msgid ""
"So far we have explained how to add data to tables and how to change data. "
"What remains is to discuss how to remove data that is no longer needed. Just "
"as adding data is only possible in whole rows, you can only remove entire "
"rows from a table. In the previous section we explained that SQL does not "
"provide a way to directly address individual rows. Therefore, removing rows "
"can only be done by specifying conditions that the rows to be removed have "
"to match. If you have a primary key in the table then you can specify the "
"exact row. But you can also remove groups of rows matching a condition, or "
"you can remove all rows in the table at once."
msgstr ""
"Мы рассказали о том, как добавлять данные в таблицы и как изменять их. "
"Теперь вам осталось узнать, как удалить данные, которые оказались не нужны. "
"Так же, как добавлять данные можно только целыми строками, удалять их можно "
"только по строкам. В предыдущем разделе мы отметили, что в SQL нет "
"возможности напрямую адресовать отдельные строки, так что удалить избранные "
"строки можно, только сформулировав для них подходящие условия. Но если в "
"таблице есть первичный ключ, с его помощью можно однозначно выделить "
"определённую строку. При этом можно так же удалить группы строк, "
"соответствующие условию, либо сразу все строки таблицы."

#: dml.xml:225(programlisting)
#, no-wrap
msgid "DELETE FROM products WHERE price = 10;"
msgstr "DELETE FROM products WHERE price = 10;"

#: dml.xml:220(para)
msgid ""
"You use the <xref linkend=\"sql-delete\"/> command to remove rows; the "
"syntax is very similar to the <command>UPDATE</command> command. For "
"instance, to remove all rows from the products table that have a price of "
"10, use: <placeholder-1/>"
msgstr ""
"Для удаления строк используется команда <xref linkend=\"sql-delete\"/>; её "
"синтаксис очень похож на синтаксис команды <command>UPDATE</command>. "
"Например, удалить все строки из таблицы с товарами, имеющими цену 10, можно "
"так: <placeholder-1/>"

#: dml.xml:230(programlisting)
#, no-wrap
msgid "DELETE FROM products;"
msgstr "DELETE FROM products;"

#: dml.xml:228(para)
msgid ""
"If you simply write: <placeholder-1/> then all rows in the table will be "
"deleted! Caveat programmer."
msgstr ""
"Если вы напишете просто: <placeholder-1/> будут удалены все строки таблицы! "
"Будьте осторожны!"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: dml.xml:0(None)
msgid "translator-credits"
msgstr "translator-credits"
