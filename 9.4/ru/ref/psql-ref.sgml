<!--
doc/src/sgml/ref/psql-ref.sgml
PostgreSQL documentation
-->

<refentry id="APP-PSQL">
  <refmeta>
    <refentrytitle><application>psql</application></refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo>Application</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname><application>psql</application></refname>
    <refpurpose>
      Интерактивный терминал <productname>PostgreSQL</productname> 
    </refpurpose>
  </refnamediv>

 <indexterm zone="app-psql">
  <primary>psql</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>psql</command>
   <arg rep="repeat"><replaceable class="parameter">option</replaceable></arg>
   <arg choice="opt"><replaceable class="parameter">dbname</replaceable>
   <arg choice="opt"><replaceable class="parameter">username</replaceable></arg></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Описание</title>

    <para>
     <application>psql</> - это терминальный клиент для работы с  <productname>PostgreSQL</>.
     Позволяет интерактивно вводить запросы, отправлять их в <productname>PostgreSQL</>
     и смотреть результаты. Ввод может быть не только интерактивным, но и из файла. 
     Кроме того, предоставляется ряд мета-команд и различные возможности подобные тем, 
     что имеются у командных оболочек, для облегчения 
     написания скриптов и автоматизации широкого спектра задач.
    </para>
 </refsect1>

 <refsect1 id="R1-APP-PSQL-3">
  <title>Опции</title>

  <variablelist>
    <varlistentry>
      <term><option>-a</></term>
      <term><option>--echo-all</></term>
      <listitem>
      <para>
      Отправляет на стандартный вывод все непустые входные строки 
      по мере их чтения. (Это не относится к строкам, считанным в 
      интерактивном режиме.) Эквивалентно установке переменной 
      <varname>ECHO</varname> в значение <literal>all</literal>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-A</></term>
      <term><option>--no-align</></term>
      <listitem>
      <para>
      Переключение на невыровненный режим вывода. 
      (По умолчанию, наоборот, используется выровненный режим вывода.)
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-c <replaceable class="parameter">command</replaceable></></term>
      <term><option>--command=<replaceable class="parameter">command</replaceable></></term>
      <listitem>
      <para>
      Указывает, что <application>psql</application> должен выполнить одну командную строку, 
      <replaceable class="parameter">command</replaceable>, а затем завершить работу. 
      Это полезно в скриптах. Файлы запуска 
      (<filename>psqlrc</filename> и <filename>~/.psqlrc</filename>) с этой опцией игнорируются.
      </para>
      <para><replaceable class="parameter">command</replaceable>
      должна быть либо командной строкой, которая полностью интерпретируется сервером 
      (т.е. не содержит специфических для <application>psql</application> возможностей), 
      либо одиночной командой, начинающейся с \. Таким образом, при использовании этой опции 
      нельзя смешивать <acronym>SQL</acronym> и мета-команды <application>psql</application>. 
      Тем не менее, этого можно добиться, если передать строку 
      в <application>psql</application> вот так: 
      <literal>echo '\x \\ SELECT * FROM foo;' | psql</literal>. 
      (<literal>\\</> является разделителем для мета-команд.)
      </para>
      <para>
       Если командная строка содержит несколько команд SQL, они обрабатываются 
       в одной транзакции, если только нет явных <command>BEGIN</>/<command>COMMIT</> команд, 
       включенных в строку, разделяющих ее на несколько транзакций. 
       Это отличается от поведения, если эту же строку подать на стандартный ввод 
       <application>psql</application>. 
       Также, возвращается результат только последней SQL-команды.
      </para>
      <para>
       Из-за такого унаследованного поведения, использование более одной команды в опции
       <option>-c</option> часто приводит к неожиданным результатам.
       Лучше подавать несколько команд на стандартный ввод <application>psql</application>, 
       либо с использованием <application>echo</application>, как показано выше, 
       либо через возможности командной оболочки ОС, например:
<programlisting>
psql &lt;&lt;EOF
\x
SELECT * FROM foo;
EOF
</programlisting>
      </para>

      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></></term>
      <listitem>
      <para>
       Указывает имя базы данных для подключения. Эквивалентно указанию 
       <replaceable class="parameter">dbname</replaceable> в качестве первого аргумента, 
       не являющегося параметром в командной строке.
      </para>
      <para>
       Если этот параметр содержит знак <symbol>=</symbol> или начинается с допустимого 
       <acronym>URI</acronym> префикса 
       (<literal>postgresql://</literal> или <literal>postgres://</literal>), 
       он рассматривается как строка <parameter>conninfo</parameter>. 
       Дополнительная информация в <xref linkend="libpq-connstring">.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-e</></term>
      <term><option>--echo-queries</></term>
      <listitem>
      <para>
      Посылает все команды SQL, отправленные на сервер, еще и на стандартный вывод. 
      Эквивалентно установке переменной <varname>ECHO</varname> в значение 
      <literal>queries</literal>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-E</></term>
      <term><option>--echo-hidden</></term>
      <listitem>
      <para>
      Отображает фактические запросы, генерируемые <command>\d</command> и другими командами, 
      начинающимися с \. Это можно использовать для изучения внутренних операций 
      в <application>psql</application>. 
      Эквивалентно установке переменной <varname>ECHO_HIDDEN</varname>
      значения <literal>on</>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-f <replaceable class="parameter">filename</replaceable></></term>
      <term><option>--file=<replaceable class="parameter">filename</replaceable></></term>
      <listitem>
      <para>
      Использует файл <replaceable class="parameter">filename</replaceable>
      в качестве источника команд вместо чтения команд в интерактивном режиме. 
      После обработки файла, работа <application>psql</application> завершается. 
      Это во многом эквивалентно мета-команде <command>\i</command>.
      </para>

      <para>
       Если <replaceable>filename</replaceable> это <literal>-</literal> (дефис), 
       то читается стандартный ввод.
      </para>

      <para>
      Использование этой опции немного отличается от 
      <literal>psql &lt; <replaceable class="parameter">filename</replaceable></literal>. 
      В основном, оба варианта будут делать то, что вы ожидаете, но с <literal>-f</literal> 
      доступны некоторые полезные свойства, такие как сообщения об ошибках с номерами строк. 
      Также есть небольшая вероятность, что с этой опцией уменьшаются накладные расходы 
      на запуск. С другой стороны, вариант с перенаправлением ввода из командного 
      интерпретатора (в теории) гарантирует получение точно такого же вывода, 
      какой вы получили бы, если ввели все вручную.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-F <replaceable class="parameter">separator</replaceable></></term>
      <term><option>--field-separator=<replaceable class="parameter">separator</replaceable></></term>
      <listitem>
      <para>
      Использование <replaceable class="parameter">separator</replaceable> в качестве 
      разделителя полей при невыровненном режиме вывода. 
      Эквивалентно <command>\pset fieldsep</command> или <command>\f</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-h <replaceable class="parameter">hostname</replaceable></></term>
      <term><option>--host=<replaceable class="parameter">hostname</replaceable></></term>
      <listitem>
      <para>
      Указывает имя хоста машины, на которой запущен сервер.  
      Если значение начинается с косой черты, то оно используется в качестве 
      директории для доменного сокета Unix.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-H</></term>
      <term><option>--html</></term>
      <listitem>
      <para>
      Включает табличный вывод в формате <acronym>HTML</acronym>. 
      Эквивалентно <literal>\pset format html</literal> или команде <command>\H</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-l</></term>
      <term><option>--list</></term>
      <listitem>
      <para>
      Выводит список всех доступных баз данных и завершает работу. 
      Другие опции, не связанные с соединением, игнорируются. 
      Это похоже на мета-команду <command>\list</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-L <replaceable class="parameter">filename</replaceable></></term>
      <term><option>--log-file=<replaceable class="parameter">filename</replaceable></></term>
      <listitem>
      <para>
       В дополнение к обычному выводу, записывает вывод результатов всех запросов в файл 
       <replaceable class="parameter">filename</replaceable>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-n</></term>
      <term><option>--no-readline</></term>
      <listitem>
      <para>
       Отключает использование <application>Readline</application> для 
       редактирования командной строки и использования истории команд. 
       Может быть полезно, для выключения расширенных действий клавиши 
       табуляции при вырезании и вставке.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-o <replaceable class="parameter">filename</replaceable></></term>
      <term><option>--output=<replaceable class="parameter">filename</replaceable></></term>
      <listitem>
      <para>
      Записывает вывод результатов всех запросов в файл 
      <replaceable class="parameter">filename</replaceable>. 
      Эквивалентно команде <command>\o</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></></term>
      <listitem>
      <para>
      Задает порт TCP или локальный доменный сокет Unix, на котором сервер прослушивает 
      соединения. По умолчанию используется значение переменной среды 
      <envar>PGPORT</envar>, если оно не установлено, то используется значение, 
      указанное во время компиляции, обычно 5432.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-P <replaceable class="parameter">assignment</replaceable></></term>
      <term><option>--pset=<replaceable class="parameter">assignment</replaceable></></term>
      <listitem>
      <para>
      Задает параметры печати, в стиле команды <command>\pset</command>. 
      Обратите внимание, что имя параметра и значение разделяются знаком равенства, 
      а не пробела. Например, чтобы установить формат вывода в <application>LaTeX</application>, 
      нужно написать <literal>-P format=latex</literal>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-q</></term>
      <term><option>--quiet</></term>
      <listitem>
      <para>
      Указывает, что <application>psql</application> должен работать без вывода
      дополнительных сообщений. 
      По умолчанию, выводятся приветствия и различные информационные сообщения. 
      Этого не произойдет с использованием данной опции. 
      Полезно вместе с опцией <option>-c</option>. Это эквивалентно установке
      переменной <varname>QUIET</varname> значения <literal>on</>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-R <replaceable class="parameter">separator</replaceable></></term>
      <term><option>--record-separator=<replaceable class="parameter">separator</replaceable></></term>
      <listitem>
      <para>
      Использует <replaceable class="parameter">separator</replaceable>
      как разделитель записей при невыровненном режиме вывода. 
      Эквивалентно команде <command>\pset recordsep</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-s</></term>
      <term><option>--single-step</></term>
      <listitem>
      <para>
      Запуск в пошаговом режиме. Это означает, что пользователь будет подтверждать 
      выполнение каждой команды, отправляемой на сервер, с возможностью отменить выполнение. 
      Используется для отладки скриптов.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-S</></term>
      <term><option>--single-line</></term>
      <listitem>
      <para>
      Запуск в однострочном режиме, при котором символ новой строки завершает SQL команды, 
      также как это делает точка с запятой.
      </para>

      <note>
      <para>
      Этот режим предназначен для тех, кто на нем настаивает, но вы не обязаны 
      рекомендовать его использовать. В частности, если смешать на одной строке команды 
      <acronym>SQL</acronym> и мета-команды, то порядок их выполнения может быть не всегда 
      очевиден для неопытного пользователя.
      </para>
      </note>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-t</></term>
      <term><option>--tuples-only</></term>
      <listitem>
      <para>
      Отключает вывод имен столбцов и результирующей строки с количеством выбранных записей. 
      Эквивалентно команде <command>\t</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-T <replaceable class="parameter">table_options</replaceable></></term>
      <term><option>--table-attr=<replaceable class="parameter">table_options</replaceable></></term>
      <listitem>
      <para>
      Задает атрибуты, которые будут вставлены 
      в тег <acronym>HTML</acronym> <sgmltag>table</sgmltag>. 
      Смотри <command>\pset</command> для деталей.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-U <replaceable class="parameter">username</replaceable></></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></></term>
      <listitem>
      <para>
      Подключение к базе данных под пользователем 
      <replaceable class="parameter">username</replaceable> вместо используемого по умолчанию. 
      (Разумеется, при наличии прав на это.)
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-v <replaceable class="parameter">assignment</replaceable></></term>
      <term><option>--set=<replaceable class="parameter">assignment</replaceable></></term>
      <term><option>--variable=<replaceable class="parameter">assignment</replaceable></></term>
      <listitem>
      <para>
      Выполняет присвоение значения переменной, как мета-команда <command>\set</command>. 
      Обратите внимание на то, что необходимо разделить имя переменной и значение (при наличии) 
      знаком равенства в командной строке. Чтобы сбросить переменную, опустите знак равенства. 
      Чтобы установить пустое значение, поставьте знак равенства, но опустите значение. 
      Присваивания выполняются на очень ранней стадии запуска, поэтому если переменные 
      зарезервированы для внутренних целей, то позже они могут быть перезаписаны.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-V</></term>
      <term><option>--version</></term>
      <listitem>
      <para>
      Выводит версию <application>psql</application> и завершает работу.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-w</></term>
     <term><option>--no-password</></term>
     <listitem>
      <para>
       Никогда не выдавать запрос  на ввод пароля. Если сервер требует аутентификацию 
       по паролю и пароль не доступен с помощью других средств, таких как файл 
       <filename>.pgpass</filename>, попытка соединения не удастся. 
       Опция может быть полезна в пакетных заданиях и скриптах, где нет пользователя, 
       который вводит пароль.
      </para>

      <para>
       Обратите внимание, что эта опция действует на протяжении всей сессии и, таким образом, 
       влияет на мета-команду <command>\connect</command>, 
       также как и на первую попытку соединения.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-W</></term>
      <term><option>--password</></term>
      <listitem>
      <para>
       Принудительно запрашивает пароль перед подключением к базе данных.
      </para>

      <para>
       Эта опция не существенна, так как <application>psql</application> 
       автоматически запрашивает пароль, если сервер требует аутентификацию по паролю. 
       Однако, <application>psql</application> использует дополнительную попытку соединения 
       для выяснения того, что серверу требуется пароль. В некоторых случаях стоит вводить 
       <option>-W</>, чтобы избежать лишней попытки соединения.
      </para>

      <para>
       Обратите внимание, что эта опция действует на протяжении всей сессии и, таким образом, 
       влияет на мета-команду <command>\connect</command>, 
       также как и на первую попытку соединения.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-x</></term>
      <term><option>--expanded</></term>
      <listitem>
      <para>
      Включает режим развернутого вывода таблицы. Эквивалентно команде <command>\x</command>.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-X,</></term>
      <term><option>--no-psqlrc</></term>
      <listitem>
      <para>
      Не читать стартовые файлы (ни общесистемный файл 
      <filename>psqlrc</filename>, ни пользовательский файл <filename>~/.psqlrc</filename>).
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-z</option></term>
      <term><option>--field-separator-zero</option></term>
      <listitem>
      <para>
      Установить нулевой байт в качестве разделителя полей для невыровненного режима вывода.
      </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-0</option></term>
      <term><option>--record-separator-zero</option></term>
      <listitem>
      <para>
      Установить нулевой байт в качестве разделителя записей для невыровненного режима вывода. 
      Это полезно при взаимодействии с другими программами, 
      например, с <literal>xargs -0</literal>.
      </para>
      </listitem>
    </varlistentry>

     <varlistentry>
      <term><option>-1</option></term>
      <term><option>--single-transaction</option></term>
      <listitem>
       <para>
        Если <application>psql</application> выполняет скрипт, то добавление этой опции 
        заключает скрипт в <command>BEGIN</>/<command>COMMIT</>
        для выполнения в рамках одной транзакции.  Это гарантирует, что либо все команды 
        успешно завершены, либо никаких изменений не произведено.
       </para>

       <para>
        Если в самом скрипте используются <command>BEGIN</>, <command>COMMIT</> 
        или <command>ROLLBACK</>, то эта опция не будет иметь желаемого эффекта. 
        Кроме того, если скрипт содержит любую команду, которая не может быть выполнена 
        внутри транзакционного блока, указание этой опции приведет к сбою команды 
        и, следовательно, всей транзакции.
       </para>
      </listitem>
     </varlistentry>

    <varlistentry>
      <term><option>-?</></term>
      <term><option>--help</></term>
      <listitem>
      <para>
      Показывает справку об аргументах командной строки <application>psql</application> 
      и завершает работу.
      </para>
      </listitem>
    </varlistentry>

  </variablelist>
 </refsect1>


 <refsect1>
  <title>Код завершения</title>

  <para>
   При нормальном завершении <application>psql</application> возвращает 0 в командную оболочку ОС, 
   1 - если произошла фатальная ошибка в самом <application>psql</application>
   (например, нехватка памяти, файл не найден), 
   2 - при неудачном соединении с сервером  неинтерактивного сеанса, 
   3 - при ошибке в скрипте и установленной переменной <varname>ON_ERROR_STOP</varname>.
  </para>
 </refsect1>


 <refsect1>
  <title>Использование</title>

  <refsect2 id="R2-APP-PSQL-connecting">
    <title>Подключение к базе данных</title>

    <para>
    <application>psql</application> это клиент для 
    <productname>PostgreSQL</productname>. 
    Для подключения к базе данных нужно знать имя базы данных, имя хоста, номер порта сервера 
    и имя пользователя, под которым вы хотите подключиться. Эти параметры можно задать 
    через опции командной строки, а именно 
    <option>-d</option>, <option>-h</option>, <option>-p</option> и <option>-U</option>
    соответственно. 
    Если в командной строке есть аргумент, который не принадлежит ни к одной опции 
    <application>psql</application>, то он используется в качестве имени базы данных 
    (или имени пользователя, если база данных уже задана). Не все эти опции необходимы, 
    есть полезные значения по умолчанию. Если опустить имя хоста, 
    <application>psql</application> будет подключаться через сокет Unix-домена 
    к серверу на локальном хосте, или подключаться к <literal>localhost</> 
    через TCP/IP на компьютерах, не использующих UNIX сокеты. 
    Номер порта по умолчанию определяется во время компиляции. 
    Поскольку сервер базы данных использует то же значение по умолчанию, в большинстве 
    случаев вам не нужно указывать номер порта. Имя пользователя по умолчанию, 
    как и имя базы данных по умолчанию, совпадает с именем пользователя 
    в операционной системе. 
    Обратите внимание, что вы не можете просто подключиться к любой базе данных 
    под любым именем пользователя. Администратор базы данных должен сообщить вам 
    о ваших правах доступа.
    </para>

    <para>
    Если значения по умолчанию не подходят, можно сэкономить на вводе параметров 
    подключения установив переменные среды 
    <envar>PGDATABASE</envar>, <envar>PGHOST</envar>, <envar>PGPORT</envar>
    и/или <envar>PGUSER</envar>. 
    (О дополнительных переменных среды, смотри <xref linkend="libpq-envars">.) 
    Также удобно иметь файл <filename>~/.pgpass</> для избегания постоянного ввода паролей. 
    Дополнительная информация в <xref linkend="libpq-pgpass">.
    </para>

    <para>
     Альтернативный способ указать параметры подключения это использование строки 
     <parameter>conninfo</parameter> или <acronym>URI</acronym> 
     вместо имени базы данных. 
     Этот механизм дает широкие возможности по управлению параметрами подключения. 
     Например:
<programlisting>
$ <userinput>psql "service=myservice sslmode=require"</userinput>
$ <userinput>psql postgresql://dbmaster:5433/mydb?sslmode=require</userinput>
</programlisting>
     Этот способ также позволяет использовать <acronym>LDAP</acronym> для получения параметров 
     подключения, как описано в <xref linkend="libpq-ldap">. 
     Смотри <xref linkend="libpq-paramkeywords"> для информации 
     обо всех имеющихся опциях соединения.
    </para>

    <para>
    Если соединение не может быть установлено по любой причине (например, нет прав, 
    сервер не работает и т.д.), <application>psql</application> вернет ошибку 
    и прекратит работу.
    </para>

    <para>
     Если и стандартный ввод, и стандартный вывод являются терминалом, 
     то <application>psql</application> установит кодировку клиента в <quote>auto</quote>, 
     и подходящая клиентская кодировка будет определяться из локальных установок 
     (переменная окружения <envar>LC_CTYPE</envar> на Unix системах). 
     Если это работает не так как ожидалось, кодировку клиента можно изменить, 
     установив переменную окружения <envar>PGCLIENTENCODING</envar>.
    </para>
  </refsect2>

  <refsect2 id="R2-APP-PSQL-4">
    <title>Ввод SQL команд</title>

    <para>
    Как правило, приглашение <application>psql</application> состоит из имени базы данных, 
    к которой <application>psql</application> в данный момент подключен, 
    а затем строки <literal>=&gt;</literal>. Например:
<programlisting>
$ <userinput>psql testdb</userinput>
psql (&version;)
Введите "help", чтобы получить справку.

testdb=&gt;
</programlisting>
    </para>

    <para>
    В командной строке, пользователь может вводить команды <acronym>SQL</acronym>. 
    Обычно, введенные строки отправляются на сервер когда встречается точка с запятой,
    завершающая команду. Конец строки не завершает команду. Это позволяет 
    разбивать команды на несколько строк для лучшего понимания. Если команда была 
    отправлена и выполнена без ошибок, то результат команды выводится на экран.
    </para>

    <para>
    При каждом выполнении команды, <application>psql</application> также проверяет 
    асинхронные уведомления о событиях, генерируемые командами
    <xref linkend="SQL-LISTEN"> и
    <xref linkend="SQL-NOTIFY">.
    </para>

    <para>                                                                      
    Комментарии в стиле C передаются для обработки на сервер, в то время как
    комментарии в стандарте SQL <application>psql</application> удаляет 
    перед отправкой.
    </para>  
  </refsect2>

  <refsect2 id="APP-PSQL-meta-commands">
    <title>Мета-Команды</title>

    <para>
    Всё что вводится в <application>psql</application> не взятое в кавычки и начинающееся 
    с обратной косой черты, является мета-командой <application>psql</application> 
    и обрабатывается самим <application>psql</application>. Эти команды делают 
    <application>psql</application> полезным для задач администрирования 
    и разработки скриптов. 
    </para>

    <para>
    Формат команды <application>psql</application> следующий: бэкслеш, 
    сразу за ним команда, затем аргументы. Аргументы отделяются от команды 
    и друг от друга любым количеством пробелов.
    </para>

    <para>
    Чтобы включить пробел в значение аргумента нужно заключить его в одинарные кавычки. 
    Чтобы включить одинарную кавычку в значение аргумента нужно написать две 
    одинарные кавычки внутри текста в одинарных кавычках. Всё, что содержится 
    в одинарных кавычках подлежит заменам принятым в языке C: 
    <literal>\n</literal> (новая строка), 
    <literal>\t</literal> (табуляция), 
    <literal>\b</literal> (backspace), 
    <literal>\r</literal> (возврат каретки), 
    <literal>\f</literal> (подача страницы), 
    <literal>\</literal><replaceable>цифры</replaceable> (восьмеричное число), и 
    <literal>\x</literal><replaceable>цифры</replaceable> (шестнадцатеричное число). 
    Если внутри текста в одинарных кавычках встречается бэкслеш перед любым 
    другим символом, то он экранирует этот символ.
    </para>

    <para>
    Текст аргумента, заключенный в обратные кавычки (<literal>`</literal>) 
    считается командной строкой, которая передается в командную оболочку ОС. 
    Вывод от этой команды (с удаленными в конце символами новой строки) 
    заменяет текст в обратных кавычках.
    </para>

    <para>
    Если внутри аргумента встречается не взятое в кавычки имя 
    <application>psql</> переменной с двоеточием (<literal>:</literal>) перед ним, 
    то оно заменяется на значение <application>psql</> переменной, как описано в 
    <xref linkend="APP-PSQL-interpolation" endterm="APP-PSQL-interpolation-title">.
    </para>

    <para>
    Некоторые команды принимают идентификатор <acronym>SQL</acronym>
    (например, имя таблицы) в качестве аргумента. Такие аргументы следуют правилам 
    синтаксиса <acronym>SQL</acronym>: буквы, не взятые в кавычки,  преобразуются 
    в нижний регистр, буквы, взятые в двойные кавычки (<literal>"</>)  
    предотвращают преобразование регистра и позволяют включать пробелы в идентификатор. 
    Внутри двойных кавычек, две двойные кавычки сокращаются до одной. Например, 
    <literal>FOO"BAR"BAZ</> интерпретируется как <literal>fooBARbaz</>, 
    а <literal>"A weird"" name"</> становится <literal>A weird" name</>.
    </para>

    <para>
    Разбор аргументов останавливается в конце строки или когда встречается другой, 
    не внутри кавычек, бэкслеш. Бэкслеш не внутри кавычек, рассматривается как 
    начало новой мета-команды. Специальная последовательность <literal>\\</literal> 
    (два бэкслеша) обозначает окончание аргументов, далее продолжается разбор команд 
    <acronym>SQL</acronym>, если таковые имеются. Таким образом, 
    команды <acronym>SQL</acronym> и <application>psql</application> можно свободно 
    смешивать на одной строке. Но в любом случае, аргументы мета-команды не могут 
    выходить за пределы текущей строки.
    </para>

    <para>
    Определены следующие мета-команды:

    <variablelist>
      <varlistentry>
        <term><literal>\a</literal></term>
        <listitem>
        <para>
        Если текущий режим вывода таблицы невыровненный, то он переключается на 
        выравненный режим. Если текущий режим выровненный, то устанавливается невыровненный. 
        Эта команда поддерживается для обратной совместимости. 
        См. <command>\pset</command> для более общего решения.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\c</literal> или <literal>\connect</literal> <literal>[ <replaceable class="parameter">dbname</replaceable> [ <replaceable class="parameter">username</replaceable> ] [ <replaceable class="parameter">host</replaceable> ] [ <replaceable class="parameter">port</replaceable> ] ]</literal></term>
        <listitem>
        <para>
        Устанавливает новое подключение к серверу <productname>PostgreSQL</>. 
        Если новое подключение успешно установлено, предыдущее подключение закрывается. 
        Если какой-либо из параметров подключения 
        <replaceable class="parameter">dbname</replaceable>, 
        <replaceable class="parameter">username</replaceable>, 
        <replaceable class="parameter">host</replaceable> или 
        <replaceable class="parameter">port</replaceable> не указан 
        или указан как <literal>-</literal>, используется значение этого параметра от 
        предыдущего соединения. Если нет предыдущего подключения, используются значения 
        по умолчанию принятые в <application>libpq</application>.
        </para>

        <para>
        Если попытка подключения не удалась (неверное имя пользователя, доступ запрещен, 
        и т.д.), то предыдущее соединение останется активным, 
        если <application>psql</application> находится в интерактивном режиме. 
        Если скрипт выполняется не интерактивно, обработка немедленно останавливается 
        с сообщением об ошибке. Такое различие в поведении было выбрано для удобства 
        пользователя в отношении опечаток с одной стороны, и механизма безопасности, 
        при котором скрипты не будут запущены на неправильной базе данных с другой стороны.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\C [ <replaceable class="parameter">title</replaceable> ]</literal></term>
        <listitem>
        <para>
        Задаёт заголовок, который будет выводиться для результатов любых запросов или 
        отменяет установленный ранее заголовок. Эта команда эквивалентна 
        <literal>\pset title <replaceable class="parameter">title</replaceable></literal>. 
        (Название этой команды происходит от <quote>caption</quote>, 
        т.к. ранее это использовалось только для задания заголовков 
        <acronym>HTML</acronym> таблиц.)
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
       <term><literal>\cd [ <replaceable>directory</replaceable> ]</literal></term>
       <listitem>
        <para>
         Заменяет текущий рабочий каталог на <replaceable>directory</replaceable>. 
         Без аргумента, устанавливается домашний каталог текущего пользователя.
        </para>

        <tip>
         <para>
          для печати текущего рабочего каталога, используйте <literal>\! pwd</literal>.
         </para>
        </tip>
       </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\conninfo</literal></term>
        <listitem>
        <para>
        Выводит информацию о текущем подключении к базе данных.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry id="APP-PSQL-meta-commands-copy">
        <term><literal>\copy { <replaceable class="parameter">table</replaceable> [ ( <replaceable class="parameter">column_list</replaceable> ) ] | ( <replaceable class="parameter">query</replaceable> ) }
        { <literal>from</literal> | <literal>to</literal> }
        { <replaceable class="parameter">'filename'</replaceable> | program <replaceable class="parameter">'command'</replaceable> | stdin | stdout | pstdin | pstdout }
        [ [ with ] ( <replaceable class="parameter">option</replaceable> [, ...] ) ]</literal></term>

        <listitem>
        <para>
        Выполняет копирование на клиенте. Это операция, которая выполняет 
        <acronym>SQL</acronym> команду <xref linkend="SQL-COPY">, 
        но вместо чтения или записи в файл на сервере, <application>psql</application> 
        читает или записывает файл и пересылает данные между сервером и локальной 
        файловой системой. Это означает, что для доступа к файлам используются привилегии 
        локального пользователя, а не сервера, и не требуются привилегии суперпользователя SQL.
        </para>

        <para>
        Когда указана <literal>program</>, <application>psql</application> выполняет 
        <replaceable class="parameter">command</replaceable> и данные из/в 
        <replaceable class="parameter">command</replaceable> передаются между сервером 
        и клиентом. Это опять же означает, что для выполнения программ используются привилегии 
        локального пользователя, а не сервера, и не требуются привилегии суперпользователя SQL.
        </para>

        <para> 
        При выполнении <literal>\copy ... from stdin</> строки с данными 
        считываются из источника, выполневшего команду, и считываются до тех пор, 
        пока не встретится <literal>\.</literal> или не будет достигнут конец файла.
        Эта опция полезна для заполнения таблиц прямо в SQL скриптах.
        При выполнении <literal>\copy ... to stdout</> вывод направляется в тоже место, 
        что и вывод <application>psql</> команд. Статус команды 
        <literal>COPY <replaceable>count</></literal> не отображается, чтобы не перепутать 
        со строкой данных.
        Для чтения/записи стандартного ввода/вывода <application>psql</application>,
        вне зависимости от источника текущей команды или опции <literal>\o</>, 
        используйте <literal>from pstdin</> или <literal>to pstdout</>. 
        </para>

        <para>
        Синтаксис команды похож на синтаксис <acronym>SQL</acronym> команды 
        <xref linkend="sql-copy">. Все опции, кроме источника и получателя 
        данных, соответствуют опциям <xref linkend="sql-copy">. 
        Поэтому к команде <command>\copy</command> 
        применяются специальные правила разбора. В частности, не применяются правила 
        подстановки переменных и экранирование при помощи бэкслеш.
        </para>

        <tip>
        <para>
        Эта операция не так эффективна, как <acronym>SQL</acronym> команда 
        <command>COPY</command>, потому что все данные перемещаются между клиентом и сервером. 
        Для больших объемов данных <acronym>SQL</acronym> команда может быть предпочтительнее.
        </para>
        </tip>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\copyright</literal></term>
        <listitem>
        <para>
        Показывает информацию об авторских правах и условиях распространения 
        <productname>PostgreSQL</productname>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\d[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
        Для каждого отношения (таблицы, представления, индекса, последовательности, 
        внешней таблицы) или составного типа, соответствующих шаблону 
        <replaceable class="parameter">pattern</replaceable>, 
        показывает столбцы, их типы, табличное пространство (если не по умолчанию) 
        и любые специальные атрибуты, такие как <literal>NOT NULL</literal>
        или значения по умолчанию. Также показываются связанные индексы, ограничения, 
        правила и триггеры. Для внешних таблиц показывается связанный внешний сервер. 
        (<quote>Соответствие шаблону</> определяется ниже в 
        <xref linkend="APP-PSQL-patterns" endterm="APP-PSQL-patterns-title">.)
        </para>

        <para>
        Для некоторых типов отношений, <literal>\d</> показывает 
        дополнительную информацию по каждому столбцу: значения столбца для 
        последовательностей, индексное выражение для индексов и параметры 
        обработчика внешних данных для внешних таблиц.
        </para>

        <para>
        Вариант команды <literal>\d+</literal> похож на <literal>\d</literal>, 
        но выводит больше информации: комментарии к столбцам таблицы, 
        наличие в таблице OID, для представлений показывается его определение,
        отличные от значений по умолчанию установки 
        <link linkend="SQL-CREATETABLE-REPLICA-IDENTITY">replica identity</link>.
        </para>

        <para>
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>.
        </para>

        <note>
        <para>
        Если <command>\d</command> используется без 
        <replaceable class="parameter">pattern</replaceable>, 
        это эквивалентно <command>\dtvsE</command> и показывает список всех 
        доступных таблиц, представлений, последовательностей и внешних таблиц. 
        Чисто для удобства.
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\da[S] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
        Выводит список агрегатных функций, вместе с типом возвращаемого значения 
        и типами данных, которыми они оперируют. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        отображаются только функции, имена которых соответствуют шаблону. 
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\db[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
        Выводит список табличных пространств. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        отображаются только табличные пространства, имена которых соответствуют шаблону. 
        При добавлении <literal>+</literal> к имени команды, для каждого объекта 
        дополнительно будут выводиться права доступа и описание.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dc[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список преобразований между кодировками наборов символов. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        отображаются только преобразования кодировок, имена которых соответствуют 
        шаблону. По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>. При добавлении <literal>+</literal> к имени команды, 
        для каждого объекта дополнительно будет выводиться описание.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dC[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список приведения типов. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        отображаются только  приведения типов, имена которых соответствуют шаблону. 
        При добавлении <literal>+</literal> к имени команды, для каждого объекта 
        дополнительно будет выводиться описание.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dd[S] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Показывает описания объектов следующих типов: 
        <literal>constraint</>, 
        <literal>operator class</>, 
        <literal>operator family</>, 
        <literal>rule</> и 
        <literal>trigger</>. 
        Описания для остальных объектов можно посмотреть соответствующими мета-командами 
        для этих типов объектов.
        </para>

        <para>
        <literal>\dd</literal> показывает описания для объектов, соответствующих шаблону 
        <replaceable class="parameter">pattern</replaceable>, 
        или для доступных объектов указанных типов, если аргументы не заданы. 
        Но в любом случае, выводятся только те объекты, которые имеют описание. 
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>.
        </para>

        <para>
        Описания объектов создаются <acronym>SQL</acronym> командой 
        <xref linkend="sql-comment">.
       </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\ddp [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список настроек прав доступа по умолчанию. Выводится строка для 
        каждой роли (и схемы, если применимо), для которой настройки прав доступа 
        по умолчанию были изменены от встроенных по умолчанию. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        выводятся строки только  для тех ролей и схем, чьи имена соответствуют шаблону.
        </para>

        <para>
        Права доступа по умолчанию устанавливаются командой 
        <xref linkend="sql-alterdefaultprivileges">. 
        Смысл отображаемых привилегий объясняется в <xref linkend="sql-grant">.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dD[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список доменов. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        отображаются только домены, имена которых соответствуют шаблону. 
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>. При добавлении <literal>+</literal> к имени команды, 
        для каждого объекта дополнительно будут выводиться права доступа и описание.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dE[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\di[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\dm[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\ds[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\dt[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <term><literal>\dv[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
        В этой группе команд буквы 
        <literal>E</literal>, 
        <literal>i</literal>, 
        <literal>m</literal>, 
        <literal>s</literal>, 
        <literal>t</literal> и 
        <literal>v</literal> 
        обозначают соответственно: внешнюю таблицу, индекс, материализованное представление, 
        последовательность, таблицу и представление. Можно указывать все или часть этих букв,
        в произвольном порядке, чтобы получить список объектов этих типов. 
        Например, <literal>\dit</> выводит список индексов и таблиц. 
        При добавлении <literal>+</literal> к имени команды, для каждого объекта 
        дополнительно будут выводиться физический размер на диске и описание, при наличии. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только объекты, имена которых соответствуют шаблону. По умолчанию 
        отображаются только объекты, созданные пользователем. Для включения системных 
        объектов нужно задать шаблон или добавить модификатор <literal>S</literal>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\des[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список внешних серверов (мнемоника: <quote>external servers</quote>). 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только сервера, имена которых соответствуют шаблону. 
        Если используется форма <literal>\des+</literal>, 
        то выводится полное описание каждого сервера, включая права доступа, тип, версию, 
        параметры и описание.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\det[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список внешних таблиц (мнемоника: <quote>external tables</quote>). 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        выводятся только те записи, у которых имя таблицы или схемы соответствуют шаблону. 
        Если используется форма <literal>\det+</literal>, то дополнительно 
        выводятся общие параметры и описание внешней таблицы.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\deu[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список сопоставлений пользователей (мнемоника: 
        <quote>external users</quote>). 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только сопоставления, у которых имена пользователей соответствуют 
        шаблону. Если используется форма <literal>\deu+</literal>, 
        то выводится дополнительная информация о каждом сопоставлении пользователей.
        </para>

        <caution>
        <para>
        <literal>\deu+</literal> также может отображать имя и пароль удаленного 
        пользователя, поэтому следует позаботиться о том, чтобы не раскрывать их.
        </para>
        </caution>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dew[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список обработчиков внешних данных 
        (мнемоника: <quote>external wrappers</quote>). 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только обработчики внешних данных, имена которых соответствуют 
        шаблону. Если используется форма <literal>\dew+</literal>, 
        то дополнительно выводятся права доступа, параметры и описание обработчика.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\df[antwS+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
        Возвращает список функций, вместе с их аргументами, возвращаемыми типами и типами 
        функций, которые классифицируются как 
        <quote>agg</> (агрегатная), 
        <quote>normal</> (обычная), 
        <quote>trigger</> (триггерная) или 
        <quote>window</> (оконная). 
        Чтобы отобразить только функции определенного типа(типов), добавьте в команду 
        соответствующие буквы 
        <literal>a</>, 
        <literal>n</>, 
        <literal>t</> или 
        <literal>w</>. 
        Если указан pattern, 
        отображаются только функции, имена которых соответствуют шаблону. 
        По умолчанию выводятся только функции созданные пользователем, для включения 
        системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>.
        Если используется форма <literal>\df+</literal>, то выводится дополнительная 
        информация о каждой функции: безопасность, волатильность, владелец, язык, 
        исходный код и описание. 
        </para>

        <tip>
        <para>
        Чтобы найти функции с аргументами или возвращаемыми значениями определенного типа, 
        используйте возможности поиска вашего пейджера для прокрутки вывода команды 
        <literal>\df</>.
        </para>
        </tip>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dF[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
         Выводит список конфигураций текстового поиска. 
         Если указан <replaceable class="parameter">pattern</replaceable>, 
         отображаются только конфигурации, имена которых соответствуют шаблону. 
         Если используется форма <literal>\dF+</literal>, то выводится полное описание 
         для каждой конфигурации, включая базовый синтаксический анализатор 
         и используемые словари для каждого типа токена.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dFd[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
         Выводит список словарей текстового поиска. 
         Если указан <replaceable class="parameter">pattern</replaceable>, 
         отображаются только словари, имена которых соответствуют шаблону. 
         Если используется форма <literal>\dFd+</literal>, то выводится дополнительная 
         информация о каждом словаре включая базовый шаблон текстового поиска 
         и параметры инициализации.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dFp[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
         Выводит список анализаторов текстового поиска. 
         Если указан <replaceable class="parameter">pattern</replaceable>, 
         отображаются только анализаторы, имена которых соответствуют шаблону. 
         Если используется форма <literal>\dFp+</literal>, 
         то выводится полное описание для каждого анализатора, 
         включая базовые функции и список типов токенов.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dFt[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
         Выводит список шаблонов текстового поиска. 
         Если указан <replaceable class="parameter">pattern</replaceable>, 
         отображаются только шаблоны, имена которых соответствуют шаблону. 
         Если используется форма <literal>\dFt+</literal>, то выводится дополнительная 
         информация о каждом шаблоне, включая имена основных функций.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dg[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список ролей базы данных. (Так как понятия 
        <quote>пользователи</> и <quote>группы</> были объединены в 
        <quote>роли</>, эта команда теперь эквивалентна <literal>\du</literal>.) 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только роли, имена которых соответствуют шаблону. 
        Если используется форма <literal>\dg+</literal>, то выводится дополнительная 
        информация о каждой роли, в настоящее время добавлено описание роли.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dl</literal></term>
        <listitem>
        <para>
        Это псевдоним для <command>\lo_list</command>, показывает список больших объектов.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dL[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список процедурных языков. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только языки, имена которых соответствуют шаблону. 
        По умолчанию отображаются только языки, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>. При добавлении <literal>+</literal> к имени команды, 
        для каждого языка дополнительно будут выводиться: обработчик вызова, валидатор, 
        права доступа и является ли язык системным объектом.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dn[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>

        <listitem>
        <para>
        Выводит список схем (пространств имён). 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только схемы, имена которых соответствуют шаблону. 
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>. При добавлении <literal>+</literal> к имени команды, 
        для каждого объекта дополнительно будут выводиться права доступа и описание, 
        при наличии.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\do[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список операторов, их операндов и типы результата. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только операторы, имена которых соответствуют шаблону. 
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>.
        При добавлении <literal>+</literal> к имени команды, для каждого оператора
        будет выводиться дополнительная информация, сейчас это имя функции, 
        на которой основан оператор.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dO[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список правил сортировки. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только правила, имена которых соответствуют шаблону. 
        По умолчанию отображаются только объекты, созданные пользователем. 
        Для включения системных объектов нужно задать шаблон или добавить модификатор 
        <literal>S</literal>. При добавлении <literal>+</literal> к имени команды, 
        для каждого объекта дополнительно будет выводиться описание, при наличии. 
        Обратите внимание, что отображаются только правила сортировки, 
        применимые к кодировке текущей базы данных, поэтому результат команды 
        может отличаться для различных баз данных этой же установки 
        <productname>PostgreSQL</productname>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\dp [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список таблиц, представлений и последовательностей с их правами доступа. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только таблицы, представления и последовательности, 
        имена которых соответствуют шаблону.
        </para>

        <para>
        Для установки прав доступа используются команды 
        <xref linkend="sql-grant"> и <xref linkend="sql-revoke">. 
        Смысл отображаемых привилегий объясняется в <xref linkend="sql-grant">.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\drds [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">role-pattern</replaceable></link> [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">database-pattern</replaceable></link> ] ]</literal></term>
        <listitem>
        <para>
        Выводит список специфических параметров конфигурации. Эти параметры могут быть 
        специфическими для роли, специфическими для базы данных, или обеих. 
        <replaceable>role-pattern</replaceable> и 
        <replaceable>database-pattern</replaceable>
        используются для отбора по конкретным ролям и базам данных. Если они опущены, 
        или указано <literal>*</>, выводятся все параметры конфигурации, 
        в том числе не относящиеся к ролям или базам данных.
        </para>

        <para>
        Команды <xref linkend="sql-alterrole"> и <xref linkend="sql-alterdatabase"> 
        используются для определения параметров конфигурации специфических для роли 
        или базы данных.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dT[S+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список типов данных. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только типы, имена которых соответствуют шаблону. 
        При добавлении <literal>+</literal> к имени команды, для каждого типа данных 
        дополнительно будет выводиться: внутреннее имя типа, размер, допустимые значения 
        для типа <type>enum</> и права доступа. По умолчанию отображаются 
        только объекты, созданные пользователем. Для включения системных объектов нужно 
        задать шаблон или добавить модификатор <literal>S</literal>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\du[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список ролей базы данных. (Так как понятия 
        <quote>пользователи</> и <quote>группы</> были объединены в 
        <quote>роли</>, эта команда теперь эквивалентна <literal>\dg</literal>.) 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только роли, имена которых соответствуют шаблону. 
        Если используется форма <literal>\du+</literal>, то выводится дополнительная 
        информация о каждой роли, в настоящее время добавлено описание роли.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dx[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список установленных расширений. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только расширения, имена которых соответствуют шаблону. 
        Если используется форма <literal>\dx+</literal>, то для каждого расширения 
        выводятся все принадлежащие ему объекты.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\dy[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список триггеров событий. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только триггеры событий, имена которых соответствуют шаблону. 
        При добавлении <literal>+</literal> к имени команды, для каждого объекта 
        дополнительно будет выводиться описание.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\e</literal> или <literal>\edit</> <literal> <optional> <replaceable class="parameter">filename</> </optional> <optional> <replaceable class="parameter">line_number</> </optional> </literal></term>

        <listitem>
        <para>
        Если указано имя файла 
        <replaceable class="parameter">filename</replaceable>, 
        файл открывается для редактирования. После выхода из редактора, 
        его содержимое копируется в буфер запроса. Если не указано имя файла,
        текущий буфер запроса копируется во временный файл и открывается в редакторе.
        </para>

        <para>
        Затем новый буфер запроса повторно анализируется согласно обычным правилам 
        <application>psql</application>, при этом весь буфер рассматривается 
        как одна строка. (Таким образом, это не подходит для создания скриптов. 
        Для скриптов используйте <command>\i</command>.)  
        Если запрос заканчивается (или содержит) точкой с запятой, он немедленно 
        выполняется. В противном случае он просто будет ждать в буфере запроса. 
        Введите точку с запятой или <literal>\g</> для отправки на выполнение 
        или <literal>\r</> для отмены.
        </para>

        <para>
        Если указан номер строки, <application>psql</application> будет позиционировать 
        курсор на указанную строку файла или буфера запроса. Обратите внимание, 
        что если указан один аргумент и он числовой, <application>psql</application> 
        предполагает, что это номер строки, а не имя файла.
        </para>

        <tip>
        <para>
        См. ниже в разделе 
        <xref linkend="app-psql-environment" endterm="app-psql-environment-title">
        о том, как настроить редактор.
        </para>
        </tip>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\echo <replaceable class="parameter">text</replaceable> [ ... ]</literal></term>
        <listitem>
        <para>
        Выводит аргументы на стандартный вывод, разделяя их одним пробелом, 
        в конце следует перевод строки. Команда полезна для формирования 
        вывода из скриптов. Например:
<programlisting>
=&gt; <userinput>\echo `date`</userinput>
Tue Oct 26 21:40:57 CEST 1999
</programlisting>
        Если первый аргумент <literal>-n</literal> без кавычек, то перевод строки 
        в конце не ставится.
        </para>

        <tip>
        <para>
        Если используется команда <command>\o</command> для перенаправления 
        вывода запросов, возможно, следует применять команду <command>\qecho</command>
        вместо этой.
        </para>
        </tip>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\ef <optional> <replaceable class="parameter">function_description</> <optional>  <replaceable class="parameter">line_number</> </optional> </optional> </literal></term>

        <listitem>
        <para>
         Эта команда извлекает из базы данных определение заданной функции, в форме 
         <command>CREATE OR REPLACE FUNCTION</>, 
         и отправляет его на редактирование. Редактирование осуществляется таким же 
         образом, как и для <literal>\edit</>. После выхода из редактора, 
         измененная команда будет находиться в буфере запроса. Введите точку с запятой 
         или <literal>\g</> для выполнения или <literal>\r</> для отмены.
        </para>

        <para>
         Для функции может быть задано только имя или имя и аргументы, например 
         <literal>foo(integer, text)</>. Типы аргументов необходимы, 
         если существует более чем одна функция с тем же именем.
        </para>

        <para>
         Если функция не задана, для редактирования открывается пустой шаблон команды 
         <command>CREATE FUNCTION</>.
        </para>

        <para>
        Если указан номер строки, <application>psql</application> будет 
        позиционировать курсор на указанную строку тела функции. (Обратите внимание, 
        что тело функции обычно не начинается на первой строке файла).
        </para>

        <tip>
        <para>
        См. ниже в разделе 
        <xref linkend="app-psql-environment" endterm="app-psql-environment-title">
        о том, как настроить редактор.
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\encoding [ <replaceable class="parameter">encoding</replaceable> ]</literal></term>

        <listitem>
        <para>
        Устанавливает кодировку набора символов на клиенте. Без аргумента, 
        команда показывает текущую кодировку.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\f [ <replaceable class="parameter">string</replaceable> ]</literal></term>

        <listitem>
        <para>
        Устанавливает разделитель полей для невыровненного режима вывода запросов. 
        По умолчанию используется вертикальная черта (<literal>|</literal>). 
        См. также <command>\pset</command> для универсального способа настройки 
        параметров вывода.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\g [ <replaceable class="parameter">filename</replaceable> ]</literal></term>
        <term><literal>\g [ |<replaceable class="parameter">command</replaceable> ]</literal></term>
        <listitem>
        <para>
         Отправляет текущий буфер запроса на сервер для выполнения, опционально
         сохраняет результат запроса в файле 
         <replaceable class="parameter">filename</replaceable>
         или перенаправляет вывод в команду оболочки ОС 
         <replaceable class="parameter">command</replaceable>. 
         Вывод направляется в файл или команду, 
         только если запрос успешно вернул 0 или более строк. Этого не происходит, 
         если запрос завершился неудачно или выполнялась команда не возвращающая данные.
         <literal>\g</literal> без аргументов, по сути, эквивалентен точке с запятой. 
         <literal>\g</literal> с аргументом является разовой альтернативой команде 
         <command>\o</command>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\gset [ <replaceable class="parameter">prefix</replaceable> ]</literal></term>

        <listitem>
        <para>
         Отправляет текущий буфер запроса на сервер для выполнения и сохраняет 
         результат запроса в переменных <application>psql</> 
         (см. <xref linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title">). 
         Выполняемый запрос должен возвращать ровно одну строку. Каждый столбец 
         строки результата сохраняется в отдельной переменной, которая называется 
         также как и столбец. Например:
<programlisting>
=&gt; <userinput>SELECT 'hello' AS var1, 10 AS var2</userinput>
-&gt; <userinput>\gset</userinput>
=&gt; <userinput>\echo :var1 :var2</userinput>
hello 10
</programlisting>
        </para>
        <para>
         Если указан <replaceable class="parameter">prefix</replaceable>, 
         то он добавляется вначале к именам переменных:
<programlisting>
=&gt; <userinput>SELECT 'hello' AS var1, 10 AS var2</userinput>
-&gt; <userinput>\gset result_</userinput>
=&gt; <userinput>\echo :result_var1 :result_var2</userinput>
hello 10
</programlisting>
        </para>
        <para>
         Если значение столбца NULL, то вместо присвоения значения 
         соответствующая переменная удаляется.
        </para>
        <para>
         Если запрос завершается ошибкой или не возвращает одну строку, 
         то никакие переменные не меняются.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\h</literal> или <literal>\help</literal> <literal>[ <replaceable class="parameter">command</replaceable> ]</literal></term>
        <listitem>
        <para>
        Выводит подсказку по синтаксису указанной команды <acronym>SQL</acronym>. 
        Если <replaceable class="parameter">command</replaceable>
        не указана, то <application>psql</application> выводит список всех команд, 
        для которых доступна справка. Если в качестве command указана звёздочка 
        (<literal>*</literal>), то выводится справка по всем командам 
        <acronym>SQL</acronym>.
        </para>

        <note>
        <para>
        Для упрощения ввода, команды, состоящие из нескольких слов, можно не заключать 
        в кавычки. Таким образом, можно просто писать 
        <userinput>\help alter table</userinput>.
        </para>
        </note>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\H</literal> или <literal>\html</literal></term>
        <listitem>
        <para>
        Включает вывод запросов в формате <acronym>HTML</acronym>. 
        Если формат <acronym>HTML</acronym> уже включён, происходит переключение 
        обратно на выровненный формат. Эта команда используется для совместимости 
        и удобства, смотри <command>\pset</command> о том, как устанавливать 
        другие параметры вывода.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\i</literal> или <literal>\include</literal> <replaceable class="parameter">filename</replaceable></term>
        <listitem>
        <para>
        Читает ввод из файла 
        <replaceable class="parameter">filename</replaceable>
        и выполняет его, как будто он был набран на клавиатуре.
        </para>
        <note>
        <para>
        Если вы хотите видеть строки файла на экране, по мере их чтения, 
        необходимо установить переменную <varname>ECHO</varname> в значение 
        <literal>all</literal>.
        </para>
        </note>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\ir</literal> или <literal>\include_relative</literal> <replaceable class="parameter">filename</replaceable></term>
        <listitem>
        <para>
        Команда <literal>\ir</> похож на <literal>\i</>, 
        но по-разному интерпретирует относительные имена файлов. При выполнении 
        в интерактивном режиме, две команды ведут себя одинаково. Однако при вызове 
        из скрипта, <literal>\ir</literal> интерпретирует имена файлов относительно 
        каталога, в котором расположен скрипт, а не текущего рабочего каталога.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\l[+]</literal> или <literal>\list[+] [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список баз данных на сервере и показывает их имена, владельцев, 
        кодировку набора символов и права доступа. Если указан 
        <replaceable class="parameter">pattern</replaceable>, 
        отображаются только базы данных, имена которых соответствуют шаблону. 
        При добавлении <literal>+</literal> к имени команды, также отображаются: 
        размер базы данных, табличное пространство по умолчанию и описание. 
        (Информация о размере доступна только для баз данных, к которым текущий 
        пользователь может подключиться.)
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\lo_export <replaceable class="parameter">loid</replaceable> <replaceable class="parameter">filename</replaceable></literal></term>

        <listitem>
        <para>
        Читает большой объект с <acronym>OID</acronym> 
        <replaceable class="parameter">loid</replaceable>
        из базы данных и записывает его в файл 
        <replaceable class="parameter">filename</replaceable>. 
        Обратите внимание, что это немного отличается от функции сервера 
        <function>lo_export</function>, которая действует с правами пользователя, 
        от имени которого работает сервер базы данных, и на файловой системе сервера.
        </para>
        <tip>
        <para>
        Используйте <command>\lo_list</command> для получения <acronym>OID</acronym>
        больших объектов.
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\lo_import <replaceable class="parameter">filename</replaceable> [ <replaceable class="parameter">comment</replaceable> ]</literal></term>

        <listitem>
        <para>
        Сохраняет файл в большом объекте <productname>PostgreSQL</productname>. 
        Опционально, указанный комментарий связывается с объектом. Пример:
<programlisting>
foo=&gt; <userinput>\lo_import '/home/peter/pictures/photo.xcf' 'a picture of me'</userinput>
lo_import 152801
</programlisting>
        Ответ указывает на то, что большой объект получил OID 152801, 
        который может быть использован для доступа к вновь созданному объекту 
        в будущем. Для удобства чтения, рекомендуется всегда связывать объекты 
        с понятными комментариями. OID и комментарии можно посмотреть с помощью 
        команды <command>\lo_list</command>.
        </para>

        <para>
        Обратите внимание, что это немного отличается от функции сервера 
        <function>lo_import</function>, т.к. действует от имени локального 
        пользователя на локальной файловой системе, а не пользователя сервера 
        на файловой системе сервера.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\lo_list</literal></term>
        <listitem>
        <para>
        Показывает список всех больших объектов <productname>PostgreSQL</productname>, 
        хранящихся в базе данных, вместе с предоставленными комментариями.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\lo_unlink <replaceable class="parameter">loid</replaceable></literal></term>

        <listitem>
        <para>
        Удаляет большой объект с <acronym>OID</acronym> 
        <replaceable class="parameter">loid</replaceable> из базы данных.
        </para>

        <tip>
        <para>
        Используйте <command>\lo_list</command> для получения <acronym>OID</acronym> 
        больших объектов.
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\o</literal> или <literal>\out [ <replaceable 
        class="parameter">filename</replaceable> ]</literal></term>
        <term><literal>\o</literal> или <literal>\out [ |<replaceable 
        class="parameter">command</replaceable> ]</literal></term>

        <listitem>
        <para>
        Результаты запросов будут сохраняться в 
        <replaceable class="parameter">filename</replaceable>
        или перенаправляться в команду оболочки ОС
        <replaceable class="parameter">command</replaceable>, 
        Если аргумент не указан, вывод запросов переключается на стандартный вывод.
        </para>

        <para>
        <quote>Результаты запросов</quote> включают в себя все таблицы, 
        ответы команд, уведомления, полученные от сервера базы данных, а также вывод 
        от мета-команд, запрашивающих базу данных (таких как <command>\d</command>), 
        но не сообщения об ошибках.
        </para>

        <tip>
        <para>
        Чтобы вставить текст между результатами запросов, 
        используйте <command>\qecho</command>.
        </para>
        </tip>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\p</literal> или <literal>\print</literal></term>
        <listitem>
        <para>
        Печатает содержимое буфера запросов на стандартный вывод.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\password [ <replaceable class="parameter">username</replaceable> ]</literal></term>
        <listitem>
        <para>
        Изменяет пароль указанного пользователя (по умолчанию, текущего пользователя). 
        Эта команда запрашивает новый пароль, шифрует и отправляет его на сервер 
        в виде команды <command>ALTER ROLE</>. Это гарантирует, 
        что новый пароль не отображается в открытом виде в истории команд, 
        журнале сервера или в другом месте.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\prompt [ <replaceable class="parameter">text</replaceable> ] <replaceable class="parameter">name</replaceable></literal></term>
        <listitem>
        <para>
         Предлагает пользователю ввести значение, которое будет присвоено переменной 
         <replaceable class="parameter">name</>. Опционально можно указать подсказку 
         <replaceable class="parameter">text</>. 
         (Если подсказка состоит из нескольких слов, то её текст нужно взять 
         в одинарные кавычки).
        </para>

        <para>
         По умолчанию, <literal>\prompt</> использует терминал для ввода и вывода. 
         Однако, если используется опция командной строки <option>-f</>, 
         <literal>\prompt</> использует стандартный ввод и стандартный вывод.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\pset [ <replaceable class="parameter">option</replaceable> [ <replaceable class="parameter">value</replaceable> ] ]</literal></term>

        <listitem>
        <para>
        Эта команда устанавливает параметры, влияющие на вывод результатов запросов. 
        <replaceable class="parameter">option</replaceable> указывает, 
        какой параметр необходимо установить. 
        Семантика <replaceable class="parameter">value</replaceable> меняется 
        в зависимости от выбранного параметра. Для некоторых параметров, 
        отсутствие <replaceable class="parameter">value</replaceable>
        означает переключение значения, либо сброс значения, как описано ниже в разделе 
        конкретного параметра. Если такое поведение не упоминается, 
        то пропуск <replaceable class="parameter">value</replaceable> 
        приводит к отображению текущего значения параметра.
        </para>

        <para>
        <command>\pset</command> без аргументов выводит текущий статус всех 
        параметров команды.
        </para>

        <para>
        Имеются следующие параметры:
        <variablelist>
          <varlistentry>
          <term><literal>border</literal></term>
          <listitem>
          <para>
          <replaceable class="parameter">value</replaceable> должно быть числом. 
          В целом, чем выше число, тем больше границ и линий будут иметь таблицы, 
          но это зависит от конкретного формата. В формате <acronym>HTML</acronym> 
          это напрямую преобразуется в атрибут <literal>border=...</literal>. 
          В других форматах имеют смысл только следующие значения: 0 (границ нет), 
          1 (разделительные линии внутри таблицы) и 2 (рамка вокруг таблицы). 
          Форматы <literal>latex</literal> и <literal>latex-longtable</literal>
          также поддерживают значение 3, которое добавляет разделительные линии 
          между строками.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>columns</literal></term>
          <listitem>
          <para>
          Устанавливает максимальную ширину для формата <literal>wrapped</>, 
          а также ограничение по ширине свыше которого, будет требоваться пейджер 
          для просмотра или переключение в вертикальное отображение при режиме 
          <literal>expanded auto</>. При значении 0 (по умолчанию) 
          максимальная ширина управляется переменной среды <envar>COLUMNS</>
          или шириной экрана, если <envar>COLUMNS</> не установлена. 
          Кроме того, если <literal>columns</> равно нулю, то формат 
          wrapped влияет только на вывод на экран. 
          Если <literal>columns</> не равно 0, то это также влияет на вывод в файл 
          или в другую команду через канал. 
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>expanded</literal> (или <literal>x</literal>)</term>
          <listitem>
          <para>
          Для <replaceable class="parameter">value</replaceable> возможны следующие 
          значения: <literal>on</literal> или <literal>off</literal>, 
          которые включают или отключают развернутый режим, или значение 
          <literal>auto</literal>. 
          Если <replaceable class="parameter">value</replaceable> не указано, 
          то команда переключает текущее значение в <literal>on</literal> или 
          <literal>off</literal>. Если включен развернутый режим, результаты запроса 
          отображаются в две колонки: имя столбца в левой колонке, данные в правой. 
          Этот режим полезен, если данные не помещаются на экране в обычном 
          <quote>горизонтальном</quote> режиме. При выборе <literal>auto</literal>, 
          расширенный режим используется всякий раз, когда результат запроса шире, 
          чем экран, в противном случае используется обычный режим. 
          <literal>auto</literal> действует только в форматах <literal>aligned</literal> 
          и <literal>wrapped</literal>. В других форматах, поведение такое, 
          как если расширенный режим отключен.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>fieldsep</literal></term>
          <listitem>
          <para>
          Устанавливает разделитель полей для невыровненного режима вывода запросов. 
          Таким образом, можно формировать вывод, в котором значения будут разделены 
          табуляцией или запятыми. Это может быть предпочтительным для использования 
          в других программах. Для установки символа табуляции в качестве разделителя 
          полей, введите <literal>\pset fieldsep '\t'</literal>. 
          По умолчанию используется вертикальная черта (<literal>'|'</literal>).
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>fieldsep_zero</literal></term>
          <listitem>
          <para>
          Устанавливает разделитель полей для невыровненного режима вывода в нулевой байт.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>footer</literal></term>
          <listitem>
          <para>
          Для <replaceable class="parameter">value</replaceable> возможны 
          два значения: <literal>on</literal> или <literal>off</literal>, 
          которые включают или отключают вывод результирующей строки с количеством 
          выбранных записей <literal>(<replaceable>n</> строк)</literal>. 
          Если <replaceable class="parameter">value</replaceable> не указано, 
          то команда переключает текущее значение в <literal>on</literal> 
          или <literal>off</literal>.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>format</literal></term>
          <listitem>
          <para>
          Устанавливает формат вывода в один из следующих:  
          <literal>unaligned</literal>, <literal>aligned</literal>, 
          <literal>wrapped</literal>, <literal>html</literal>, 
          <literal>latex</literal> (использует <literal>tabular</literal>), 
          <literal>latex-longtable</literal> или <literal>troff-ms</literal>. 
          Допускается сокращение слова до уникального значения. 
          (Это значит, что одной буквы будет достаточно.)
          </para>

          <para>
          В <literal>unaligned</> формате все столбцы размещаются на одной строке 
          и отделяются друг от друга разделителем полей. Это полезно для создания 
          вывода, который будет читаться другими программами (например, формат 
          с выводом значений разделенных запятыми или табуляцией).
          </para>

          <para>
          Формат <literal>aligned</literal> это стандартный, удобочитаемый, 
          хорошо отформатированный текстовый вывод. Используется по умолчанию.
          </para>

          <para>
          Формат <literal>wrapped</> похож на <literal>aligned</>, но переносит 
          длинные значения столбцов на новые строки, чтобы общий вывод поместился 
          в заданную ширину. Задание ширины вывода описано в параметре 
          <literal>columns</>. Обратите внимание, что <application>psql</> 
          не будет пытаться переносить на новые строки заголовки столбцов. 
          Поэтому формат <literal>wrapped</> работает так же, как <literal>aligned</> 
          если общая ширина, требуемая для всех заголовков столбцов, 
          превышает установленную максимальную ширину.
          </para>

          <para>
          Форматы  <literal>html</>, <literal>latex</>, <literal>latex-longtable</> 
          и <literal>troff-ms</> выводят таблицы, которые предназначены для 
          включения в документы с помощью соответствующего языка разметки. 
          Они не являются полноценными документами! Возможно это не обязательно в 
          <acronym>HTML</acronym>, но в <application>LaTeX</> необходимо иметь полный 
          упаковщик документа. <literal>latex-longtable</> также требует установленных 
          <application>LaTeX</> пакетов <literal>longtable</> и <literal>booktabs</>.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>linestyle</literal></term>
          <listitem>
          <para>
          Задает стиль отрисовки линий границы в одно из значений: 
          <literal>ascii</>, <literal>old-ascii</> или <literal>unicode</>. 
          Допускается сокращение слова до уникального значения. 
          (Это значит, что одной буквы будет достаточно.) Значение по умолчанию: 
          <literal>ascii</>. Этот параметр действует только в форматах 
          <literal>aligned</> и <literal>wrapped</>.
          </para>

          <para>
          Стиль <literal>ascii</> использует обычные символы <acronym>ASCII</acronym>. 
          Символы новой строки в данных показываются с использованием символа 
          <literal>+</literal> в правом поле. Когда при формате <literal>wrapped</> 
          происходит перенос данных на новую строку (без символа новой строки), 
          ставится точка (<literal>.</>) в правом поле первой строки и точка 
          в левом поле следующей строки.
          </para>

          <para>
          Стиль <literal>old-ascii</literal> использует обычные символы 
          <acronym>ASCII</>, в стиле <productname>PostgreSQL</productname> 8.4 
          и раньше. Символы новой строки в данных отображаются используя символ 
          <literal>:</literal> вместо левого разделителя полей. Когда происходит перенос 
          данных на новую строку без символа новой строки, символ <literal>;</> 
          используется вместо левого разделителя полей.
          </para>

          <para>
          Стиль <literal>unicode</literal> использует символы Юникод для рисования линий. 
          Символы новой строки в данных показываются с использованием символа 
          возврата каретки в правом поле. Когда при формате <literal>wrapped</literal> 
          происходит перенос данных на новую строку (без символа новой строки), 
          ставится символ многоточия в правом поле первой строки и в левом поле 
          следующей строки.
          </para>

          <para>
          Когда <literal>border</> больше нуля, то параметр также определяет символы, 
          которыми будут рисоваться границы. Обычные символы <acronym>ASCII</acronym> 
          будут работать везде, но символы в Юникоде выглядят лучше на дисплеях, 
          распознающих их.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>null</literal></term>
          <listitem>
          <para>
          Устанавливает строку, которая будет напечатана вместо значения null. 
          По умолчанию не печатается ничего, что можно ошибочно принять за пустую строку. 
          Например, можно было бы предпочесть <literal>\pset null '(null)'</literal>.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>numericlocale</literal></term>
          <listitem>
          <para>
          Для <replaceable class="parameter">value</replaceable> возможны 
          два значения: <literal>on</literal> или <literal>off</literal>, 
          которые включают или отключают вывод чисел в локализованном формате. 
          Если <replaceable class="parameter">value</replaceable> не указано, 
          то команда переключает вывод чисел с локализованного на обычный и обратно.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>pager</literal></term>
          <listitem>
          <para>
          Контролирует использование пейджера для просмотра результатов запросов 
          и справочной информации <application>psql</>. 
          Если переменная среды <envar>PAGER</envar> установлена, то данные передаются 
          в указанную программу. В противном случае используется платформозависимая 
          программа по умолчанию (например, <filename>more</filename>).
          </para>

          <para>
          Если <literal>pager</> имеет значение <literal>off</>, программа пейджер 
          не используется. Если <literal>pager</> имеет значение <literal>on</>, 
          программа пейджер используется при необходимости, т.е. когда вывод на терминал 
          не помещается на экране. Параметр pager также может быть 
          установлен в значение <literal>always</>, при этом программа пейджер 
          будет использоваться всегда, независимо от того, помещается вывод на терминал 
          на экран или нет. <literal>\pset pager</> без указания 
          <replaceable class="parameter">value</replaceable> переключает 
          значения <literal>on</> и <literal>off</>.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>recordsep</literal></term>
          <listitem>
          <para>
          Устанавливает разделитель записей (строк) для невыровненного режима вывода. 
          По умолчанию используется символ новой строки.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>recordsep_zero</literal></term>
          <listitem>
          <para>
          Устанавливает разделитель записей для невыровненного режима вывода в нулевой байт.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>tableattr</literal> (или <literal>T</literal>)</term>
          <listitem>
          <para>
          Устанавливает атрибуты, которые будут помещены в тег <sgmltag>table</sgmltag>, 
          при формате вывода <acronym>HTML</acronym>. Например, это может быть 
          <literal>cellpadding</literal> или <literal>border</literal>. Заметьте, 
          что, вероятно, не нужно здесь задавать <literal>border</literal>, 
          т.к. для этого уже есть <literal>\pset border</literal>. 
          Если <replaceable class="parameter">value</replaceable> не задано, 
          атрибуты таблицы удаляются.
          </para>
          <para>
          В формате <literal>latex-longtable</literal>, этот параметр контролирует 
          пропорциональную ширину каждого столбца, данные которого выравнены 
          по левому краю. Он указывается как список разделенных пробелами значений, 
          например <literal>'0.2 0.2 0.6'</>. Для неуказанных столбцов используется 
          последнее из заданных значений.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>title</literal></term>
          <listitem>
          <para>
          Устанавливает заголовок таблицы для любых впоследствии выводимых таблиц. 
          Это можно использовать для задания описательных тегов при формировании вывода. 
          Если <replaceable class="parameter">value</replaceable> не задано, 
          заголовок таблицы удаляется.
          </para>
          </listitem>
          </varlistentry>

          <varlistentry>
          <term><literal>tuples_only</literal> (или <literal>t</literal>)</term>
          <listitem>
          <para>
          Для <replaceable class="parameter">value</replaceable> возможны 
          два значения: <literal>on</literal> или <literal>off</literal>, 
          которые включают или отключают режим вывода только кортежей. 
          Если <replaceable class="parameter">value</replaceable> не указано, 
          то команда переключает с режима вывода только кортежей на обычный режим 
          и обратно. Обычный вывод включает в себя дополнительную информацию, 
          такую как заголовки столбцов и различные колонтитулы. В режиме вывода 
          только кортежей отображаются только фактические табличные данные.
          </para>
          </listitem>
          </varlistentry>
        </variablelist>
        </para>

        <para>
        Иллюстрацию того, как могут выглядеть различные форматы можно посмотреть в 
        разделе <xref linkend="APP-PSQL-examples" endterm="APP-PSQL-examples-title">.
        </para>

        <tip>
        <para>
        Для некоторых параметров <command>\pset</command> есть короткие команды.  См. 
        <command>\a</command>, <command>\C</command>, <command>\H</command>,
        <command>\t</command>, <command>\T</command> и <command>\x</command>.
        </para>
        </tip>

        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\q</literal> или <literal>\quit</literal></term>
        <listitem>
        <para>
        Выход из <application>psql</application>. При использовании в скрипте, 
        прекращается только выполнение этого скрипта.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\qecho <replaceable class="parameter">text</replaceable> [ ... ] </literal></term>
        <listitem>
        <para>
        Эта команда идентична <command>\echo</command> за исключением того, 
        что вывод будет записываться в канал вывода запросов, 
        установленный <command>\o</command>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\r</literal> или <literal>\reset</literal></term>
        <listitem>
        <para>
        Сбрасывает (очищает) буфер запроса.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\s [ <replaceable class="parameter">filename</replaceable> ]</literal></term>
        <listitem>
        <para>
        Записывает историю команд <application>psql</application> в файл 
        <replaceable class="parameter">filename</replaceable>. 
        Если <replaceable class="parameter">filename</replaceable> не указан, 
        то история команд выводится на стандартный вывод (с использованием пейджера, 
        где уместно).
        Эта опция недоступна, если <application>psql</application> 
        был собран без поддержки <application>Readline</application>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\set [ <replaceable class="parameter">name</replaceable> [ <replaceable class="parameter">value</replaceable> [ ... ] ] ]</literal></term>

        <listitem>
        <para>
        Задаёт <application>psql</> переменной 
        <replaceable class="parameter">name</replaceable> значение 
        <replaceable class="parameter">value</replaceable> или, 
        если задано более одного значения, их конкатенацию. Если задан только один аргумент, 
        то переменной с этим именем присваивается пустое значение. Для удаления переменной, 
        используйте команду <command>\unset</command>.
        </para>

        <para>
        <command>\set</> без аргументов выводит имена и значения всех 
        <application>psql</> переменных, установленных в настоящее время.
        </para>

        <para>
        Имена переменных могут содержать буквы, цифры и знаки подчеркивания. 
        См. <xref linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title">
        ниже для деталей. Имена переменных чувствительны к регистру.
        </para>

        <para>
        Хотя вы можете задать любой переменной любое значение, <application>psql</application>
        рассматривает несколько переменных особым образом. 
        Они документированы в разделе о переменных.
        </para>

        <note>
        <para>
        Эта команда не имеет отношения к <acronym>SQL</acronym> команде 
        <xref linkend="SQL-SET">.
        </para>
        </note>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\setenv <replaceable class="parameter">name</replaceable> [ <replaceable class="parameter">value</replaceable> ]</literal></term>

        <listitem>
        <para>
        Задает переменной среды 
        <replaceable class="parameter">name</replaceable> значение 
        <replaceable class="parameter">value</replaceable>, или, 
        если <replaceable class="parameter">value</replaceable> не задано, 
        удаляет переменную среды. Пример:
<programlisting>
testdb=&gt; <userinput>\setenv PAGER less</userinput>
testdb=&gt; <userinput>\setenv LESS -imx4F</userinput>
</programlisting></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>\sf[+] <replaceable class="parameter">function_description</> </literal></term>

        <listitem>
        <para>
         Извлекает из базы данных и выводит определение заданной функции, 
         в форме команды <command>CREATE OR REPLACE FUNCTION</>. 
         Определение печатается в текущий канал вывода запросов, 
         установленный <command>\o</command>.
        </para>

        <para>
         Для функции может быть задано только имя или имя и аргументы, например 
         <literal>foo(integer, text)</>. Типы аргументов необходимы, 
         если существует более чем одна функция с тем же именем.
        </para>

        <para>
         При добавлении <literal>+</literal> к имени команды строки вывода нумеруются, 
         первая строка тела функции получит номер 1.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\t</literal></term>
        <listitem>
        <para>
        Включает/выключает отображение имен столбцов и результирующей строки с 
        количеством выбранных записей для запросов. Эта команда эквивалентна 
        <literal>\pset tuples_only</literal> и предоставлена для удобства.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\T <replaceable class="parameter">table_options</replaceable></literal></term>
        <listitem>
        <para>
        Устанавливает атрибуты, которые будут помещены в тег <sgmltag>table</sgmltag>, 
        при <acronym>HTML</acronym> формате вывода. Эта команда эквивалентна 
        <literal>\pset tableattr <replaceable 
        class="parameter">table_options</replaceable></literal>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
       <term><literal>\timing [ <replaceable class="parameter">on</replaceable> | <replaceable class="parameter">off</replaceable> ]</literal></term>
        <listitem>
        <para>
         Включает/отключает отображение времени выполнения команд SQL, в миллисекундах. 
         Без параметра переключает текущий режим отображения времени выполнения.
        </para>
       </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\unset <replaceable class="parameter">name</replaceable></literal></term>

        <listitem>
        <para>
        Удаляет <application>psql</> переменную 
        <replaceable class="parameter">name</replaceable>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\w</literal> или <literal>\write</literal> <replaceable class="parameter">filename</replaceable></term>
        <term><literal>\w</literal> или <literal>\write</literal> <literal>|</><replaceable class="parameter">command</replaceable></term>
        <listitem>
        <para>
        Выводит текущий буфер запроса в файл 
        <replaceable class="parameter">filename</replaceable>
        или передает в команду ОС 
        <replaceable class="parameter">command</replaceable>.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\watch [ <replaceable class="parameter">seconds</replaceable> ]</literal></term>
        <listitem>
        <para>
        Команда многократно выполняет текущий буфер запроса (подобно <literal>\g</>), 
        пока не будет прервана или не произойдет сбой запроса. Аргумент задает 
        количество секунд ожидания между выполнениями запроса (по умолчанию 2 секунды).
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\x [ <replaceable class="parameter">on</replaceable> | <replaceable class="parameter">off</replaceable> | <replaceable class="parameter">auto</replaceable> ]</literal></term>
        <listitem>
        <para>
        Устанавливает или переключает режим развернутого вывода таблицы. 
        Это эквивалентно <literal>\pset expanded</literal>.
       </para>
       </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\z [ <link linkend="APP-PSQL-patterns"><replaceable class="parameter">pattern</replaceable></link> ]</literal></term>
        <listitem>
        <para>
        Выводит список таблиц, представлений и последовательностей с их правами доступа. 
        Если указан <replaceable class="parameter">pattern</replaceable>, 
        отображаются только таблицы, представления и последовательности, 
        имена которых соответствуют шаблону.
        </para>

        <para>
        Это псевдоним для <command>\dp</command> (<quote>показать права доступа</quote>).
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\! [ <replaceable class="parameter">command</replaceable> ]</literal></term>
        <listitem>
        <para>
        Выполняет команду ОС <replaceable class="parameter">command</replaceable>. 
        Без указания <replaceable class="parameter">command</replaceable>
        запускает отдельную командную оболочку ОС. Последующие аргументы не интерпретируются, 
        командная оболочка ОС увидит их как есть. В частности, не применяются правила подстановки 
        переменных и экранирование при помощи бэкслеш.
        </para>
        </listitem>
      </varlistentry>


      <varlistentry>
        <term><literal>\?</literal></term>
        <listitem>
        <para>
        Показывает справочную информацию о мета-командах.
        </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </para>

  <refsect3 id="APP-PSQL-patterns">
   <title id="APP-PSQL-patterns-title">Шаблоны поиска (Patterns)</title>

   <indexterm>
    <primary>patterns</primary>
    <secondary>in psql and pg_dump</secondary>
   </indexterm>

  <para>
   Различные <literal>\d</> команды принимают параметр 
   <replaceable class="parameter">pattern</replaceable>
   для указания имени(имен) объектов для отображения. В простейшем случае шаблон 
   - это точное имя объекта. Символы внутри шаблона обычно приводятся к нижнему регистру, 
   как и для имен SQL объектов; к примеру <literal>\dt FOO</>
   выводит таблицу с именем <literal>foo</>. Как и для SQL имен, 
   двойные кавычки вокруг шаблона предотвращают перевод в нижний регистр. Для включения 
   символа двойной кавычки в шаблон, используются два символа двойных кавычек подряд 
   внутри шаблона в двойных кавычках. Опять же, это соответствует правилам для SQL 
   идентификаторов. Например <literal>\dt "FOO""BAR"</> будет выводить таблицу 
   с именем <literal>FOO"BAR</> (но не <literal>foo"bar</>). 
   В отличие от обычных правил для SQL имен, можно взять в двойные кавычки только 
   часть шаблона, например <literal>\dt FOO"FOO"BAR</> будет выводить таблицу 
   с именем <literal>fooFOObar</>.
  </para>

  <para>
   Если <replaceable class="parameter">pattern</replaceable>
   вообще не указан, <literal>\d</> команды выводят все объекты, 
   видимые для текущей схемы. Это эквивалентно указанию <literal>*</> 
   в качестве шаблона. (Объект считается <firstterm>видимым</>, если схема, 
   в которой он находится, лежит на пути поиска, и объект с таким типом и именем на 
   пути поиска еще не появлялся. Это эквивалентно утверждению, что на объект можно 
   ссылаться по имени, без явного указания схемы.) Чтобы увидеть все объекты 
   в базе данных, независимо от видимости, в качестве шаблона используется <literal>*.*</>.
  </para>

  <para>
   Внутри шаблона <literal>*</> обозначает любое количество символов, включая отсутствие 
   символов. <literal>?</> соответствует любому одному символу. (Это соответствует шаблонам
   имен файлов в Unix.) Например, <literal>\dt int*</> отображает 
   все таблицы, чьи имена начинаются на <literal>int</>.  Однако внутри двойных кавычек 
   <literal>*</> и <literal>?</> теряют своё специальное значение и становятся 
   обычными символами. 
  </para>

  <para>
   Шаблон, содержащий точку (<literal>.</>), интерпретируется как шаблон  имени схемы, 
   за которым следует шаблон имени объекта. Например, <literal>\dt foo*.*bar*</>
   отображает все таблицы, имена которых включают <literal>bar</>,  и расположенные 
   в схемах, имена которых начинаются с <literal>foo</>. Шаблону, не содержащему точку, 
   могут соответствовать только объекты текущей схемы. Опять же, точка внутри двойных 
   кавычек теряет своё специальное значение.
  </para>

  <para>
   Опытные пользователи могут использовать возможности регулярных выражений, такие как 
   классы символов. Например <literal>[0-9]</> соответствует любой цифре. 
   Все специальные символы регулярных выражений работают как описано 
   в <xref linkend="functions-posix-regexp">, за исключением: 
   <literal>.</> используется в качестве разделителя как говорилось выше; 
   <literal>*</> соответствует регулярному выражению <literal>.*</>; 
   <literal>?</> соответствует <literal>.</> ,
   а также символ <literal>$</> который не имеет специального значения. 
   При необходимости эти символы можно эмулировать указывая <literal>?</> 
   для эмуляции <literal>.</>,  
   <literal>(<replaceable class="parameter">R</replaceable>+|)</literal>
   для <literal><replaceable class="parameter">R</replaceable>*</literal>, 
   <literal>(<replaceable class="parameter">R</replaceable>|)</literal>
   для <literal><replaceable class="parameter">R</replaceable>?</literal>.  
   <literal>$</> не требуется, как символ регулярного выражения, потому что 
   шаблон должен соответствовать имени целиком, в отличие от обычной интерпретации 
   регулярных выражений (другими словами, <literal>$</> автоматически добавляется 
   в шаблон). Используйте <literal>*</> в начале и/или в конце, если не хотите, 
   чтобы шаблон закреплялся. Обратите внимание, что внутри двойных кавычек, 
   все специальные символы регулярных выражений теряют свое специальное значение 
   и соответствуют сами себе. Также, специальные символы регулярных выражений 
   не действуют в шаблонах для имен операторов (т.е. в аргументе команды 
   <literal>\do</>).
  </para>
  </refsect3>
 </refsect2>

 <refsect2>
  <title>Расширенные возможности</title>

   <refsect3 id="APP-PSQL-variables">
    <title id="APP-PSQL-variables-title">Переменные</title>

    <para>
    <application>psql</application> предоставляет возможности подстановки переменных 
    подобные тем, что используются в командных оболочках  Unix. Переменные представляют 
    собой пары имя/значение, где значением может быть любая строка любой длины. 
    Имя должно состоять из букв (включая нелатинские буквы), цифр и знаков подчеркивания.
    </para>

    <para>
    Чтобы установить переменную, используется <application>psql</application>
    мета-команда <command>\set</command>. Например:
<programlisting>
testdb=&gt; <userinput>\set foo bar</userinput>
</programlisting>
    присваивает переменной <literal>foo</literal> значение <literal>bar</literal>. 
    Чтобы получить значение переменной, нужно поставить двоеточие перед её именем, например:
<programlisting>
testdb=&gt; <userinput>\echo :foo</userinput>
bar
</programlisting>
    Это работает как в обычных SQL командах, так и в мета-командах, подробности 
    в разделе <xref linkend="APP-PSQL-interpolation"
    endterm="APP-PSQL-interpolation-title"> ниже.
    </para>

    <para>
    При вызове <command>\set</command> без второго аргумента, переменной присваивается 
    пустая строка. Для удаления переменной, используется команда <command>\unset</command>. 
    Чтобы посмотреть значения всех переменных, нужно вызвать <command>\set</command> 
    без аргументов.
    </para>

    <note>
    <para>
    На аргументы <command>\set</command> распространяются те же правила подстановки, 
    что и для  других команд. Таким образом можно создавать интересные ссылки, 
    например <literal>\set :foo 'something'</literal> получая <quote>мягкие ссылки</quote> 
    в <productname>Perl</productname> или <quote>переменные переменных</quote> 
    в <productname><acronym>PHP</acronym></productname>. 
    К сожалению (или к счастью?), с этими конструкциями нельзя сделать ничего полезного. 
    С другой стороны <literal>\set bar :foo</literal> является прекрасным способом 
    копирования переменной.
    </para>
    </note>

    <para>
    Некоторые переменные, обрабатываются в <application>psql</application> особым образом. 
    Они представляют собой определенные параметры, которые могут быть изменены во время 
    выполнения, путем присваивания нового значения, а в некоторых переменных содержится 
    изменяемое состояние <application>psql</application>. Хотя эти переменные 
    можно использовать и для других целей, делать это не рекомендуется, так как поведение 
    программы может быстро стать очень странным. По соглашению, имена специальных переменных 
    состоят из всех заглавных ASCII букв (и, возможно, цифр и знаков подчеркивания). 
    Для максимальной совместимости в будущем, старайтесь не использовать такие имена 
    для собственных переменных. Далее идет список переменных, обрабатываемых особым образом.
   </para>

    <variablelist>
      <varlistentry>
      <term>
       <varname>AUTOCOMMIT</varname>
       <indexterm>
        <primary>autocommit</primary>
        <secondary>psql</secondary>  
       </indexterm> 
      </term>
        <listitem>
        <para>
        При значении <literal>on</> (по умолчанию) после каждой успешно выполненной команды 
        выполняется фиксация изменений. Чтобы отложить фиксацию изменений в этом режиме, 
        нужно выполнить SQL команду <command>BEGIN</> или <command>START TRANSACTION</>. 
        При значении <literal>off</> или если переменная не определена, фиксация изменений 
        не происходит до тех пор, пока явно не выполнена команда <command>COMMIT</>
        или <command>END</>. При значении <literal>off</> неявно выполняется <command>BEGIN</>, 
        непосредственно перед любой командой, за исключением случаев когда: 
        команда уже в транзакционном блоке; перед самой командой <command>BEGIN</>
        или другой командой управления транзакциями; перед командой, которая не может 
        выполняться внутри транзакционного блока (например <command>VACUUM</>).
        </para>

        <note>
        <para>
         Если режим <literal>autocommit</> отключен, необходимо явно откатывать изменения 
         в неуспешных транзакциях, выполняя команду <command>ABORT</> или 
         <command>ROLLBACK</>. Также имейте в виду, что при выходе из сессии 
         без фиксации изменений, несохраненные изменения будут потеряны.
        </para>
        </note>

        <note>
        <para>
         Включенный режим <literal>autocommit</> является традиционным для 
         <productname>PostgreSQL</>, а выключенный режим ближе к спецификации SQL. 
         Если вы предпочитаете отключить режим <literal>autocommit</>, это можно сделать 
         в общесистемном файле <filename>psqlrc</filename>
         или в персональном файле <filename>~/.psqlrc</filename>.
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>COMP_KEYWORD_CASE</varname></term>
        <listitem>
        <para>
        Определяет, какой регистр букв будет использован при автоматическом завершении 
        ключевых слов SQL. Если установлено в <literal>lower</literal> или 
        <literal>upper</literal>, будет использоваться нижний или верхний регистр, 
        соответственно.  Если установлено в <literal>preserve-lower</literal> 
        или <literal>preserve-upper</literal> (по умолчанию), 
        то завершаемое слово будет в том же регистре, что и уже введенное 
        начало слова, но последующие слова, завершаемые полностью, будут в нижнем или 
        верхнем регистре, соответственно.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>DBNAME</varname></term>
        <listitem>
        <para>
        Имя базы данных, к которой вы сейчас подключены. Устанавливается всякий раз 
        при подключении к базе данных (в том числе при старте программы), 
        но эту переменную можно удалить.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ECHO</varname></term>
        <listitem>
        <para>
        Если установлена в <literal>all</literal>, все непустые входящие строки
        выводятся на стандартный вывод по мере их чтения. 
        (Это не относится к интерактивному режиму.)
        Чтобы включить такое поведение при старте <application>psql</application>, 
        используйте опцию <option>-a</option>. 
        Если установлена в <literal>queries</literal>, 
        <application>psql</application> выводит каждый запрос на стандартный вывод 
        после отправки его на сервер.
        Опция командной строки для такого поведения <option>-e</option>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ECHO_HIDDEN</varname></term>
        <listitem>
        <para>
        Если эта переменная установлена в значение <literal>on</>, 
        то при выполнении мета-команд, запрашивающих базу данных, сначала
        будет выводиться текст запроса.
        Это позволяет изучать внутреннее устройство 
        <productname>PostgreSQL</productname> и реализовывать похожую функциональность 
        в своих программах. (Чтобы включить такое поведение при старте 
        <application>psql</application>, используете опцию <option>-E</option>.) 
        При установке переменной в значение <literal>noexec</literal>, 
        запросы просто отображаются, но не отправляются на сервер и не выполняются.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ENCODING</varname></term>
        <listitem>
        <para>
        Содержит текущую кодировку набора символов клиента.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>FETCH_COUNT</varname></term>
        <listitem>
        <para>
        Если переменная установлена в целое значение &gt; 0, результаты запросов 
        <command>SELECT</command> извлекаются из базы данных и отображаются группами с таким 
        количеством строк, в отличии от поведения по умолчанию, когда перед отображением 
        результирующий набор накапливается целиком. Это позволяет использовать ограниченный 
        размер памяти, независимо от размера выборки. При включении этой функциональности 
        обычно используются значения от 100 до 1000. Имейте в виду, что запрос может 
        завершиться ошибкой после отображения некоторого количества строк.
        </para>
        <tip>
        <para>
        Хотя можно использовать любой формат вывода, формат по умолчанию 
        <literal>aligned</> как правило выглядит хуже, потому что каждая группа по 
        <varname>FETCH_COUNT</varname> строк форматируется отдельно, что может привести 
        к разной ширине столбцов в разных группах.  Остальные форматы вывода работают лучше.
        </para>
        </tip>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HISTCONTROL</varname></term>
        <listitem>
        <para>
         Если переменная установлена в <literal>ignorespace</literal>, строки начинающиеся 
         с пробела не сохраняются в истории. Если установлена в 
         <literal>ignoredups</literal>, строки, которые уже есть в истории, 
         повторно не сохраняются. Значение <literal>ignoreboth</literal> сочетает в себе 
         оба варианта. Если значение не задано или отличается от перечисленных выше, 
         все строки, введенные в интерактивном режиме, сохраняются в истории.
        </para>
        <note>
        <para>
        Эта функциональность была бессовестно списана с <application>Bash</application>.
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HISTFILE</varname></term>
        <listitem>
        <para>
        Имя файла для хранения истории команд. Значение по умолчанию 
        <filename>~/.psql_history</filename>. Например, установив:
<programlisting>
\set HISTFILE ~/.psql_history- :DBNAME
</programlisting>
        в <filename>~/.psqlrc</filename> <application>psql</application> будет 
        поддерживать отдельную историю для каждой базы данных.
        </para>
        <note>
        <para>
        Эта функциональность была бессовестно списана с <application>Bash</application>.
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HISTSIZE</varname></term>
        <listitem>
        <para>
        Количество команд для хранения в истории. Значение по умолчанию 500.
        </para>
        <note>
        <para>
        Эта функциональность была бессовестно списана с <application>Bash</application>.
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>HOST</varname></term>
        <listitem>
        <para>
        Содержит имя хоста, где расположен сервер базы данных, к которому вы сейчас 
        подключены. Устанавливается всякий раз при подключении к базе данных (в том числе 
        при старте программы), но эту переменную можно удалить.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>IGNOREEOF</varname></term>
        <listitem>
        <para>
         Если не установлена, то ввод символа <acronym>EOF</>
         (обычно <keycombo action="simul"><keycap>Control</><keycap>D</></>) 
         в интерактивной сессии <application>psql</application> завершает работу приложения. 
         Если задано числовое значение, то именно такое количество символов 
         <acronym>EOF</> будет проигнорировано, прежде чем приложение завершит работу. 
         Если переменная задана, но имеет не числовое значение, то значение по умолчанию 10.
        </para>
        <note>
        <para>
        Эта функциональность была бессовестно списана с <application>Bash</application>.
        </para>
        </note>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>LASTOID</varname></term>
        <listitem>
        <para>
        Содержит значение последнего OID, полученного командой <command>INSERT</command>
        или <command>\lo_import</command>. Корректное значение переменной гарантируется 
        до тех пор, пока не будет отображен результат следующей <acronym>SQL</acronym> команды.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
      <term>
       <varname>ON_ERROR_ROLLBACK</varname>
       <indexterm>
        <primary>rollback</primary>
        <secondary>psql</secondary>
       </indexterm>
      </term>
        <listitem>
        <para>
        При значении <literal>on</>, если команда в транзакционном блоке выдает ошибку, 
        ошибка игнорируется и транзакция продолжается. При значении 
        <literal>interactive</> такие ошибки игнорируются только в интерактивных сессиях, 
        но не в скриптах. Если переменная не установлена или при значении 
        <literal>off</>, команда вызвавшая ошибку в транзакционном блоке, 
        отменяет всю транзакцию. 
        Режим отката транзакции при возникновении ошибки обеспечивается выполнением 
        неявных команд <command>SAVEPOINT</> перед каждой командой в транзакционном 
        блоке и откатом к точке сохранения в случае ошибки.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>ON_ERROR_STOP</varname></term>
        <listitem>
        <para>
        По умолчанию, после возникновения ошибки обработка команд продолжается. 
        Если эта переменная установлена в значение <literal>on</>, 
        обработка команд будет немедленно прекращена. В интерактивном режиме 
        <application>psql</application> вернется в командную строку; иначе 
        <application>psql</application> прекратит работу с кодом возврата 3, чтобы отличить 
        этот случай от фатальных ошибок, для которых используется код возврата 1. 
        В любом случае, выполнение всех запущенных скриптов (верхнеуровневый скрипт 
        и любые другие, которые он мог запустить) будет немедленно прекращено. 
        Если верхнеуровневая командная строка содержит несколько SQL команд, 
        выполнение завершится на текущей команде.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>PORT</varname></term>
        <listitem>
        <para>
        Содержит порт сервера базы данных, к которому вы сейчас подключены. 
        Устанавливается всякий раз при подключении к базе данных (в том числе при 
        старте программы), но эту переменную можно удалить.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>PROMPT1</varname></term>
        <term><varname>PROMPT2</varname></term>
        <term><varname>PROMPT3</varname></term>
        <listitem>
        <para>
        Указывают, как должны выглядеть приглашения <application>psql</application>. 
        См. <xref linkend="APP-PSQL-prompting" endterm="APP-PSQL-prompting-title"> ниже.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>QUIET</varname></term>
        <listitem>
        <para>
        Установка значения <literal>on</> эквивалента опции командной строки 
        <option>-q</option>. Это, вероятно, не слишком полезно в интерактивном режиме.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>SINGLELINE</varname></term>
        <listitem>
        <para>
        Установка значения <literal>on</> эквивалента опции командной строки
        <option>-S</option>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>SINGLESTEP</varname></term>
        <listitem>
        <para>
        Эта переменная эквивалента опции командной строки
        <option>-s</option>.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>USER</varname></term>
        <listitem>
        <para>
        Содержит имя пользователя базы данных, который сейчас подключен. 
        Устанавливается всякий раз при подключении к базе данных (в том числе при 
        старте программы), но эту переменную можно удалить.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><varname>VERBOSITY</varname></term>
        <listitem>
        <para>
        Этой переменной можно присвоить значения <literal>default</>, 
        <literal>verbose</> или <literal>terse</> для контроля уровня детализации 
        отчетов об ошибках.
        </para>
        </listitem>
      </varlistentry>

    </variablelist>

   </refsect3>

   <refsect3 id="APP-PSQL-interpolation">
    <title id="APP-PSQL-interpolation-title">Интерполяция <acronym>SQL</acronym></title>

    <para>
    Ключевой особенностью переменных <application>psql</application> является возможность 
    подставлять (<quote>интерполировать</quote>) их в команды <acronym>SQL</acronym>, 
    также как и в аргументы мета-команд. Кроме того, <application>psql</application>
    предоставляет средства для корректного использования кавычек для значений переменных, 
    которые используются как SQL литералы или идентификаторы. Синтаксис для подстановки 
    значения без кавычек - это добавить перед именем переменной двоеточие 
    (<literal>:</literal>). Например:
<programlisting>
testdb=&gt; <userinput>\set foo 'my_table'</userinput>
testdb=&gt; <userinput>SELECT * FROM :foo;</userinput>
</programlisting>
    будет запрашивать таблицу <literal>my_table</literal>. Обратите внимание, 
    что это может быть небезопасным: значение переменной копируется буквально, 
    поэтому оно может содержать непарные кавычки, или даже мета-команды. 
    При применении необходимо убедиться, что это имеет смысл.
    </para>

    <para>
    Когда значение будет использоваться в качестве SQL литерала или идентификатора, 
    безопаснее заключить его в кавычки. Если значение переменной используется как 
    SQL литерал, то после двоеточия нужно написать имя переменной в одинарных кавычках. 
    Если значение переменной используется как SQL идентификатор, то после двоеточия 
    нужно написать имя переменной в двойных кавычках. Эти конструкции корректно работают 
    с кавычками и другими специальными символами, которые могут содержаться в значении 
    переменной. Предыдущий пример более безопасно выглядит так:
<programlisting>
testdb=&gt; <userinput>\set foo 'my_table'</userinput>
testdb=&gt; <userinput>SELECT * FROM :"foo";</userinput>
</programlisting>
    </para>

    <para>
    Подстановка переменных не будет выполняться, если <acronym>SQL</acronym> литералы 
    или идентификаторы заключены в кавычки. Поэтому конструкция <literal>':foo'</> 
    не превратится во взятое в кавычки значение переменной (и это было бы не безопасно, 
    если бы работало, т.к. обработка кавычек внутри значения переменной была бы некорректной).
    </para>

    <para>
    Один из примеров использования данного механизма - это копирование содержимого 
    файла в столбец таблицы. Сначала загрузим содержимое файла в переменную,  
    затем подставим значение переменной как строку в кавычках:
<programlisting>
testdb=&gt; <userinput>\set content `cat my_file.txt`</userinput>
testdb=&gt; <userinput>INSERT INTO my_table VALUES (:'content');</userinput>
</programlisting>
    (Отметим, что это пока не будет работать, если <filename>my_file.txt</filename>
    содержит байт NUL. <application>psql</application> не поддерживает NUL 
    в значениях переменных.)
    </para>

    <para>
    Так как двоеточие может легально присутствовать в SQL командах, 
    попытка подстановки (например для  <literal>:name</literal>, 
    <literal>:'name'</literal> или <literal>:"name"</literal>) не выполняется, если переменная 
    не установлена. В любом случае, можно экранировать двоеточие 
    с помощью обратной косой черты, чтобы предотвратить подстановку.
    </para>

    <para>
    Использование двоеточия для переменных является стандартом <acronym>SQL</acronym> 
    для встраиваемых языков запросов, таких как <application>ECPG</application>. 
    Использование двоеточия для срезов массивов и приведения типов является 
    расширениями <productname>PostgreSQL</productname>, что иногда может конфликтовать 
    со стандартным использованием. Использование двоеточия и кавычек для экранирования 
    значения переменной при подстановке в качестве SQL литерала или идентификатора 
    - это расширение <application>psql</application>.
    </para>

   </refsect3>

   <refsect3 id="APP-PSQL-prompting">
    <title id="APP-PSQL-prompting-title">Настройка приглашений</title>

    <para>
    Приглашения <application>psql</application> можно настроить по своему предпочтению. 
    Три переменные <varname>PROMPT1</varname>, <varname>PROMPT2</varname>, 
    и <varname>PROMPT3</varname> содержат строки и специальные escape-последовательности, 
    которые описывают внешний вид приглашения. 
    <varname>PROMPT1</varname> это обычное приглашение, которое выдается, когда 
    <application>psql</application> ожидает ввода новой команды. 
    <varname>PROMPT2</varname> выдается при переходе на новую строку, когда вводимая команда 
    не завершается точкой с запятой или осталась не закрытая кавычка. 
    <varname>PROMPT3</varname> выдается при выполнении <acronym>SQL</acronym> команды 
    <command>COPY</command>, когда ожидается ввод значений строк с терминала.
    </para>

    <para>
    Значения этих переменных выводятся буквально, за исключением случаев, когда в них 
    встречается знак процента (<literal>%</literal>). В зависимости 
    от следующего символа, будет подставляться определенный текст. 
    Существуют следующие подстановки:

    <variablelist>
      <varlistentry>
        <term><literal>%M</literal></term>
        <listitem>
         <para>
          Полное имя хоста (с доменным именем) сервера базы данных, или 
          <literal>[local]</literal> если подключение выполнено через сокет Unix домена, 
          или <literal>[local:<replaceable>/dir/name</replaceable>]</literal>, 
          если сокет Unix домена не скомпилирован в местоположение по умолчанию.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%m</literal></term>
        <listitem>
         <para>
          Имя хоста сервера базы данных, усеченное до первой точки или 
          <literal>[local]</literal> если подключение выполнено через сокет Unix домена.
         </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%&gt;</literal></term>
        <listitem><para>
        Номер порта, который прослушивает сервер базы данных.
        </para></listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%n</literal></term>
        <listitem>
         <para>
          Имя пользователя базы данных для текущей сессии. (Это значение может меняться 
          в течении сессии в результате выполнения команды 
          <command>SET SESSION AUTHORIZATION</command>.)
         </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%/</literal></term>
        <listitem><para>Имя текущей базы данных.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%~</literal></term>
        <listitem><para>
        Похоже на <literal>%/</literal>, но выводит тильду <literal>~</literal>, 
        если текущая база данных совпадает с базой данных по умолчанию.
         </para></listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%#</literal></term>
        <listitem>
         <para>
          Если пользователь текущей сессии является суперпользователем базы данных, 
          то выводит <literal>#</literal>, иначе <literal>&gt;</literal>. 
          (Это значение может меняться в течении сессии в результате выполнения команды 
          <command>SET SESSION AUTHORIZATION</command>.)
         </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%R</literal></term>
        <listitem>
        <para>
        Для <varname>PROMPT1</varname> это обычно соответствует <literal>=</literal>, 
        но в однострочном режиме выводит <literal>^</literal>, а если произошло отключение 
        от базы данных (например при сбое в <command>\connect</command>) 
        то <literal>!</literal>. 
        Для <varname>PROMPT2</varname> будет выводиться <literal>-</literal>, 
        <literal>*</literal>, одинарная кавычка, двойная кавычка или знак доллара 
        в зависимости от того, почему потребовалась дополнительная строка ввода: 
        команда не была завершена, мы находимся внутри комментария 
        <literal>/* ... */</literal> или потому, 
        что мы внутри кавычек или внутри строки экранированной знаками доллара. 
        Для <varname>PROMPT3</varname> эта последовательность ничего не выводит.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%x</literal></term>
        <listitem>
        <para>
        Состояние транзакции: пустая строка если не в транзакционном блоке; 
        <literal>*</> когда в транзакционном блоке; 
        <literal>!</>  когда в транзакционном блоке, в котором произошла ошибка и 
        <literal>?</> когда состояние транзакции не определено 
        (например, нет подключения к базе данных).
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%</literal><replaceable class="parameter">digits</replaceable></term>
        <listitem>
        <para>
        Подставляется символ с указанным восьмеричным кодом.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%:</literal><replaceable class="parameter">name</replaceable><literal>:</literal></term>
        <listitem>
        <para>
        Подставляется значение <application>psql</application> переменной 
        <replaceable class="parameter">name</replaceable>. 
        См. <xref linkend="APP-PSQL-variables" endterm="APP-PSQL-variables-title"> 
        для деталей.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%`</literal><replaceable class="parameter">command</replaceable><literal>`</literal></term>
        <listitem>
        <para>
        Подставляется вывод команды <replaceable class="parameter">command</replaceable>, 
        как и в обычной подстановке с обратными апострофами.
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>%[</literal> ... <literal>%]</literal></term>
        <listitem>
         <para>
         Приглашения могут содержать управляющие символы  терминала, которые, например, 
         изменяют цвет, фон и стиль текста приглашения или изменяют заголовок окна 
         терминала. Для того, чтобы возможности редактирования 
         <application>Readline</application> работали правильно, непечатаемые символы нужно 
         расположить между <literal>%[</literal> и <literal>%]</literal>, 
         чтобы сделать невидимыми. Можно делать несколько таких включений в приглашение. 
         Например:
<programlisting>
testdb=&gt; \set PROMPT1 '%[%033[1;33;40m%]%n@%/%R%[%033[0m%]%# '
</programlisting>
         выдаст жирное (<literal>1;</literal>), желтое на черном (<literal>33;40</literal>) 
         приглашение  для VT100 совместимых цветных терминалов.
        </para>
        </listitem>
      </varlistentry>

    </variablelist>

    Чтобы вставить знак процента нужно написать <literal>%%</literal>. 
    По умолчанию используются значения <literal>'%/%R%# '</literal> для 
    <varname>PROMPT1</varname> и <varname>PROMPT2</varname>, 
    и <literal>'&gt;&gt; '</literal> для <varname>PROMPT3</varname>.
    </para>

    <note>
    <para>
    Эта функциональность была бессовестно списана с 
    <application>tcsh</application>.
    </para>
    </note>

   </refsect3>

   <refsect3>
    <title>Редактирование командной строки</title>

    <para>
    <application>psql</application> поддерживает библиотеку 
    <application>Readline</application>
    для удобного редактирования командной строки. История команд автоматически 
    сохраняется при выходе из <application>psql</application> и загружается при запуске. 
    Завершение клавишей <literal>TAB</> также поддерживается, хотя логика завершения 
    не претендует на роль парсера <acronym>SQL</acronym>. Запросы, генерируемые завершением 
    по <literal>TAB</>, также могут конфликтовать с другими командами SQL, например 
    <literal>SET TRANSACTION ISOLATION LEVEL</>. Если по какой-либо причине 
    вам не нравится завершение по клавише <literal>TAB</>, его можно отключить 
    в файле <filename>.inputrc</filename> в вашей домашней директории:
<programlisting>
$if psql
set disable-completion on
$endif
</programlisting>
    (Это возможность не <application>psql</application>, 
    а <application>Readline</application>. Читайте документацию к 
    <application>Readline</application> для дополнительной информации.)
    </para>
   </refsect3>
  </refsect2>
 </refsect1>


 <refsect1 id="app-psql-environment">
  <title id="app-psql-environment-title">Переменные окружения</title>

  <variablelist>

   <varlistentry>
    <term><envar>COLUMNS</envar></term>

    <listitem>
     <para>
      Если <literal>\pset columns</> равно нулю, управляет шириной формата вывода 
      <literal>wrapped</>, а также определяет нужно ли использовать пейджер и нужно ли 
      переключаться в вертикальный формат в режиме <literal>expanded auto</>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PAGER</envar></term>

    <listitem>
     <para>
      Если результат запроса не помещается на экране, он передается в эту команду 
      для отображения. Обычно это <literal>more</literal> или <literal>less</literal>. 
      Значение по умолчанию зависит от платформы. Использование пейджера можно отключить 
      с помощью команды <command>\pset</command>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PGDATABASE</envar></term>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGPORT</envar></term>
    <term><envar>PGUSER</envar></term>

    <listitem>
     <para>
      Параметры подключения по умолчанию (см. <xref linkend="libpq-envars">).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQL_EDITOR</envar></term>
    <term><envar>EDITOR</envar></term>
    <term><envar>VISUAL</envar></term>

    <listitem>
     <para>
      Редактор, используемый командами <command>\e</command> и <command>\ef</command>. 
      Переменные рассматриваются в перечисленном порядке. 
      Будет использовано значение первой установленной переменной.
     </para>

     <para>
      По умолчанию используются <filename>vi</filename> на Unix системах и 
      <filename>notepad.exe</filename> на Windows.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQL_EDITOR_LINENUMBER_ARG</envar></term>

    <listitem>
     <para>
      Если в командах <command>\e</command> или <command>\ef</command> 
      указан номер строки, эта переменная задает название опции командной строки, 
      которая используется для передачи номера строки в редактор. Для таких редакторов 
      как <productname>vi</> или <productname>Emacs</> это знак плюс. 
      Добавьте в конец значения пробел, если он требуется для разделения названия опции 
      и номера строки. Примеры:
<programlisting>
PSQL_EDITOR_LINENUMBER_ARG='+'
PSQL_EDITOR_LINENUMBER_ARG='--line '
</programlisting>
     </para>

     <para>
      Значение по умолчанию <literal>+</literal> на Unix системах 
      (соответствует редактору по умолчанию <filename>vi</filename> и многим другим 
      распространенным редакторам). На платформе Windows нет значения по умолчанию.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQL_HISTORY</envar></term>

    <listitem>
     <para>
      Альтернативное расположение файла с историей команд. 
      Допускается использование тильды (<literal>~</literal>).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PSQLRC</envar></term>

    <listitem>
     <para>
      Альтернативное расположение пользовательского файла <filename>.psqlrc</filename>. 
      Допускается использование тильды (<literal>~</literal>).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>SHELL</envar></term>

    <listitem>
     <para>
      Команда операционной системы, выполняемая мета-командой <command>\!</command>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>TMPDIR</envar></term>

    <listitem>
     <para>
      Каталог для хранения временных файлов. По умолчанию <filename>/tmp</filename>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Эта утилита, как и большинство других утилит <productname>PostgreSQL</>, 
   также использует переменные среды, поддерживаемые <application>libpq</>
   (см. <xref linkend="libpq-envars">).
  </para>

 </refsect1>


 <refsect1>
  <title>Файлы</title>

 <variablelist>
  <varlistentry>
   <term><filename>psqlrc</filename> и <filename>~/.psqlrc</filename></term>
   <listitem>
    <para>
     При запуске без опций <option>-X</option> или <option>-c</option> 
     <application>psql</application> пытается считать и выполнить команды из общесистемного 
     стартового файла (<filename>psqlrc</filename>), а затем из персонального стартового 
     файла пользователя (<filename>~/.psqlrc</filename>). Это происходит после подключения 
     к базе данных, но до получения обычных команд. Эти файлы могут использоваться 
     для настройки клиента и/или сервера, как правило, с помощью команд 
     <command>\set</command> и <command>SET</command>.
    </para>
    <para>
     Общесистемный стартовый файл называется <filename>psqlrc</filename>, 
     он будет искаться в каталоге установке <quote>конфигурация системы</>. Для того чтобы 
     узнать этот каталог, надежнее всего выполнить команду 
     <literal>pg_config --sysconfdir</>. По умолчанию он расположен в 
     <filename>../etc/</> относительно каталога, содержащего исполняемые файлы 
     <productname>PostgreSQL</productname>. Имя этого каталога можно задать явно 
     через переменную окружения <envar>PGSYSCONFDIR</envar>.
    </para>
    <para>
     Персональный стартовый файл пользователя называется <filename>.psqlrc</filename>, 
     он будет искаться в домашнем каталоге вызывающего пользователя. В Windows, 
     где отсутствует такое понятие, персональный стартовый файл называется 
     <filename>%APPDATA%\postgresql\psqlrc.conf</filename>.
     Расположение персонального стартового файла пользователя можно задать явно 
     через переменную окружения <envar>PSQLRC</envar>.
    </para>
    <para>
     Оба стартовых файла общесистемный и персональный можно привязать к конкретной 
     версии <application>psql</application>. Для этого в конце имени файла нужно добавить 
     номер мажорного или минорного релиза <productname>PostgreSQL</productname>, 
     например <filename>~/.psqlrc-9.2</filename> или <filename>~/.psqlrc-9.2.5</filename>. 
     При наличии нескольких файлов, файл с более детальным номером версии 
     будет иметь предпочтение.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><filename>.psql_history</filename></term>
   <listitem>
    <para>
     История командной строки хранится в файле <filename>~/.psql_history</filename> 
     или <filename>%APPDATA%\postgresql\psql_history</filename> на Windows.
    </para>
    <para>
     Расположение файла истории можно задать явно через переменную окружения 
     <envar>PSQL_HISTORY</envar>.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </refsect1>


 <refsect1>
  <title>Замечания</title>

    <itemizedlist>
      <listitem>
      <para>
       В ранних версиях <application>psql</application> первый аргумент в однобуквенных 
       мета-командах мог начинаться сразу после самой команды, без промежуточных пробелов. 
       Начиная с <productname>PostgreSQL</productname> 8.4 это не разрешается.
      </para>
      </listitem>

      <listitem>
      <para>
      <application>psql</application> лучше всего работает с серверами той же или более 
      старой мажорной версии. Сбой мета-команды наиболее вероятен, если версия 
      сервера новее, чем версия <application>psql</application>. Однако, мета-команды 
      семейства <literal>\d</> должны работать с версиями сервера до 7.4, 
      хотя и необязательно с серверами новее, чем сам <application>psql</application>. 
      Общая функциональность запуска SQL команд и отображения результатов запросов 
      также должна работать на серверах с более новой мажорной версией, 
      но это не гарантируется во всех случаях.
      </para>
      <para>
       Если вы хотите подключаться к нескольким серверам с различными мажорными версиями, 
       рекомендуется использовать последнюю версию <application>psql</application>. 
       Кроме того можно сохранить копию <application>psql</application> от каждой 
       мажорной версии и использовать ту, которая соответствует версии сервера. 
       Но на практике, в этих дополнительных сложностях нет необходимости.
      </para>
      </listitem>

    </itemizedlist>
 </refsect1>


 <refsect1>
  <title>Замечания для пользователей Windows</title>

 <para>
  <application>psql</application> создан как <quote>консольное приложение</>. 
  Поскольку в Windows консольные окна используют кодировку символов отличную от той, 
  что используется для остальной системы, нужно проявить особую осторожность 
  при использовании 8-битных символов. 
  Если <application>psql</application> обнаружит проблемную кодовую страницу консоли, 
  он предупредит вас при запуске. Чтобы изменить кодовую страницу консоли, 
  необходимы две вещи:

   <itemizedlist>
    <listitem>
     <para>
      Задать кодовую страницу, выполнив <userinput>cmd.exe /c chcp 1251</userinput>. 
      (1251 это кодовая страница для России, замените на ваше значение.) 
      При использовании Cygwin, эту команду можно записать в 
      <filename>/etc/profile</filename>.
     </para>
    </listitem>

    <listitem>
     <para>
      Установите консольный шрифт в <literal>Lucida Console</>, потому что 
      растровый шрифт не работает с кодовой страницей ANSI.
     </para>
    </listitem>
   </itemizedlist></para>

 </refsect1>


 <refsect1 id="APP-PSQL-examples">
  <title id="APP-PSQL-examples-title">Примеры</title>

  <para>
  Первый пример показывает, что для ввода одной команды может потребоваться несколько строк.
  Обратите внимание, как меняется приглашение:
<programlisting>
testdb=&gt; <userinput>CREATE TABLE my_table (</userinput>
testdb(&gt; <userinput> first integer not null default 0,</userinput>
testdb(&gt; <userinput> second text)</userinput>
testdb-&gt; <userinput>;</userinput>
CREATE TABLE
</programlisting>
  Теперь посмотрим на определение таблицы:
<programlisting>
testdb=&gt; <userinput>\d my_table</userinput>
             Таблица "my_table"
 Колонка |  Тип    |    Модификаторы
---------+---------+--------------------
 first   | integer | NOT NULL DEFAULT 0
 second  | text    |

</programlisting>
  Теперь изменим приглашение на что-то более интересное:
<programlisting>
testdb=&gt; <userinput>\set PROMPT1 '%n@%m %~%R%# '</userinput>
peter@localhost testdb=&gt;
</programlisting>
  Предположим, что вы внесли данные в таблицу и хотите на них посмотреть:
<programlisting>
peter@localhost testdb=&gt; SELECT * FROM my_table;
 first | second
-------+--------
     1 | Один
     2 | Два
     3 | Три  
     4 | Четыре
(4 строки)

</programlisting>
  Таблицу можно вывести разными способами при помощи команды <command>\pset</command>:
<programlisting>
peter@localhost testdb=&gt; <userinput>\pset border 2</userinput>
Установлен стиль границ: 2.
peter@localhost testdb=&gt; <userinput>SELECT * FROM my_table;</userinput>
+-------+--------+
| first | second |
+-------+--------+
|     1 | Один   |
|     2 | Два    |
|     3 | Три    |
|     4 | Четыре |
+-------+--------+
(4 строки)

peter@localhost testdb=&gt; <userinput>\pset border 0</userinput>
Установлен стиль границ: 0.
peter@localhost testdb=&gt; <userinput>SELECT * FROM my_table;</userinput>
first second
----- ------
    1 Один
    2 Два
    3 Три  
    4 Четыре
(4 строки)

peter@localhost testdb=&gt; <userinput>\pset border 1</userinput>
Установлен стиль границ: 1.
peter@localhost testdb=&gt; <userinput>\pset format unaligned</userinput>
Формат вывода: unaligned.
peter@localhost testdb=&gt; <userinput>\pset fieldsep ','</userinput>
Разделитель полей: ",".
peter@localhost testdb=&gt; <userinput>\pset tuples_only</userinput>
Выводятся только кортежи.
peter@localhost testdb=&gt; <userinput>SELECT second, first FROM my_table;</userinput>
Один,1
Два,2
Три,3
Четыре,4
</programlisting>
  Альтернативно, можно использовать короткие команды:
<programlisting>
peter@localhost testdb=&gt; <userinput>\a \t \x</userinput>
Формат вывода: aligned.
Режим вывода только кортежей выключен.
Расширенный вывод включен.
peter@localhost testdb=&gt; <userinput>SELECT * FROM my_table;</userinput>
-[ RECORD 1 ]-
first  | 1
second | Один
-[ RECORD 2 ]-
first  | 2
second | Два
-[ RECORD 3 ]-
first  | 3
second | Три  
-[ RECORD 4 ]-
first  | 4
second | Четыре
</programlisting></para>

 </refsect1>

</refentry>
