msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-11-10 14:04+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: startslons.xml:3(title)
msgid "Slon daemons"
msgstr ""

#: startslons.xml:5(indexterm)
msgid "<primary>slon, running daemon</primary>"
msgstr ""

#: startslons.xml:7(para)
msgid ""
"The programs that actually perform &slony1; replication are the "
"<application>slon</application> daemons."
msgstr ""

#: startslons.xml:24(para)
msgid ""
"Each <application>slon</application> needs to be able to communicate quickly "
"with the database whose <quote>node controller</quote> it is. Therefore, if "
"a &slony1; cluster runs across some form of Wide Area Network, each slon "
"process should run on or nearby the databases each is controlling. If you "
"break this rule, no particular disaster should ensue, but the added latency "
"introduced to monitoring events on the slon's <quote>own node</quote> will "
"cause it to replicate in a <emphasis>somewhat</emphasis> less timely manner."
msgstr ""

#: startslons.xml:34(para)
msgid ""
"The very fastest results would be achieved by having each <application>slon</"
"application> run on the database server that it is servicing. If it runs "
"somewhere within a fast local network, performance will not be noticeably "
"degraded."
msgstr ""

#: startslons.xml:39(para)
msgid ""
"It is an attractive idea to run many of the <application>slon</application> "
"processes for a cluster on one machine, as this makes it easy to monitor "
"them both in terms of log files and process tables from one location. This "
"also eliminates the need to login to several hosts in order to look at log "
"files or to restart <application>slon</application> instances."
msgstr ""

#: startslons.xml:10(para)
msgid ""
"You need to run one <xref linkend=\"slon\"/> instance for each node in a "
"&slony1; cluster, whether you consider that node a <quote>master</quote> or "
"a <quote>slave</quote>. On &windows; when running as a service things are "
"slightly different. One slon service is installed, and a separate "
"configuration file registered for each node to be serviced by that machine. "
"The main service then manages the individual slons itself. Since a "
"<command>MOVE SET</command> or <command>FAILOVER</command> can switch the "
"roles of nodes, slon needs to be able to function for both providers and "
"subscribers. It is not essential that these daemons run on any particular "
"host, but there are some principles worth considering: <placeholder-1/>"
msgstr ""

#: startslons.xml:49(para)
msgid ""
"Do <emphasis>not</emphasis> run a slon that is responsible to service a "
"particular node across a WAN link if at all possible. Any problems with that "
"connection can kill the connection whilst leaving <quote>zombied</quote> "
"database connections on the node that (typically) will not die off for "
"around two hours. This prevents starting up another slon, as described in "
"the <link linkend=\"faq\"> FAQ </link> under <link linkend="
"\"multipleslonconnections\"> multiple slon connections</link>."
msgstr ""

#: startslons.xml:59(para)
msgid ""
"Historically, <application>slon</application> processes have been fairly "
"fragile, dying if they encounter just about any significant error. This "
"behaviour mandated running some form of <quote>watchdog</quote> which would "
"watch to make sure that if one <application>slon</application> fell over, it "
"would be replaced by another."
msgstr ""

#: startslons.xml:71(para)
msgid ""
"<filename>tools/altperl/slon_watchdog</filename> - an <quote>early</quote> "
"version that basically wraps a loop around the invocation of <xref linkend="
"\"slon\"/>, restarting any time it falls over"
msgstr ""

#: startslons.xml:77(para)
msgid ""
"<filename>tools/altperl/slon_watchdog2</filename> - a somewhat more "
"intelligent version that periodically polls the database, checking to see if "
"a <command>SYNC</command> has taken place recently. We have had VPN "
"connections that occasionally fall over without signalling the application, "
"so that the <xref linkend=\"slon\"/> stops working, but doesn't actually "
"die; this polling addresses that issue."
msgstr ""

#: startslons.xml:66(para)
msgid ""
"There are two <quote>watchdog</quote> scripts currently available in the "
"&slony1; source tree: <placeholder-1/>"
msgstr ""

#: startslons.xml:87(para)
msgid ""
"The <filename>slon_watchdog2</filename> script is probably "
"<emphasis>usually</emphasis> the preferable thing to run. It was at one "
"point not preferable to run it whilst subscribing a very large replication "
"set where it is expected to take many hours to do the <command>COPY SET</"
"command> (the main event that processes a <command>SUBSCRIBE SET</command> "
"request). The problem that came up in that case was that it figured that "
"since it hasn't done a <command>SYNC</command> in 2 hours, something was "
"broken requiring restarting slon, thereby restarting the <command>COPY SET</"
"command> event. More recently, the script has been changed to detect "
"<command>COPY SET</command> in progress."
msgstr ""

#: startslons.xml:99(para)
msgid ""
"In &slony1; version 1.2, the structure of the <application>slon</"
"application> has been revised fairly substantially to make it much less "
"fragile. The main process should only die off if you expressly signal it "
"asking it to be killed."
msgstr ""

#: startslons.xml:104(para)
msgid ""
"A new approach is available in the <xref linkend=\"launchclusters\"/> script "
"which uses <application>slon</application> configuration files and which may "
"be invoked as part of your system startup process."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: startslons.xml:0(None)
msgid "translator-credits"
msgstr ""
