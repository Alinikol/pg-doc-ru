msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-11-10 14:04+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: subscribenodes.xml:3(title)
msgid "Subscribing Nodes"
msgstr ""

#: subscribenodes.xml:5(indexterm)
msgid "<primary>subscribing nodes</primary>"
msgstr ""

#: subscribenodes.xml:7(para)
msgid ""
"Before you subscribe a node to a set, be sure that you have <xref linkend="
"\"slon\"/> processes running for both the provider and the new subscribing "
"node. If you don't have slons running, nothing will happen, and you'll beat "
"your head against a wall trying to figure out what is going on."
msgstr ""

#: subscribenodes.xml:18(programlisting)
#, no-wrap
msgid ""
"try {\n"
"  echo 'Subscribing sets';\n"
"  subscribe set (id = 1, provider=1, receiver=2, forward=yes);\n"
"  subscribe set (id = 1, provider=1, receiver=3, forward=yes);\n"
"  subscribe set (id = 1, provider=1, receiver=4, forward=yes);\n"
"} on error {\n"
"  echo 'Could not subscribe the sets!';\n"
"  exit -1;\n"
"}"
msgstr ""

#: subscribenodes.xml:13(para)
msgid ""
"Subscribing a node to a set is done by issuing the <xref linkend=\"slonik\"/"
"> command <xref linkend=\"stmtsubscribeset\"/>. It may seem tempting to try "
"to subscribe several nodes to a set within a single try block like this: "
"<placeholder-1/>"
msgstr ""

#: subscribenodes.xml:31(para)
msgid ""
"But you are just asking for trouble if you try to subscribe sets in that "
"fashion. The proper procedure is to subscribe one node at a time, and to "
"check the logs and databases before you move onto subscribing the next node "
"to the set. It is also worth noting that the <quote>success</quote> within "
"the above <xref linkend=\"slonik\"/> try block does not imply that nodes 2, "
"3, and 4 have all been successfully subscribed. It merely indicates that the "
"slonik commands were successfully received by the <application>slon</"
"application> running on the origin node."
msgstr ""

#: subscribenodes.xml:41(para)
msgid ""
"A typical sort of problem that will arise is that a cascaded subscriber is "
"looking for a provider that is not ready yet. In that failure case, that "
"subscriber node will <emphasis>never</emphasis> pick up the provider. It "
"will get <quote>stuck</quote> waiting for a past event to take place. The "
"other nodes will be convinced that it is successfully subscribed (because no "
"error report ever made it back to them); a request to unsubscribe the node "
"will be <quote>blocked</quote> because the node is stuck on the attempt to "
"subscribe it."
msgstr ""

#: subscribenodes.xml:51(para)
msgid ""
"When you subscribe a node to a set, you should see something like this in "
"your <application>slon</application> logs for the provider node: <screen>\n"
"DEBUG2 remoteWorkerThread_3: Received event 3,1059 SUBSCRIBE_SET\n"
"</screen>"
msgstr ""

#: subscribenodes.xml:59(para)
msgid ""
"You should also start seeing log entries like this in the <application>slon</"
"application> logs for the subscribing node: <screen>\n"
"DEBUG2 remoteWorkerThread_1: copy table public.my_table\n"
"</screen>"
msgstr ""

#: subscribenodes.xml:66(para)
msgid ""
"It may take some time for larger tables to be copied from the provider node "
"to the new subscriber. If you check the pg_stat_activity table on the "
"provider node, you should see a query that is copying the table to stdout."
msgstr ""

#: subscribenodes.xml:71(para)
msgid ""
"The table <envar>sl_subscribe</envar> on both the provider, and the new "
"subscriber should contain entries for the new subscription: <screen>\n"
" sub_set | sub_provider | sub_receiver | sub_forward | sub_active\n"
"---------+--------------+--------------+-------------+------------\n"
"      1  |            1 |            2 |           t |         t\n"
"</screen>"
msgstr ""

#: subscribenodes.xml:80(para)
msgid ""
"A final test is to insert a row into one of the replicated tables on the "
"origin node, and verify that the row is copied to the new subscriber."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: subscribenodes.xml:0(None)
msgid "translator-credits"
msgstr ""
