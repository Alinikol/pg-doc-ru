msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-11-10 14:04+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: usingslonik.xml:3(title)
msgid "Using Slonik"
msgstr ""

#: usingslonik.xml:5(indexterm)
msgid "<primary>slonik, usage</primary>"
msgstr ""

#: usingslonik.xml:14(para)
msgid ""
"If you are using &slony1; as a <quote>master/slave</quote> replication "
"system with one <quote>master</quote> node and one <quote>slave</quote> "
"node, it may be sufficiently mnemonic to call the <quote>master</quote> node "
"1 and the <quote>slave</quote> node 2."
msgstr ""

#: usingslonik.xml:20(para)
msgid ""
"Unfortunately, as the number of nodes increases, the mapping of IDs to nodes "
"becomes way less obvious, particularly if you have a cluster where the "
"origin might shift from node to node over time."
msgstr ""

#: usingslonik.xml:25(para)
msgid ""
"Similarly, if there is only one replication set, it's fine for that to be "
"<quote>set 1,</quote> but if there are a multiplicity of sets, the numbering "
"involved in using set numbers may grow decreasingly intuitive."
msgstr ""

#: usingslonik.xml:30(para)
msgid ""
"People have observed that <application>Slonik</application> does not provide "
"any notion of iteration. It is common to want to create a set of similar "
"<xref linkend=\"stmtstorepath\"/> entries, since, in most cases, hosts will "
"likely access a particular server via the same host name or IP address."
msgstr ""

#: usingslonik.xml:37(para)
msgid ""
"Users seem interested in wrapping everything possible in <command>TRY</"
"command> blocks, which is regrettably somewhat <emphasis>less</emphasis> "
"useful than might be hoped..."
msgstr ""

#: usingslonik.xml:7(para)
msgid ""
"It's a bit of a pain writing <application>Slonik</application> scripts by "
"hand, particularly as you start working with &slony1; clusters that may be "
"comprised of increasing numbers of nodes and sets. Some problems that have "
"been noticed include the following: <placeholder-1/>"
msgstr ""

#: usingslonik.xml:48(para)
msgid "Named nodes, named sets"
msgstr ""

#: usingslonik.xml:50(para)
msgid ""
"This is supported in &slony1; 1.1 by the <xref linkend=\"stmtdefine\"/> and "
"<xref linkend=\"stmtinclude\"/> statements."
msgstr ""

#: usingslonik.xml:54(para)
msgid ""
"The use of <xref linkend=\"stmtinclude\"/> to allow creating <quote>preamble "
"files</quote> has proven an invaluable tool to reduce errors. The preamble "
"file is set up <emphasis>once</emphasis>, verified <emphasis>once</"
"emphasis>, and then that verified script may be used with confidence for "
"each slonik script."
msgstr ""

#: usingslonik.xml:62(para)
msgid "Looping and control constructs"
msgstr ""

#: usingslonik.xml:64(para)
msgid ""
"It seems to make little sense to create a fullscale parser as Yet Another "
"Little Language grows into a rather larger one. There are plenty of "
"scripting languages out there that can be used to construct Slonik scripts; "
"it is unattractive to force yet another one on people."
msgstr ""

#: usingslonik.xml:44(para)
msgid ""
"These have assortedly pointed to requests for such enhancements as: "
"<placeholder-1/>"
msgstr ""

#: usingslonik.xml:72(para)
msgid ""
"There are several ways to work around these issues that have been seen "
"<quote>in the wild</quote>:"
msgstr ""

#: usingslonik.xml:77(para)
msgid "Embedding generation of slonik inside shell scripts"
msgstr ""

#: usingslonik.xml:80(para)
msgid ""
"The test bed found in the <filename>src/ducttape</filename> directory takes "
"this approach."
msgstr ""

#: usingslonik.xml:83(para)
msgid ""
"The <link linkend=\"altperl\"> altperl tools </link> use Perl code to "
"generate Slonik scripts."
msgstr ""

#: usingslonik.xml:86(para)
msgid ""
"You define the cluster's configuration as a set of Perl objects; each script "
"walks through the Perl objects as needed to generate a slonik script for "
"that script's purpose."
msgstr ""

#: usingslonik.xml:94(title)
msgid "Embedding Slonik in Shell Scripts"
msgstr ""

#: usingslonik.xml:96(indexterm)
msgid "<primary> slonik, embedded in shell scripts </primary>"
msgstr ""

#: usingslonik.xml:98(para)
msgid ""
"As mentioned earlier, there are numerous &slony1; test scripts in "
"<filename>src/ducttape</filename> that embed the generation of Slonik inside "
"the shell script."
msgstr ""

#: usingslonik.xml:106(programlisting)
#, no-wrap
msgid ""
"DB1=slony_test1\n"
"DB2=slony_test2\n"
"slonik &lt;&lt;_EOF_\n"
"\tcluster name = T1;\n"
"\tnode 1 admin conninfo = 'dbname=$DB1';\n"
"\tnode 2 admin conninfo = 'dbname=$DB2';\n"
"\n"
"\ttry {\n"
"\t\tcreate set (id = 1, origin = 1, comment = \n"
"                            'Set 1 - pgbench tables');\n"
"\t\tset add table (set id = 1, origin = 1,\n"
"\t\t\tid = 1, fully qualified name = 'public.accounts',\n"
"\t\t\tcomment = 'Table accounts');\n"
"\t\tset add table (set id = 1, origin = 1,\n"
"\t\t\tid = 2, fully qualified name = 'public.branches',\n"
"\t\t\tcomment = 'Table branches');\n"
"\t\tset add table (set id = 1, origin = 1,\n"
"\t\t\tid = 3, fully qualified name = 'public.tellers',\n"
"\t\t\tcomment = 'Table tellers');\n"
"\t\tset add table (set id = 1, origin = 1,\n"
"\t\t\tid = 4, fully qualified name = 'public.history',\n"
"\t\t\tcomment = 'Table accounts');\n"
"\t}\n"
"\ton error {\n"
"\t\texit 1;\n"
"\t}\n"
"_EOF_"
msgstr ""

#: usingslonik.xml:102(para)
msgid ""
"They mostly <emphasis> don't </emphasis> do this in a terribly sophisticated "
"way. Typically, they use the following sort of structure: <placeholder-1/>"
msgstr ""

#: usingslonik.xml:141(programlisting)
#, no-wrap
msgid ""
"CLUSTER=T1\n"
"DB1=slony_test1\n"
"DB2=slony_test2\n"
"PREAMBLE=\"cluster name = $CLUSTER\n"
"node 1 admin conninfo = 'dbname=$DB1';\n"
"node 2 admin conninfo = 'dbname=$DB2';\n"
"\""
msgstr ""

#: usingslonik.xml:136(para)
msgid ""
"A more sophisticated approach might involve defining some common components, "
"notably the <quote>preamble</quote> that consists of the <xref linkend="
"\"clustername\"/> <xref linkend=\"admconninfo\"/> commands that are common "
"to every Slonik script, thus: <placeholder-1/>"
msgstr ""

#: usingslonik.xml:151(para)
msgid ""
"The <envar>PREAMBLE</envar> value could then be reused over and over again "
"if the shell script invokes <command>slonik</command> multiple times. You "
"might also consider using <xref linkend=\"stmtinclude\"/> and place the "
"preamble in a file that is <command>include</command>d."
msgstr ""

#: usingslonik.xml:161(programlisting)
#, no-wrap
msgid ""
"origin=1\n"
"subscriber=2\n"
"mainset=1\n"
"slonik &lt;&lt;_EOF_\n"
"$PREAMBLE\n"
"try {\n"
"\tcreate set (id = $mainset, origin = $origin, \n"
"                    comment = 'Set $mainset - pgbench tables');\n"
"\tset add table (set id = $mainset, origin = $origin,\n"
"\t\tid = 1, fully qualified name = 'public.accounts',\n"
"\t\tcomment = 'Table accounts');\n"
"\tset add table (set id = $mainset, origin = $origin,\n"
"\t\tid = 2, fully qualified name = 'public.branches',\n"
"\t\tcomment = 'Table branches');\n"
"\tset add table (set id = $mainset, origin = $origin,\n"
"\t\tid = 3, fully qualified name = 'public.tellers',\n"
"\t\tcomment = 'Table tellers');\n"
"\tset add table (set id = $mainset, origin = $origin,\n"
"\t\tid = 4, fully qualified name = 'public.history',\n"
"\t\tcomment = 'Table accounts');\n"
"} on error {\n"
"\texit 1;\n"
"}\n"
"_EOF_"
msgstr ""

#: usingslonik.xml:158(para)
msgid ""
"Shell variables provide a simple way to assign names to sets and nodes: "
"<placeholder-1/>"
msgstr ""

#: usingslonik.xml:191(programlisting)
#, no-wrap
msgid ""
"# Basic configuration\n"
"origin=1\n"
"subscriber=2\n"
"mainset=1\n"
"# List of tables to replicate\n"
"TABLES=\"accounts branches tellers history\"\n"
"ADDTABLES=\"\"\n"
"tnum=1\n"
"for table in `echo $TABLES`; do\n"
"  ADDTABLES=\"$ADDTABLES\n"
"   set add table ($set id = $mainset, origin = $origin,\n"
"   id = $tnum, fully qualified name = 'public.$table',\n"
"   comment = 'Table $tname');\n"
"\"\n"
"  let \"tnum=tnum+1\"\n"
"done\n"
"slonik &lt;&lt;_EOF_\n"
"$PREAMBLE\n"
"try {\n"
"\tcreate set (id = $mainset, origin = $origin, \n"
"                    comment = 'Set $mainset - pgbench tables');\n"
"$ADDTABLES\n"
"} on error {\n"
"\texit 1;\n"
"}\n"
"_EOF_"
msgstr ""

#: usingslonik.xml:188(para)
msgid ""
"The script might be further enhanced to loop through the list of tables as "
"follows: <placeholder-1/>"
msgstr ""

#: usingslonik.xml:220(para)
msgid ""
"That is of somewhat dubious value if you only have 4 tables, but eliminating "
"errors resulting from enumerating large lists of configuration by hand will "
"make this pretty valuable for the larger examples you'll find in <quote>real "
"life.</quote>"
msgstr ""

#: usingslonik.xml:230(para)
msgid ""
"<quote>Record</quote> data structures that allow assigning things in parallel"
msgstr ""

#: usingslonik.xml:233(para)
msgid ""
"Functions, procedures, or subroutines, allowing you to implement useful "
"functionality once, and then refer to it multiple times within a script"
msgstr ""

#: usingslonik.xml:237(para)
msgid ""
"Some sort of <quote>module import</quote> system so that common "
"functionality can be shared across many scripts"
msgstr ""

#: usingslonik.xml:225(para)
msgid ""
"You can do even more sophisticated things than this if your scripting "
"language supports things like: <placeholder-1/>"
msgstr ""

#: usingslonik.xml:243(para)
msgid ""
"If you can depend on having <ulink url=\"http://www.gnu.org/software/bash/"
"bash.html\"> Bash</ulink>, <ulink url=\"http://www.zsh.org/\"> zsh</ulink>, "
"or <ulink url=\"http://www.kornshell.com/\"> Korn shell</ulink> available, "
"well, those are all shells with extensions supporting reasonably "
"sophisticated data structures and module systems. On Linux, Bash is fairly "
"ubiquitous; on commercial <trademark>UNIX</trademark>, Korn shell is fairly "
"ubiquitous; on BSD, <quote>sophisticated</quote> shells are an option rather "
"than a default."
msgstr ""

#: usingslonik.xml:253(para)
msgid ""
"At that point, it makes sense to start looking at other scripting languages, "
"of which Perl is the most ubiquitous, being widely available on Linux, "
"<trademark>UNIX</trademark>, and BSD."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: usingslonik.xml:0(None)
msgid "translator-credits"
msgstr ""
