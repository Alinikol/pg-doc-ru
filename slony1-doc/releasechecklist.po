msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2016-11-10 14:04+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: releasechecklist.xml:3(title)
msgid "Release Checklist"
msgstr ""

#: releasechecklist.xml:5(indexterm)
msgid "<primary>release checklist</primary>"
msgstr ""

#: releasechecklist.xml:7(para)
msgid "Here are things that should be done whenever a release is prepared:"
msgstr ""

#: releasechecklist.xml:10(para)
msgid ""
"Positive build reports for each supported platform - although it is arguably "
"less necessary for a comprehensive list if we are releasing a minor upgrade"
msgstr ""

#: releasechecklist.xml:14(para)
msgid "Some kind of Standard Test Plan"
msgstr ""

#: releasechecklist.xml:16(para)
msgid ""
"If the release modified the set of version-specific SQL files in "
"<filename>src/backend</filename> (<emphasis>e.g.</emphasis> - it added a new "
"<filename>slony1_base.v83.sql</filename> or <filename>slony1_funcs.v83.sql</"
"filename>), or if we have other changes to the shape of &postgres; version "
"support, the function <function>load_slony_functions() </function> in "
"<filename>src/slonik/slonik.c</filename> needs to be revised to reflect the "
"new shape of things."
msgstr ""

#: releasechecklist.xml:26(para)
msgid ""
"The new release needs to be added to function <function>upgradeSchema(text)</"
"function> in <filename>src/backend/slony1_funcs.sql</filename>."
msgstr ""

#: releasechecklist.xml:30(para)
msgid ""
"This takes place in a <quote>cross-branch</quote> fashion; if we add version "
"1.1.9, in the 1.1 branch, then version 1.1.9 needs to be added to the 1.2 "
"branch as well as to later branches (<emphasis>e.g.</emphasis> - 1.3, 1.4, "
"HEAD). Earlier branches will normally not need to be made aware of versions "
"added to later branches."
msgstr ""

#: releasechecklist.xml:37(para)
msgid ""
"This was not true for version 2 - version 2.0 was different enough from "
"earlier versions that we rejected having a direct upgrade from 1.x to 2.0, "
"so there are <emphasis>no</emphasis> versions in 1.x branches in "
"<function>upgradeSchema(text)</function> for &slony1; version 2.0."
msgstr ""

#: releasechecklist.xml:43(para)
msgid "Binary RPM packages"
msgstr ""

#: releasechecklist.xml:45(para)
msgid ""
"If the release is a <quote>.0</quote> one, we need to open a new STABLE "
"branch"
msgstr ""

#: releasechecklist.xml:48(command)
msgid "git checkout HEAD"
msgstr ""

#: releasechecklist.xml:49(command)
msgid "git checkout -b REL_3_0_STABLE"
msgstr ""

#: releasechecklist.xml:52(para)
msgid ""
"Tag with the release ID. For version 1.1.2, this would be <envar>REL_1_1_2 </"
"envar>"
msgstr ""

#: releasechecklist.xml:55(command)
msgid "git tag -a REL_1_1_2"
msgstr ""

#: releasechecklist.xml:57(para)
msgid ""
"Check out an exported copy via: <command>git archive REL_1_1_2 -o /tmp/"
"slony1-engine-1.0.2.tar </command>"
msgstr ""

#: releasechecklist.xml:61(para)
msgid ""
"Run <application>autoconf</application> so as to regenerate "
"<filename>configure</filename> from <filename>configure.ac</filename>"
msgstr ""

#: releasechecklist.xml:65(para)
msgid ""
"Purge directory <filename>autom4te.cache</filename> so it is not included in "
"the build"
msgstr ""

#: releasechecklist.xml:66(para)
msgid ""
"Does not need to be done by hand - the later <command> make distclean </"
"command> step does this for you."
msgstr ""

#: releasechecklist.xml:69(para)
msgid "Run <filename>tools/release_checklist.sh</filename>"
msgstr ""

#: releasechecklist.xml:71(para)
msgid ""
"This does a bunch of consistency checks to make sure that various files that "
"are supposed to contain version numbers contain consistent values."
msgstr ""

#: releasechecklist.xml:75(para)
msgid "For instance, configure should contain, for release 1.1.2:"
msgstr ""

#: releasechecklist.xml:77(para)
msgid "PACKAGE_VERSION=REL_1_1_2"
msgstr ""

#: releasechecklist.xml:79(para)
msgid "PACKAGE_STRING=slony1 REL_1_1_2"
msgstr ""

#: releasechecklist.xml:83(para)
msgid ""
"<filename> config.h.in </filename> needs to contain the version number in "
"two forms; the definitions for <envar>SLONY_I_VERSION_STRING</envar> and "
"<envar>SLONY_I_VERSION_STRING_DEC</envar> both need to be updated."
msgstr ""

#: releasechecklist.xml:89(para)
msgid ""
"<filename>src/backend/slony1_funcs.sql</filename> has major/minor/patch "
"versions in functions <function>slonyVersionMajor()</function>, "
"<function>slonyVersionMinor()</function>, and "
"<function>slonyVersionPatchlevel()</function>. These need to be assigned "
"<quote>by hand</quote> at this point."
msgstr ""

#: releasechecklist.xml:96(para)
msgid ""
"It sure would be nice if more of these could be assigned automatically, "
"somehow."
msgstr ""

#: releasechecklist.xml:99(para)
msgid ""
"<emphasis>Don't</emphasis> commit the new <filename>configure</filename>; we "
"shouldn't be tracking this in Git."
msgstr ""

#: releasechecklist.xml:103(para)
msgid ""
"make sure that the generated files from .l and .y are created, for example "
"<filename>slony/conf-file.[ch]</filename>"
msgstr ""

#: releasechecklist.xml:106(para)
msgid ""
"Currently this is best done by issuing <command> ./configure &amp;&amp; make "
"all &amp;&amp; make clean</command> but that is a somewhat ugly approach."
msgstr ""

#: releasechecklist.xml:109(para)
msgid ""
"Slightly better may be <command> ./configure &amp;&amp; make src/slon/conf-"
"file.c src/slonik/parser.c src/slonik/scan.c </command>"
msgstr ""

#: releasechecklist.xml:113(para)
msgid ""
"Make sure that generated Makefiles and such from the previous step(s) are "
"removed."
msgstr ""

#: releasechecklist.xml:116(para)
msgid "<command>make distclean</command> will do that..."
msgstr ""

#: releasechecklist.xml:119(para)
msgid ""
"Note that <command>make distclean</command> also clears out "
"<filename>autom4te.cache</filename>, thus obsoleting some former steps that "
"suggested that it was needful to delete them."
msgstr ""

#: releasechecklist.xml:124(para)
msgid ""
"Generate HTML tarball, and RTF/PDF, if possible... Note that the HTML "
"version should include <filename>*.html</filename> (duh!), <filename>*.jpg</"
"filename>, <filename>*.png</filename>, and <filename>*.css</filename>"
msgstr ""

#: releasechecklist.xml:137(para)
msgid ""
"The first time <command>make html</command> is run, the file <filename>HTML."
"index</filename> does not yet exist."
msgstr ""

#: releasechecklist.xml:140(para)
msgid ""
"When <application>jade</application> is run, against the document, a side-"
"effect is to generate <filename>HTML.index</filename>, extracting all index "
"tags from the &slony1; documentation."
msgstr ""

#: releasechecklist.xml:145(para)
msgid ""
"The second time <command>make html</command> is run, <filename>HTML.index</"
"filename> is transformed into <filename>bookindex.sgml</filename>, which "
"<application>jade</application> may then use to generate a nice <link "
"linkend=\"bookindex\">index page</link> indicating all the index entries "
"included in the documentation tree."
msgstr ""

#: releasechecklist.xml:129(para)
msgid ""
"Note that, if starting from a <quote>clean</quote> copy of the "
"documentation, in order to properly build the HTML tarball, it is necessary "
"to run <command>make html</command> <emphasis>twice</emphasis>, in order for "
"the document index to be properly constructed. <placeholder-1/>"
msgstr ""

#: releasechecklist.xml:156(para)
msgid ""
"Run <command>make clean</command> in <filename>doc/adminguide</filename> "
"before generating the tarball in order that <filename>bookindex.sgml</"
"filename> is NOT part of the tarball"
msgstr ""

#: releasechecklist.xml:161(para)
msgid ""
"Alternatively, delete <filename>doc/adminguide/bookindex.sgml </filename>"
msgstr ""

#: releasechecklist.xml:164(para)
msgid ""
"Rename the directory (<emphasis>e.g.</emphasis> - <filename>slony1-engine</"
"filename>) to a name based on the release, <emphasis>e.g.</emphasis> - "
"<filename>slony1-1.1.2</filename>"
msgstr ""

#: releasechecklist.xml:169(para)
msgid ""
"Generate a tarball - <command>tar tfvj slony1-1.1.2.tar.bz2 slony1-1.1.2 </"
"command>"
msgstr ""

#: releasechecklist.xml:172(para)
msgid ""
"Build the administrative documentation, and build a tarball as "
"<filename>slony1-1.1.2-html.tar.bz2</filename>"
msgstr ""

#: releasechecklist.xml:175(para)
msgid "Make sure that the docs are inside a subdir in the tarball."
msgstr ""

#: releasechecklist.xml:178(para)
msgid ""
"Put these tarballs in a temporary area, and notify everyone that they should "
"test them out ASAP based on the Standard Test Plan."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: releasechecklist.xml:0(None)
msgid "translator-credits"
msgstr ""
